/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1GoogleCloudStorage struct for V1GoogleCloudStorage
type V1GoogleCloudStorage struct {
	BucketName *string `json:"bucketName,omitempty"`
}

// NewV1GoogleCloudStorage instantiates a new V1GoogleCloudStorage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1GoogleCloudStorage() *V1GoogleCloudStorage {
	this := V1GoogleCloudStorage{}
	return &this
}

// NewV1GoogleCloudStorageWithDefaults instantiates a new V1GoogleCloudStorage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1GoogleCloudStorageWithDefaults() *V1GoogleCloudStorage {
	this := V1GoogleCloudStorage{}
	return &this
}

// GetBucketName returns the BucketName field value if set, zero value otherwise.
func (o *V1GoogleCloudStorage) GetBucketName() string {
	if o == nil || o.BucketName == nil {
		var ret string
		return ret
	}
	return *o.BucketName
}

// GetBucketNameOk returns a tuple with the BucketName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1GoogleCloudStorage) GetBucketNameOk() (*string, bool) {
	if o == nil || o.BucketName == nil {
		return nil, false
	}
	return o.BucketName, true
}

// HasBucketName returns a boolean if a field has been set.
func (o *V1GoogleCloudStorage) HasBucketName() bool {
	if o != nil && o.BucketName != nil {
		return true
	}

	return false
}

// SetBucketName gets a reference to the given string and assigns it to the BucketName field.
func (o *V1GoogleCloudStorage) SetBucketName(v string) {
	o.BucketName = &v
}

func (o V1GoogleCloudStorage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BucketName != nil {
		toSerialize["bucketName"] = o.BucketName
	}
	return json.Marshal(toSerialize)
}

type NullableV1GoogleCloudStorage struct {
	value *V1GoogleCloudStorage
	isSet bool
}

func (v NullableV1GoogleCloudStorage) Get() *V1GoogleCloudStorage {
	return v.value
}

func (v *NullableV1GoogleCloudStorage) Set(val *V1GoogleCloudStorage) {
	v.value = val
	v.isSet = true
}

func (v NullableV1GoogleCloudStorage) IsSet() bool {
	return v.isSet
}

func (v *NullableV1GoogleCloudStorage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1GoogleCloudStorage(val *V1GoogleCloudStorage) *NullableV1GoogleCloudStorage {
	return &NullableV1GoogleCloudStorage{value: val, isSet: true}
}

func (v NullableV1GoogleCloudStorage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1GoogleCloudStorage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


