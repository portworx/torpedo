/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1ListAvailableApplicationsResponse struct for V1ListAvailableApplicationsResponse
type V1ListAvailableApplicationsResponse struct {
	Applications []V1Application `json:"applications,omitempty"`
}

// NewV1ListAvailableApplicationsResponse instantiates a new V1ListAvailableApplicationsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ListAvailableApplicationsResponse() *V1ListAvailableApplicationsResponse {
	this := V1ListAvailableApplicationsResponse{}
	return &this
}

// NewV1ListAvailableApplicationsResponseWithDefaults instantiates a new V1ListAvailableApplicationsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ListAvailableApplicationsResponseWithDefaults() *V1ListAvailableApplicationsResponse {
	this := V1ListAvailableApplicationsResponse{}
	return &this
}

// GetApplications returns the Applications field value if set, zero value otherwise.
func (o *V1ListAvailableApplicationsResponse) GetApplications() []V1Application {
	if o == nil || o.Applications == nil {
		var ret []V1Application
		return ret
	}
	return o.Applications
}

// GetApplicationsOk returns a tuple with the Applications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ListAvailableApplicationsResponse) GetApplicationsOk() ([]V1Application, bool) {
	if o == nil || o.Applications == nil {
		return nil, false
	}
	return o.Applications, true
}

// HasApplications returns a boolean if a field has been set.
func (o *V1ListAvailableApplicationsResponse) HasApplications() bool {
	if o != nil && o.Applications != nil {
		return true
	}

	return false
}

// SetApplications gets a reference to the given []V1Application and assigns it to the Applications field.
func (o *V1ListAvailableApplicationsResponse) SetApplications(v []V1Application) {
	o.Applications = v
}

func (o V1ListAvailableApplicationsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Applications != nil {
		toSerialize["applications"] = o.Applications
	}
	return json.Marshal(toSerialize)
}

type NullableV1ListAvailableApplicationsResponse struct {
	value *V1ListAvailableApplicationsResponse
	isSet bool
}

func (v NullableV1ListAvailableApplicationsResponse) Get() *V1ListAvailableApplicationsResponse {
	return v.value
}

func (v *NullableV1ListAvailableApplicationsResponse) Set(val *V1ListAvailableApplicationsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ListAvailableApplicationsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ListAvailableApplicationsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ListAvailableApplicationsResponse(val *V1ListAvailableApplicationsResponse) *NullableV1ListAvailableApplicationsResponse {
	return &NullableV1ListAvailableApplicationsResponse{value: val, isSet: true}
}

func (v NullableV1ListAvailableApplicationsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ListAvailableApplicationsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


