/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// Pdsdeploymentconfigupdatev1StatusPhase Enum for Phase of the Deployment config update.   - PHASE_UNSPECIFIED: Phase is unspecified.  - FAILED: Deployment config update failed.  - QUEUED: Deployment config update is queued.  - COMPLETED: Deployment config update is completed.  - REQUEUED: Deployment config update is requeued.
type Pdsdeploymentconfigupdatev1StatusPhase string

// List of pdsdeploymentconfigupdatev1StatusPhase
const (
	PHASE_UNSPECIFIED Pdsdeploymentconfigupdatev1StatusPhase = "PHASE_UNSPECIFIED"
	FAILED Pdsdeploymentconfigupdatev1StatusPhase = "FAILED"
	QUEUED Pdsdeploymentconfigupdatev1StatusPhase = "QUEUED"
	COMPLETED Pdsdeploymentconfigupdatev1StatusPhase = "COMPLETED"
	REQUEUED Pdsdeploymentconfigupdatev1StatusPhase = "REQUEUED"
)

// All allowed values of Pdsdeploymentconfigupdatev1StatusPhase enum
var AllowedPdsdeploymentconfigupdatev1StatusPhaseEnumValues = []Pdsdeploymentconfigupdatev1StatusPhase{
	"PHASE_UNSPECIFIED",
	"FAILED",
	"QUEUED",
	"COMPLETED",
	"REQUEUED",
}

func (v *Pdsdeploymentconfigupdatev1StatusPhase) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Pdsdeploymentconfigupdatev1StatusPhase(value)
	for _, existing := range AllowedPdsdeploymentconfigupdatev1StatusPhaseEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Pdsdeploymentconfigupdatev1StatusPhase", value)
}

// NewPdsdeploymentconfigupdatev1StatusPhaseFromValue returns a pointer to a valid Pdsdeploymentconfigupdatev1StatusPhase
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPdsdeploymentconfigupdatev1StatusPhaseFromValue(v string) (*Pdsdeploymentconfigupdatev1StatusPhase, error) {
	ev := Pdsdeploymentconfigupdatev1StatusPhase(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Pdsdeploymentconfigupdatev1StatusPhase: valid values are %v", v, AllowedPdsdeploymentconfigupdatev1StatusPhaseEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Pdsdeploymentconfigupdatev1StatusPhase) IsValid() bool {
	for _, existing := range AllowedPdsdeploymentconfigupdatev1StatusPhaseEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to pdsdeploymentconfigupdatev1StatusPhase value
func (v Pdsdeploymentconfigupdatev1StatusPhase) Ptr() *Pdsdeploymentconfigupdatev1StatusPhase {
	return &v
}

type NullablePdsdeploymentconfigupdatev1StatusPhase struct {
	value *Pdsdeploymentconfigupdatev1StatusPhase
	isSet bool
}

func (v NullablePdsdeploymentconfigupdatev1StatusPhase) Get() *Pdsdeploymentconfigupdatev1StatusPhase {
	return v.value
}

func (v *NullablePdsdeploymentconfigupdatev1StatusPhase) Set(val *Pdsdeploymentconfigupdatev1StatusPhase) {
	v.value = val
	v.isSet = true
}

func (v NullablePdsdeploymentconfigupdatev1StatusPhase) IsSet() bool {
	return v.isSet
}

func (v *NullablePdsdeploymentconfigupdatev1StatusPhase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePdsdeploymentconfigupdatev1StatusPhase(val *Pdsdeploymentconfigupdatev1StatusPhase) *NullablePdsdeploymentconfigupdatev1StatusPhase {
	return &NullablePdsdeploymentconfigupdatev1StatusPhase{value: val, isSet: true}
}

func (v NullablePdsdeploymentconfigupdatev1StatusPhase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePdsdeploymentconfigupdatev1StatusPhase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

