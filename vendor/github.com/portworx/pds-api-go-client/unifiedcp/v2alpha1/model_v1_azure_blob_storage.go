/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1AzureBlobStorage struct for V1AzureBlobStorage
type V1AzureBlobStorage struct {
	ContainerName *string `json:"containerName,omitempty"`
}

// NewV1AzureBlobStorage instantiates a new V1AzureBlobStorage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1AzureBlobStorage() *V1AzureBlobStorage {
	this := V1AzureBlobStorage{}
	return &this
}

// NewV1AzureBlobStorageWithDefaults instantiates a new V1AzureBlobStorage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1AzureBlobStorageWithDefaults() *V1AzureBlobStorage {
	this := V1AzureBlobStorage{}
	return &this
}

// GetContainerName returns the ContainerName field value if set, zero value otherwise.
func (o *V1AzureBlobStorage) GetContainerName() string {
	if o == nil || o.ContainerName == nil {
		var ret string
		return ret
	}
	return *o.ContainerName
}

// GetContainerNameOk returns a tuple with the ContainerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AzureBlobStorage) GetContainerNameOk() (*string, bool) {
	if o == nil || o.ContainerName == nil {
		return nil, false
	}
	return o.ContainerName, true
}

// HasContainerName returns a boolean if a field has been set.
func (o *V1AzureBlobStorage) HasContainerName() bool {
	if o != nil && o.ContainerName != nil {
		return true
	}

	return false
}

// SetContainerName gets a reference to the given string and assigns it to the ContainerName field.
func (o *V1AzureBlobStorage) SetContainerName(v string) {
	o.ContainerName = &v
}

func (o V1AzureBlobStorage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContainerName != nil {
		toSerialize["containerName"] = o.ContainerName
	}
	return json.Marshal(toSerialize)
}

type NullableV1AzureBlobStorage struct {
	value *V1AzureBlobStorage
	isSet bool
}

func (v NullableV1AzureBlobStorage) Get() *V1AzureBlobStorage {
	return v.value
}

func (v *NullableV1AzureBlobStorage) Set(val *V1AzureBlobStorage) {
	v.value = val
	v.isSet = true
}

func (v NullableV1AzureBlobStorage) IsSet() bool {
	return v.isSet
}

func (v *NullableV1AzureBlobStorage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1AzureBlobStorage(val *V1AzureBlobStorage) *NullableV1AzureBlobStorage {
	return &NullableV1AzureBlobStorage{value: val, isSet: true}
}

func (v NullableV1AzureBlobStorage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1AzureBlobStorage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


