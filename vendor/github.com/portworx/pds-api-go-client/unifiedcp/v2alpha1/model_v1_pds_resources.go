/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1PDSResources PDSResource clubs resources generated by pds application.
type V1PDSResources struct {
	// Resource ids of deployments.
	Deployments []string `json:"deployments,omitempty"`
	// Resource ids of backups.
	Backups []string `json:"backups,omitempty"`
	// Resource ids of restores.
	Restores []string `json:"restores,omitempty"`
}

// NewV1PDSResources instantiates a new V1PDSResources object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1PDSResources() *V1PDSResources {
	this := V1PDSResources{}
	return &this
}

// NewV1PDSResourcesWithDefaults instantiates a new V1PDSResources object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1PDSResourcesWithDefaults() *V1PDSResources {
	this := V1PDSResources{}
	return &this
}

// GetDeployments returns the Deployments field value if set, zero value otherwise.
func (o *V1PDSResources) GetDeployments() []string {
	if o == nil || o.Deployments == nil {
		var ret []string
		return ret
	}
	return o.Deployments
}

// GetDeploymentsOk returns a tuple with the Deployments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1PDSResources) GetDeploymentsOk() ([]string, bool) {
	if o == nil || o.Deployments == nil {
		return nil, false
	}
	return o.Deployments, true
}

// HasDeployments returns a boolean if a field has been set.
func (o *V1PDSResources) HasDeployments() bool {
	if o != nil && o.Deployments != nil {
		return true
	}

	return false
}

// SetDeployments gets a reference to the given []string and assigns it to the Deployments field.
func (o *V1PDSResources) SetDeployments(v []string) {
	o.Deployments = v
}

// GetBackups returns the Backups field value if set, zero value otherwise.
func (o *V1PDSResources) GetBackups() []string {
	if o == nil || o.Backups == nil {
		var ret []string
		return ret
	}
	return o.Backups
}

// GetBackupsOk returns a tuple with the Backups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1PDSResources) GetBackupsOk() ([]string, bool) {
	if o == nil || o.Backups == nil {
		return nil, false
	}
	return o.Backups, true
}

// HasBackups returns a boolean if a field has been set.
func (o *V1PDSResources) HasBackups() bool {
	if o != nil && o.Backups != nil {
		return true
	}

	return false
}

// SetBackups gets a reference to the given []string and assigns it to the Backups field.
func (o *V1PDSResources) SetBackups(v []string) {
	o.Backups = v
}

// GetRestores returns the Restores field value if set, zero value otherwise.
func (o *V1PDSResources) GetRestores() []string {
	if o == nil || o.Restores == nil {
		var ret []string
		return ret
	}
	return o.Restores
}

// GetRestoresOk returns a tuple with the Restores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1PDSResources) GetRestoresOk() ([]string, bool) {
	if o == nil || o.Restores == nil {
		return nil, false
	}
	return o.Restores, true
}

// HasRestores returns a boolean if a field has been set.
func (o *V1PDSResources) HasRestores() bool {
	if o != nil && o.Restores != nil {
		return true
	}

	return false
}

// SetRestores gets a reference to the given []string and assigns it to the Restores field.
func (o *V1PDSResources) SetRestores(v []string) {
	o.Restores = v
}

func (o V1PDSResources) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Deployments != nil {
		toSerialize["deployments"] = o.Deployments
	}
	if o.Backups != nil {
		toSerialize["backups"] = o.Backups
	}
	if o.Restores != nil {
		toSerialize["restores"] = o.Restores
	}
	return json.Marshal(toSerialize)
}

type NullableV1PDSResources struct {
	value *V1PDSResources
	isSet bool
}

func (v NullableV1PDSResources) Get() *V1PDSResources {
	return v.value
}

func (v *NullableV1PDSResources) Set(val *V1PDSResources) {
	v.value = val
	v.isSet = true
}

func (v NullableV1PDSResources) IsSet() bool {
	return v.isSet
}

func (v *NullableV1PDSResources) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1PDSResources(val *V1PDSResources) *NullableV1PDSResources {
	return &NullableV1PDSResources{value: val, isSet: true}
}

func (v NullableV1PDSResources) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1PDSResources) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


