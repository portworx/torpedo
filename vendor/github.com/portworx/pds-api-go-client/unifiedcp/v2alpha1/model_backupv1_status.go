/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// Backupv1Status Status of the Backup.
type Backupv1Status struct {
	CloudSnapId *string `json:"cloudSnapId,omitempty"`
	StartTime *time.Time `json:"startTime,omitempty"`
	CompletionTime *time.Time `json:"completionTime,omitempty"`
	Phase *StatusPhase1 `json:"phase,omitempty"`
	// ErrorCode if CompletionStatus is \"Failed\".
	ErrorCode *string `json:"errorCode,omitempty"`
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// FileSize of the CloudSnap image.
	FileSize *string `json:"fileSize,omitempty"`
}

// NewBackupv1Status instantiates a new Backupv1Status object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupv1Status() *Backupv1Status {
	this := Backupv1Status{}
	var phase StatusPhase1 = PHASE_UNSPECIFIED
	this.Phase = &phase
	return &this
}

// NewBackupv1StatusWithDefaults instantiates a new Backupv1Status object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupv1StatusWithDefaults() *Backupv1Status {
	this := Backupv1Status{}
	var phase StatusPhase1 = PHASE_UNSPECIFIED
	this.Phase = &phase
	return &this
}

// GetCloudSnapId returns the CloudSnapId field value if set, zero value otherwise.
func (o *Backupv1Status) GetCloudSnapId() string {
	if o == nil || o.CloudSnapId == nil {
		var ret string
		return ret
	}
	return *o.CloudSnapId
}

// GetCloudSnapIdOk returns a tuple with the CloudSnapId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backupv1Status) GetCloudSnapIdOk() (*string, bool) {
	if o == nil || o.CloudSnapId == nil {
		return nil, false
	}
	return o.CloudSnapId, true
}

// HasCloudSnapId returns a boolean if a field has been set.
func (o *Backupv1Status) HasCloudSnapId() bool {
	if o != nil && o.CloudSnapId != nil {
		return true
	}

	return false
}

// SetCloudSnapId gets a reference to the given string and assigns it to the CloudSnapId field.
func (o *Backupv1Status) SetCloudSnapId(v string) {
	o.CloudSnapId = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *Backupv1Status) GetStartTime() time.Time {
	if o == nil || o.StartTime == nil {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backupv1Status) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || o.StartTime == nil {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *Backupv1Status) HasStartTime() bool {
	if o != nil && o.StartTime != nil {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *Backupv1Status) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetCompletionTime returns the CompletionTime field value if set, zero value otherwise.
func (o *Backupv1Status) GetCompletionTime() time.Time {
	if o == nil || o.CompletionTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CompletionTime
}

// GetCompletionTimeOk returns a tuple with the CompletionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backupv1Status) GetCompletionTimeOk() (*time.Time, bool) {
	if o == nil || o.CompletionTime == nil {
		return nil, false
	}
	return o.CompletionTime, true
}

// HasCompletionTime returns a boolean if a field has been set.
func (o *Backupv1Status) HasCompletionTime() bool {
	if o != nil && o.CompletionTime != nil {
		return true
	}

	return false
}

// SetCompletionTime gets a reference to the given time.Time and assigns it to the CompletionTime field.
func (o *Backupv1Status) SetCompletionTime(v time.Time) {
	o.CompletionTime = &v
}

// GetPhase returns the Phase field value if set, zero value otherwise.
func (o *Backupv1Status) GetPhase() StatusPhase1 {
	if o == nil || o.Phase == nil {
		var ret StatusPhase1
		return ret
	}
	return *o.Phase
}

// GetPhaseOk returns a tuple with the Phase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backupv1Status) GetPhaseOk() (*StatusPhase1, bool) {
	if o == nil || o.Phase == nil {
		return nil, false
	}
	return o.Phase, true
}

// HasPhase returns a boolean if a field has been set.
func (o *Backupv1Status) HasPhase() bool {
	if o != nil && o.Phase != nil {
		return true
	}

	return false
}

// SetPhase gets a reference to the given StatusPhase1 and assigns it to the Phase field.
func (o *Backupv1Status) SetPhase(v StatusPhase1) {
	o.Phase = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *Backupv1Status) GetErrorCode() string {
	if o == nil || o.ErrorCode == nil {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backupv1Status) GetErrorCodeOk() (*string, bool) {
	if o == nil || o.ErrorCode == nil {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *Backupv1Status) HasErrorCode() bool {
	if o != nil && o.ErrorCode != nil {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *Backupv1Status) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *Backupv1Status) GetErrorMessage() string {
	if o == nil || o.ErrorMessage == nil {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backupv1Status) GetErrorMessageOk() (*string, bool) {
	if o == nil || o.ErrorMessage == nil {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *Backupv1Status) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage != nil {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *Backupv1Status) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetFileSize returns the FileSize field value if set, zero value otherwise.
func (o *Backupv1Status) GetFileSize() string {
	if o == nil || o.FileSize == nil {
		var ret string
		return ret
	}
	return *o.FileSize
}

// GetFileSizeOk returns a tuple with the FileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backupv1Status) GetFileSizeOk() (*string, bool) {
	if o == nil || o.FileSize == nil {
		return nil, false
	}
	return o.FileSize, true
}

// HasFileSize returns a boolean if a field has been set.
func (o *Backupv1Status) HasFileSize() bool {
	if o != nil && o.FileSize != nil {
		return true
	}

	return false
}

// SetFileSize gets a reference to the given string and assigns it to the FileSize field.
func (o *Backupv1Status) SetFileSize(v string) {
	o.FileSize = &v
}

func (o Backupv1Status) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CloudSnapId != nil {
		toSerialize["cloudSnapId"] = o.CloudSnapId
	}
	if o.StartTime != nil {
		toSerialize["startTime"] = o.StartTime
	}
	if o.CompletionTime != nil {
		toSerialize["completionTime"] = o.CompletionTime
	}
	if o.Phase != nil {
		toSerialize["phase"] = o.Phase
	}
	if o.ErrorCode != nil {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if o.ErrorMessage != nil {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	if o.FileSize != nil {
		toSerialize["fileSize"] = o.FileSize
	}
	return json.Marshal(toSerialize)
}

type NullableBackupv1Status struct {
	value *Backupv1Status
	isSet bool
}

func (v NullableBackupv1Status) Get() *Backupv1Status {
	return v.value
}

func (v *NullableBackupv1Status) Set(val *Backupv1Status) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupv1Status) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupv1Status) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupv1Status(val *Backupv1Status) *NullableBackupv1Status {
	return &NullableBackupv1Status{value: val, isSet: true}
}

func (v NullableBackupv1Status) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupv1Status) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


