/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DesiredConfigurationOfTheIAM struct for DesiredConfigurationOfTheIAM
type DesiredConfigurationOfTheIAM struct {
	ActorType *string `json:"actorType,omitempty"`
	AccessPolicy *V1AccessPolicy `json:"accessPolicy,omitempty"`
}

// NewDesiredConfigurationOfTheIAM instantiates a new DesiredConfigurationOfTheIAM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDesiredConfigurationOfTheIAM() *DesiredConfigurationOfTheIAM {
	this := DesiredConfigurationOfTheIAM{}
	return &this
}

// NewDesiredConfigurationOfTheIAMWithDefaults instantiates a new DesiredConfigurationOfTheIAM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDesiredConfigurationOfTheIAMWithDefaults() *DesiredConfigurationOfTheIAM {
	this := DesiredConfigurationOfTheIAM{}
	return &this
}

// GetActorType returns the ActorType field value if set, zero value otherwise.
func (o *DesiredConfigurationOfTheIAM) GetActorType() string {
	if o == nil || o.ActorType == nil {
		var ret string
		return ret
	}
	return *o.ActorType
}

// GetActorTypeOk returns a tuple with the ActorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesiredConfigurationOfTheIAM) GetActorTypeOk() (*string, bool) {
	if o == nil || o.ActorType == nil {
		return nil, false
	}
	return o.ActorType, true
}

// HasActorType returns a boolean if a field has been set.
func (o *DesiredConfigurationOfTheIAM) HasActorType() bool {
	if o != nil && o.ActorType != nil {
		return true
	}

	return false
}

// SetActorType gets a reference to the given string and assigns it to the ActorType field.
func (o *DesiredConfigurationOfTheIAM) SetActorType(v string) {
	o.ActorType = &v
}

// GetAccessPolicy returns the AccessPolicy field value if set, zero value otherwise.
func (o *DesiredConfigurationOfTheIAM) GetAccessPolicy() V1AccessPolicy {
	if o == nil || o.AccessPolicy == nil {
		var ret V1AccessPolicy
		return ret
	}
	return *o.AccessPolicy
}

// GetAccessPolicyOk returns a tuple with the AccessPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesiredConfigurationOfTheIAM) GetAccessPolicyOk() (*V1AccessPolicy, bool) {
	if o == nil || o.AccessPolicy == nil {
		return nil, false
	}
	return o.AccessPolicy, true
}

// HasAccessPolicy returns a boolean if a field has been set.
func (o *DesiredConfigurationOfTheIAM) HasAccessPolicy() bool {
	if o != nil && o.AccessPolicy != nil {
		return true
	}

	return false
}

// SetAccessPolicy gets a reference to the given V1AccessPolicy and assigns it to the AccessPolicy field.
func (o *DesiredConfigurationOfTheIAM) SetAccessPolicy(v V1AccessPolicy) {
	o.AccessPolicy = &v
}

func (o DesiredConfigurationOfTheIAM) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ActorType != nil {
		toSerialize["actorType"] = o.ActorType
	}
	if o.AccessPolicy != nil {
		toSerialize["accessPolicy"] = o.AccessPolicy
	}
	return json.Marshal(toSerialize)
}

type NullableDesiredConfigurationOfTheIAM struct {
	value *DesiredConfigurationOfTheIAM
	isSet bool
}

func (v NullableDesiredConfigurationOfTheIAM) Get() *DesiredConfigurationOfTheIAM {
	return v.value
}

func (v *NullableDesiredConfigurationOfTheIAM) Set(val *DesiredConfigurationOfTheIAM) {
	v.value = val
	v.isSet = true
}

func (v NullableDesiredConfigurationOfTheIAM) IsSet() bool {
	return v.isSet
}

func (v *NullableDesiredConfigurationOfTheIAM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDesiredConfigurationOfTheIAM(val *DesiredConfigurationOfTheIAM) *NullableDesiredConfigurationOfTheIAM {
	return &NullableDesiredConfigurationOfTheIAM{value: val, isSet: true}
}

func (v NullableDesiredConfigurationOfTheIAM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDesiredConfigurationOfTheIAM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


