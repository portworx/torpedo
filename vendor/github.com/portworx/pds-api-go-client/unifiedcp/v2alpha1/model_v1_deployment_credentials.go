/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1DeploymentCredentials struct for V1DeploymentCredentials
type V1DeploymentCredentials struct {
	// secret to access the resource.
	Secret *string `json:"secret,omitempty"`
}

// NewV1DeploymentCredentials instantiates a new V1DeploymentCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DeploymentCredentials() *V1DeploymentCredentials {
	this := V1DeploymentCredentials{}
	return &this
}

// NewV1DeploymentCredentialsWithDefaults instantiates a new V1DeploymentCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DeploymentCredentialsWithDefaults() *V1DeploymentCredentials {
	this := V1DeploymentCredentials{}
	return &this
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *V1DeploymentCredentials) GetSecret() string {
	if o == nil || o.Secret == nil {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeploymentCredentials) GetSecretOk() (*string, bool) {
	if o == nil || o.Secret == nil {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *V1DeploymentCredentials) HasSecret() bool {
	if o != nil && o.Secret != nil {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *V1DeploymentCredentials) SetSecret(v string) {
	o.Secret = &v
}

func (o V1DeploymentCredentials) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Secret != nil {
		toSerialize["secret"] = o.Secret
	}
	return json.Marshal(toSerialize)
}

type NullableV1DeploymentCredentials struct {
	value *V1DeploymentCredentials
	isSet bool
}

func (v NullableV1DeploymentCredentials) Get() *V1DeploymentCredentials {
	return v.value
}

func (v *NullableV1DeploymentCredentials) Set(val *V1DeploymentCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DeploymentCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DeploymentCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DeploymentCredentials(val *V1DeploymentCredentials) *NullableV1DeploymentCredentials {
	return &NullableV1DeploymentCredentials{value: val, isSet: true}
}

func (v NullableV1DeploymentCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DeploymentCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


