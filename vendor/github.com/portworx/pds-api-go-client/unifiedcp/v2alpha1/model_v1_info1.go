/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1Info1 Information related to the data service image.
type V1Info1 struct {
	References *V1References4 `json:"references,omitempty"`
	// Image registry where the image is stored.
	Registry *string `json:"registry,omitempty"`
	// Image registry namespace where the image is stored.
	Namespace *string `json:"namespace,omitempty"`
	// Tag associated with the image.
	Tag *string `json:"tag,omitempty"`
	// Build version of the image.
	Build *string `json:"build,omitempty"`
	// Flag indicating if TLS is supported for a data service using this image.
	TlsSupport *bool `json:"tlsSupport,omitempty"`
	// Capabilities associated with this image.
	Capabilities *map[string]string `json:"capabilities,omitempty"`
	// Additional images associated with this data service image.
	AdditionalImages *map[string]string `json:"additionalImages,omitempty"`
}

// NewV1Info1 instantiates a new V1Info1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1Info1() *V1Info1 {
	this := V1Info1{}
	return &this
}

// NewV1Info1WithDefaults instantiates a new V1Info1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1Info1WithDefaults() *V1Info1 {
	this := V1Info1{}
	return &this
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *V1Info1) GetReferences() V1References4 {
	if o == nil || o.References == nil {
		var ret V1References4
		return ret
	}
	return *o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Info1) GetReferencesOk() (*V1References4, bool) {
	if o == nil || o.References == nil {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *V1Info1) HasReferences() bool {
	if o != nil && o.References != nil {
		return true
	}

	return false
}

// SetReferences gets a reference to the given V1References4 and assigns it to the References field.
func (o *V1Info1) SetReferences(v V1References4) {
	o.References = &v
}

// GetRegistry returns the Registry field value if set, zero value otherwise.
func (o *V1Info1) GetRegistry() string {
	if o == nil || o.Registry == nil {
		var ret string
		return ret
	}
	return *o.Registry
}

// GetRegistryOk returns a tuple with the Registry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Info1) GetRegistryOk() (*string, bool) {
	if o == nil || o.Registry == nil {
		return nil, false
	}
	return o.Registry, true
}

// HasRegistry returns a boolean if a field has been set.
func (o *V1Info1) HasRegistry() bool {
	if o != nil && o.Registry != nil {
		return true
	}

	return false
}

// SetRegistry gets a reference to the given string and assigns it to the Registry field.
func (o *V1Info1) SetRegistry(v string) {
	o.Registry = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *V1Info1) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Info1) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *V1Info1) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *V1Info1) SetNamespace(v string) {
	o.Namespace = &v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *V1Info1) GetTag() string {
	if o == nil || o.Tag == nil {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Info1) GetTagOk() (*string, bool) {
	if o == nil || o.Tag == nil {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *V1Info1) HasTag() bool {
	if o != nil && o.Tag != nil {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *V1Info1) SetTag(v string) {
	o.Tag = &v
}

// GetBuild returns the Build field value if set, zero value otherwise.
func (o *V1Info1) GetBuild() string {
	if o == nil || o.Build == nil {
		var ret string
		return ret
	}
	return *o.Build
}

// GetBuildOk returns a tuple with the Build field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Info1) GetBuildOk() (*string, bool) {
	if o == nil || o.Build == nil {
		return nil, false
	}
	return o.Build, true
}

// HasBuild returns a boolean if a field has been set.
func (o *V1Info1) HasBuild() bool {
	if o != nil && o.Build != nil {
		return true
	}

	return false
}

// SetBuild gets a reference to the given string and assigns it to the Build field.
func (o *V1Info1) SetBuild(v string) {
	o.Build = &v
}

// GetTlsSupport returns the TlsSupport field value if set, zero value otherwise.
func (o *V1Info1) GetTlsSupport() bool {
	if o == nil || o.TlsSupport == nil {
		var ret bool
		return ret
	}
	return *o.TlsSupport
}

// GetTlsSupportOk returns a tuple with the TlsSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Info1) GetTlsSupportOk() (*bool, bool) {
	if o == nil || o.TlsSupport == nil {
		return nil, false
	}
	return o.TlsSupport, true
}

// HasTlsSupport returns a boolean if a field has been set.
func (o *V1Info1) HasTlsSupport() bool {
	if o != nil && o.TlsSupport != nil {
		return true
	}

	return false
}

// SetTlsSupport gets a reference to the given bool and assigns it to the TlsSupport field.
func (o *V1Info1) SetTlsSupport(v bool) {
	o.TlsSupport = &v
}

// GetCapabilities returns the Capabilities field value if set, zero value otherwise.
func (o *V1Info1) GetCapabilities() map[string]string {
	if o == nil || o.Capabilities == nil {
		var ret map[string]string
		return ret
	}
	return *o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Info1) GetCapabilitiesOk() (*map[string]string, bool) {
	if o == nil || o.Capabilities == nil {
		return nil, false
	}
	return o.Capabilities, true
}

// HasCapabilities returns a boolean if a field has been set.
func (o *V1Info1) HasCapabilities() bool {
	if o != nil && o.Capabilities != nil {
		return true
	}

	return false
}

// SetCapabilities gets a reference to the given map[string]string and assigns it to the Capabilities field.
func (o *V1Info1) SetCapabilities(v map[string]string) {
	o.Capabilities = &v
}

// GetAdditionalImages returns the AdditionalImages field value if set, zero value otherwise.
func (o *V1Info1) GetAdditionalImages() map[string]string {
	if o == nil || o.AdditionalImages == nil {
		var ret map[string]string
		return ret
	}
	return *o.AdditionalImages
}

// GetAdditionalImagesOk returns a tuple with the AdditionalImages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Info1) GetAdditionalImagesOk() (*map[string]string, bool) {
	if o == nil || o.AdditionalImages == nil {
		return nil, false
	}
	return o.AdditionalImages, true
}

// HasAdditionalImages returns a boolean if a field has been set.
func (o *V1Info1) HasAdditionalImages() bool {
	if o != nil && o.AdditionalImages != nil {
		return true
	}

	return false
}

// SetAdditionalImages gets a reference to the given map[string]string and assigns it to the AdditionalImages field.
func (o *V1Info1) SetAdditionalImages(v map[string]string) {
	o.AdditionalImages = &v
}

func (o V1Info1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.References != nil {
		toSerialize["references"] = o.References
	}
	if o.Registry != nil {
		toSerialize["registry"] = o.Registry
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.Tag != nil {
		toSerialize["tag"] = o.Tag
	}
	if o.Build != nil {
		toSerialize["build"] = o.Build
	}
	if o.TlsSupport != nil {
		toSerialize["tlsSupport"] = o.TlsSupport
	}
	if o.Capabilities != nil {
		toSerialize["capabilities"] = o.Capabilities
	}
	if o.AdditionalImages != nil {
		toSerialize["additionalImages"] = o.AdditionalImages
	}
	return json.Marshal(toSerialize)
}

type NullableV1Info1 struct {
	value *V1Info1
	isSet bool
}

func (v NullableV1Info1) Get() *V1Info1 {
	return v.value
}

func (v *NullableV1Info1) Set(val *V1Info1) {
	v.value = val
	v.isSet = true
}

func (v NullableV1Info1) IsSet() bool {
	return v.isSet
}

func (v *NullableV1Info1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1Info1(val *V1Info1) *NullableV1Info1 {
	return &NullableV1Info1{value: val, isSet: true}
}

func (v NullableV1Info1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1Info1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


