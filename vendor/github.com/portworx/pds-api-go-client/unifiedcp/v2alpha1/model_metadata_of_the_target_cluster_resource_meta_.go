/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// MetadataOfTheTargetClusterResourceMeta struct for MetadataOfTheTargetClusterResourceMeta
type MetadataOfTheTargetClusterResourceMeta struct {
	// Name of the resource.
	Name *string `json:"name,omitempty"`
	// Description of the resource.
	Description *string `json:"description,omitempty"`
	// A string that identifies the version of this object that can be used by clients to determine when objects have changed. This value must be passed unmodified back to the server by the client.
	ResourceVersion *string `json:"resourceVersion,omitempty"`
	// Creation time of the object.
	CreateTime *time.Time `json:"createTime,omitempty"`
	// Update time of the object.
	UpdateTime *time.Time `json:"updateTime,omitempty"`
	// Labels to apply to the object.
	Labels *map[string]string `json:"labels,omitempty"`
	// Annotations for the object.
	Annotations *map[string]string `json:"annotations,omitempty"`
	ParentReference *V1Reference `json:"parentReference,omitempty"`
}

// NewMetadataOfTheTargetClusterResourceMeta instantiates a new MetadataOfTheTargetClusterResourceMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetadataOfTheTargetClusterResourceMeta() *MetadataOfTheTargetClusterResourceMeta {
	this := MetadataOfTheTargetClusterResourceMeta{}
	return &this
}

// NewMetadataOfTheTargetClusterResourceMetaWithDefaults instantiates a new MetadataOfTheTargetClusterResourceMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetadataOfTheTargetClusterResourceMetaWithDefaults() *MetadataOfTheTargetClusterResourceMeta {
	this := MetadataOfTheTargetClusterResourceMeta{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MetadataOfTheTargetClusterResourceMeta) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataOfTheTargetClusterResourceMeta) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MetadataOfTheTargetClusterResourceMeta) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MetadataOfTheTargetClusterResourceMeta) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MetadataOfTheTargetClusterResourceMeta) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataOfTheTargetClusterResourceMeta) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MetadataOfTheTargetClusterResourceMeta) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MetadataOfTheTargetClusterResourceMeta) SetDescription(v string) {
	o.Description = &v
}

// GetResourceVersion returns the ResourceVersion field value if set, zero value otherwise.
func (o *MetadataOfTheTargetClusterResourceMeta) GetResourceVersion() string {
	if o == nil || o.ResourceVersion == nil {
		var ret string
		return ret
	}
	return *o.ResourceVersion
}

// GetResourceVersionOk returns a tuple with the ResourceVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataOfTheTargetClusterResourceMeta) GetResourceVersionOk() (*string, bool) {
	if o == nil || o.ResourceVersion == nil {
		return nil, false
	}
	return o.ResourceVersion, true
}

// HasResourceVersion returns a boolean if a field has been set.
func (o *MetadataOfTheTargetClusterResourceMeta) HasResourceVersion() bool {
	if o != nil && o.ResourceVersion != nil {
		return true
	}

	return false
}

// SetResourceVersion gets a reference to the given string and assigns it to the ResourceVersion field.
func (o *MetadataOfTheTargetClusterResourceMeta) SetResourceVersion(v string) {
	o.ResourceVersion = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *MetadataOfTheTargetClusterResourceMeta) GetCreateTime() time.Time {
	if o == nil || o.CreateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataOfTheTargetClusterResourceMeta) GetCreateTimeOk() (*time.Time, bool) {
	if o == nil || o.CreateTime == nil {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *MetadataOfTheTargetClusterResourceMeta) HasCreateTime() bool {
	if o != nil && o.CreateTime != nil {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given time.Time and assigns it to the CreateTime field.
func (o *MetadataOfTheTargetClusterResourceMeta) SetCreateTime(v time.Time) {
	o.CreateTime = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *MetadataOfTheTargetClusterResourceMeta) GetUpdateTime() time.Time {
	if o == nil || o.UpdateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataOfTheTargetClusterResourceMeta) GetUpdateTimeOk() (*time.Time, bool) {
	if o == nil || o.UpdateTime == nil {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *MetadataOfTheTargetClusterResourceMeta) HasUpdateTime() bool {
	if o != nil && o.UpdateTime != nil {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given time.Time and assigns it to the UpdateTime field.
func (o *MetadataOfTheTargetClusterResourceMeta) SetUpdateTime(v time.Time) {
	o.UpdateTime = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *MetadataOfTheTargetClusterResourceMeta) GetLabels() map[string]string {
	if o == nil || o.Labels == nil {
		var ret map[string]string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataOfTheTargetClusterResourceMeta) GetLabelsOk() (*map[string]string, bool) {
	if o == nil || o.Labels == nil {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *MetadataOfTheTargetClusterResourceMeta) HasLabels() bool {
	if o != nil && o.Labels != nil {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]string and assigns it to the Labels field.
func (o *MetadataOfTheTargetClusterResourceMeta) SetLabels(v map[string]string) {
	o.Labels = &v
}

// GetAnnotations returns the Annotations field value if set, zero value otherwise.
func (o *MetadataOfTheTargetClusterResourceMeta) GetAnnotations() map[string]string {
	if o == nil || o.Annotations == nil {
		var ret map[string]string
		return ret
	}
	return *o.Annotations
}

// GetAnnotationsOk returns a tuple with the Annotations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataOfTheTargetClusterResourceMeta) GetAnnotationsOk() (*map[string]string, bool) {
	if o == nil || o.Annotations == nil {
		return nil, false
	}
	return o.Annotations, true
}

// HasAnnotations returns a boolean if a field has been set.
func (o *MetadataOfTheTargetClusterResourceMeta) HasAnnotations() bool {
	if o != nil && o.Annotations != nil {
		return true
	}

	return false
}

// SetAnnotations gets a reference to the given map[string]string and assigns it to the Annotations field.
func (o *MetadataOfTheTargetClusterResourceMeta) SetAnnotations(v map[string]string) {
	o.Annotations = &v
}

// GetParentReference returns the ParentReference field value if set, zero value otherwise.
func (o *MetadataOfTheTargetClusterResourceMeta) GetParentReference() V1Reference {
	if o == nil || o.ParentReference == nil {
		var ret V1Reference
		return ret
	}
	return *o.ParentReference
}

// GetParentReferenceOk returns a tuple with the ParentReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetadataOfTheTargetClusterResourceMeta) GetParentReferenceOk() (*V1Reference, bool) {
	if o == nil || o.ParentReference == nil {
		return nil, false
	}
	return o.ParentReference, true
}

// HasParentReference returns a boolean if a field has been set.
func (o *MetadataOfTheTargetClusterResourceMeta) HasParentReference() bool {
	if o != nil && o.ParentReference != nil {
		return true
	}

	return false
}

// SetParentReference gets a reference to the given V1Reference and assigns it to the ParentReference field.
func (o *MetadataOfTheTargetClusterResourceMeta) SetParentReference(v V1Reference) {
	o.ParentReference = &v
}

func (o MetadataOfTheTargetClusterResourceMeta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.ResourceVersion != nil {
		toSerialize["resourceVersion"] = o.ResourceVersion
	}
	if o.CreateTime != nil {
		toSerialize["createTime"] = o.CreateTime
	}
	if o.UpdateTime != nil {
		toSerialize["updateTime"] = o.UpdateTime
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.Annotations != nil {
		toSerialize["annotations"] = o.Annotations
	}
	if o.ParentReference != nil {
		toSerialize["parentReference"] = o.ParentReference
	}
	return json.Marshal(toSerialize)
}

type NullableMetadataOfTheTargetClusterResourceMeta struct {
	value *MetadataOfTheTargetClusterResourceMeta
	isSet bool
}

func (v NullableMetadataOfTheTargetClusterResourceMeta) Get() *MetadataOfTheTargetClusterResourceMeta {
	return v.value
}

func (v *NullableMetadataOfTheTargetClusterResourceMeta) Set(val *MetadataOfTheTargetClusterResourceMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableMetadataOfTheTargetClusterResourceMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableMetadataOfTheTargetClusterResourceMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetadataOfTheTargetClusterResourceMeta(val *MetadataOfTheTargetClusterResourceMeta) *NullableMetadataOfTheTargetClusterResourceMeta {
	return &NullableMetadataOfTheTargetClusterResourceMeta{value: val, isSet: true}
}

func (v NullableMetadataOfTheTargetClusterResourceMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetadataOfTheTargetClusterResourceMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


