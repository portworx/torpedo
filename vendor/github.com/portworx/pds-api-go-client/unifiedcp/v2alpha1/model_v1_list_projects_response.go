/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1ListProjectsResponse ListProjectsResponse is the response message to the ListProjects API and contains the list of projects visible to the caller.
type V1ListProjectsResponse struct {
	// Requested projects.
	Projects []V1Project `json:"projects,omitempty"`
	Pagination *V1PageBasedPaginationResponse `json:"pagination,omitempty"`
}

// NewV1ListProjectsResponse instantiates a new V1ListProjectsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ListProjectsResponse() *V1ListProjectsResponse {
	this := V1ListProjectsResponse{}
	return &this
}

// NewV1ListProjectsResponseWithDefaults instantiates a new V1ListProjectsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ListProjectsResponseWithDefaults() *V1ListProjectsResponse {
	this := V1ListProjectsResponse{}
	return &this
}

// GetProjects returns the Projects field value if set, zero value otherwise.
func (o *V1ListProjectsResponse) GetProjects() []V1Project {
	if o == nil || o.Projects == nil {
		var ret []V1Project
		return ret
	}
	return o.Projects
}

// GetProjectsOk returns a tuple with the Projects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ListProjectsResponse) GetProjectsOk() ([]V1Project, bool) {
	if o == nil || o.Projects == nil {
		return nil, false
	}
	return o.Projects, true
}

// HasProjects returns a boolean if a field has been set.
func (o *V1ListProjectsResponse) HasProjects() bool {
	if o != nil && o.Projects != nil {
		return true
	}

	return false
}

// SetProjects gets a reference to the given []V1Project and assigns it to the Projects field.
func (o *V1ListProjectsResponse) SetProjects(v []V1Project) {
	o.Projects = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *V1ListProjectsResponse) GetPagination() V1PageBasedPaginationResponse {
	if o == nil || o.Pagination == nil {
		var ret V1PageBasedPaginationResponse
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ListProjectsResponse) GetPaginationOk() (*V1PageBasedPaginationResponse, bool) {
	if o == nil || o.Pagination == nil {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *V1ListProjectsResponse) HasPagination() bool {
	if o != nil && o.Pagination != nil {
		return true
	}

	return false
}

// SetPagination gets a reference to the given V1PageBasedPaginationResponse and assigns it to the Pagination field.
func (o *V1ListProjectsResponse) SetPagination(v V1PageBasedPaginationResponse) {
	o.Pagination = &v
}

func (o V1ListProjectsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Projects != nil {
		toSerialize["projects"] = o.Projects
	}
	if o.Pagination != nil {
		toSerialize["pagination"] = o.Pagination
	}
	return json.Marshal(toSerialize)
}

type NullableV1ListProjectsResponse struct {
	value *V1ListProjectsResponse
	isSet bool
}

func (v NullableV1ListProjectsResponse) Get() *V1ListProjectsResponse {
	return v.value
}

func (v *NullableV1ListProjectsResponse) Set(val *V1ListProjectsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ListProjectsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ListProjectsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ListProjectsResponse(val *V1ListProjectsResponse) *NullableV1ListProjectsResponse {
	return &NullableV1ListProjectsResponse{value: val, isSet: true}
}

func (v NullableV1ListProjectsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ListProjectsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


