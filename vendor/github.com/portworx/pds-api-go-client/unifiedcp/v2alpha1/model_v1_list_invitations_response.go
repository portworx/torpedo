/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1ListInvitationsResponse struct for V1ListInvitationsResponse
type V1ListInvitationsResponse struct {
	Invitations []V1Invitation `json:"invitations,omitempty"`
	Pagination *V1PageBasedPaginationResponse `json:"pagination,omitempty"`
}

// NewV1ListInvitationsResponse instantiates a new V1ListInvitationsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ListInvitationsResponse() *V1ListInvitationsResponse {
	this := V1ListInvitationsResponse{}
	return &this
}

// NewV1ListInvitationsResponseWithDefaults instantiates a new V1ListInvitationsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ListInvitationsResponseWithDefaults() *V1ListInvitationsResponse {
	this := V1ListInvitationsResponse{}
	return &this
}

// GetInvitations returns the Invitations field value if set, zero value otherwise.
func (o *V1ListInvitationsResponse) GetInvitations() []V1Invitation {
	if o == nil || o.Invitations == nil {
		var ret []V1Invitation
		return ret
	}
	return o.Invitations
}

// GetInvitationsOk returns a tuple with the Invitations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ListInvitationsResponse) GetInvitationsOk() ([]V1Invitation, bool) {
	if o == nil || o.Invitations == nil {
		return nil, false
	}
	return o.Invitations, true
}

// HasInvitations returns a boolean if a field has been set.
func (o *V1ListInvitationsResponse) HasInvitations() bool {
	if o != nil && o.Invitations != nil {
		return true
	}

	return false
}

// SetInvitations gets a reference to the given []V1Invitation and assigns it to the Invitations field.
func (o *V1ListInvitationsResponse) SetInvitations(v []V1Invitation) {
	o.Invitations = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *V1ListInvitationsResponse) GetPagination() V1PageBasedPaginationResponse {
	if o == nil || o.Pagination == nil {
		var ret V1PageBasedPaginationResponse
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ListInvitationsResponse) GetPaginationOk() (*V1PageBasedPaginationResponse, bool) {
	if o == nil || o.Pagination == nil {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *V1ListInvitationsResponse) HasPagination() bool {
	if o != nil && o.Pagination != nil {
		return true
	}

	return false
}

// SetPagination gets a reference to the given V1PageBasedPaginationResponse and assigns it to the Pagination field.
func (o *V1ListInvitationsResponse) SetPagination(v V1PageBasedPaginationResponse) {
	o.Pagination = &v
}

func (o V1ListInvitationsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Invitations != nil {
		toSerialize["invitations"] = o.Invitations
	}
	if o.Pagination != nil {
		toSerialize["pagination"] = o.Pagination
	}
	return json.Marshal(toSerialize)
}

type NullableV1ListInvitationsResponse struct {
	value *V1ListInvitationsResponse
	isSet bool
}

func (v NullableV1ListInvitationsResponse) Get() *V1ListInvitationsResponse {
	return v.value
}

func (v *NullableV1ListInvitationsResponse) Set(val *V1ListInvitationsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ListInvitationsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ListInvitationsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ListInvitationsResponse(val *V1ListInvitationsResponse) *NullableV1ListInvitationsResponse {
	return &NullableV1ListInvitationsResponse{value: val, isSet: true}
}

func (v NullableV1ListInvitationsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ListInvitationsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


