/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TenantWhichNeedsToBeUpdated struct for TenantWhichNeedsToBeUpdated
type TenantWhichNeedsToBeUpdated struct {
	Meta *MetadataOfTheTenant `json:"meta,omitempty"`
	Status *Tenantv1Status `json:"status,omitempty"`
}

// NewTenantWhichNeedsToBeUpdated instantiates a new TenantWhichNeedsToBeUpdated object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenantWhichNeedsToBeUpdated() *TenantWhichNeedsToBeUpdated {
	this := TenantWhichNeedsToBeUpdated{}
	return &this
}

// NewTenantWhichNeedsToBeUpdatedWithDefaults instantiates a new TenantWhichNeedsToBeUpdated object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenantWhichNeedsToBeUpdatedWithDefaults() *TenantWhichNeedsToBeUpdated {
	this := TenantWhichNeedsToBeUpdated{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *TenantWhichNeedsToBeUpdated) GetMeta() MetadataOfTheTenant {
	if o == nil || o.Meta == nil {
		var ret MetadataOfTheTenant
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantWhichNeedsToBeUpdated) GetMetaOk() (*MetadataOfTheTenant, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *TenantWhichNeedsToBeUpdated) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetadataOfTheTenant and assigns it to the Meta field.
func (o *TenantWhichNeedsToBeUpdated) SetMeta(v MetadataOfTheTenant) {
	o.Meta = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TenantWhichNeedsToBeUpdated) GetStatus() Tenantv1Status {
	if o == nil || o.Status == nil {
		var ret Tenantv1Status
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenantWhichNeedsToBeUpdated) GetStatusOk() (*Tenantv1Status, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TenantWhichNeedsToBeUpdated) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given Tenantv1Status and assigns it to the Status field.
func (o *TenantWhichNeedsToBeUpdated) SetStatus(v Tenantv1Status) {
	o.Status = &v
}

func (o TenantWhichNeedsToBeUpdated) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableTenantWhichNeedsToBeUpdated struct {
	value *TenantWhichNeedsToBeUpdated
	isSet bool
}

func (v NullableTenantWhichNeedsToBeUpdated) Get() *TenantWhichNeedsToBeUpdated {
	return v.value
}

func (v *NullableTenantWhichNeedsToBeUpdated) Set(val *TenantWhichNeedsToBeUpdated) {
	v.value = val
	v.isSet = true
}

func (v NullableTenantWhichNeedsToBeUpdated) IsSet() bool {
	return v.isSet
}

func (v *NullableTenantWhichNeedsToBeUpdated) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenantWhichNeedsToBeUpdated(val *TenantWhichNeedsToBeUpdated) *NullableTenantWhichNeedsToBeUpdated {
	return &NullableTenantWhichNeedsToBeUpdated{value: val, isSet: true}
}

func (v NullableTenantWhichNeedsToBeUpdated) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenantWhichNeedsToBeUpdated) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


