/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// V1DeploymentTopologyStatusPhase Enum for Phase of the Deployment Topology.   - PHASE_UNSPECIFIED: Unspecified status.  - IN_PROGRESS: In progress Status.  - PARTIAL_SUCCESS: Partial Success Status.  - SUCCESS: Successful Status.  - DELETE_PENDING: Delete is pending Status.  - DELETING: Delete in progress Status.  - FAILED: Failed Status.  - TIMED_OUT: Timed Out Status.
type V1DeploymentTopologyStatusPhase string

// List of v1DeploymentTopologyStatusPhase
const (
	PHASE_UNSPECIFIED V1DeploymentTopologyStatusPhase = "PHASE_UNSPECIFIED"
	IN_PROGRESS V1DeploymentTopologyStatusPhase = "IN_PROGRESS"
	PARTIAL_SUCCESS V1DeploymentTopologyStatusPhase = "PARTIAL_SUCCESS"
	SUCCESS V1DeploymentTopologyStatusPhase = "SUCCESS"
	DELETE_PENDING V1DeploymentTopologyStatusPhase = "DELETE_PENDING"
	DELETING V1DeploymentTopologyStatusPhase = "DELETING"
	FAILED V1DeploymentTopologyStatusPhase = "FAILED"
	TIMED_OUT V1DeploymentTopologyStatusPhase = "TIMED_OUT"
)

// All allowed values of V1DeploymentTopologyStatusPhase enum
var AllowedV1DeploymentTopologyStatusPhaseEnumValues = []V1DeploymentTopologyStatusPhase{
	"PHASE_UNSPECIFIED",
	"IN_PROGRESS",
	"PARTIAL_SUCCESS",
	"SUCCESS",
	"DELETE_PENDING",
	"DELETING",
	"FAILED",
	"TIMED_OUT",
}

func (v *V1DeploymentTopologyStatusPhase) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := V1DeploymentTopologyStatusPhase(value)
	for _, existing := range AllowedV1DeploymentTopologyStatusPhaseEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid V1DeploymentTopologyStatusPhase", value)
}

// NewV1DeploymentTopologyStatusPhaseFromValue returns a pointer to a valid V1DeploymentTopologyStatusPhase
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewV1DeploymentTopologyStatusPhaseFromValue(v string) (*V1DeploymentTopologyStatusPhase, error) {
	ev := V1DeploymentTopologyStatusPhase(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for V1DeploymentTopologyStatusPhase: valid values are %v", v, AllowedV1DeploymentTopologyStatusPhaseEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v V1DeploymentTopologyStatusPhase) IsValid() bool {
	for _, existing := range AllowedV1DeploymentTopologyStatusPhaseEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to v1DeploymentTopologyStatusPhase value
func (v V1DeploymentTopologyStatusPhase) Ptr() *V1DeploymentTopologyStatusPhase {
	return &v
}

type NullableV1DeploymentTopologyStatusPhase struct {
	value *V1DeploymentTopologyStatusPhase
	isSet bool
}

func (v NullableV1DeploymentTopologyStatusPhase) Get() *V1DeploymentTopologyStatusPhase {
	return v.value
}

func (v *NullableV1DeploymentTopologyStatusPhase) Set(val *V1DeploymentTopologyStatusPhase) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DeploymentTopologyStatusPhase) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DeploymentTopologyStatusPhase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DeploymentTopologyStatusPhase(val *V1DeploymentTopologyStatusPhase) *NullableV1DeploymentTopologyStatusPhase {
	return &NullableV1DeploymentTopologyStatusPhase{value: val, isSet: true}
}

func (v NullableV1DeploymentTopologyStatusPhase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DeploymentTopologyStatusPhase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

