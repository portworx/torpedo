/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1Config3 Desired configuration of the restore.
type V1Config3 struct {
	SourceReferences *V1SourceReferences `json:"sourceReferences,omitempty"`
	DestinationReferences *V1DestinationReferences `json:"destinationReferences,omitempty"`
	// K8s resource name for restore, built from [\"restore-\" + name + short-id].
	CustomResourceName *string `json:"customResourceName,omitempty"`
}

// NewV1Config3 instantiates a new V1Config3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1Config3() *V1Config3 {
	this := V1Config3{}
	return &this
}

// NewV1Config3WithDefaults instantiates a new V1Config3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1Config3WithDefaults() *V1Config3 {
	this := V1Config3{}
	return &this
}

// GetSourceReferences returns the SourceReferences field value if set, zero value otherwise.
func (o *V1Config3) GetSourceReferences() V1SourceReferences {
	if o == nil || o.SourceReferences == nil {
		var ret V1SourceReferences
		return ret
	}
	return *o.SourceReferences
}

// GetSourceReferencesOk returns a tuple with the SourceReferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Config3) GetSourceReferencesOk() (*V1SourceReferences, bool) {
	if o == nil || o.SourceReferences == nil {
		return nil, false
	}
	return o.SourceReferences, true
}

// HasSourceReferences returns a boolean if a field has been set.
func (o *V1Config3) HasSourceReferences() bool {
	if o != nil && o.SourceReferences != nil {
		return true
	}

	return false
}

// SetSourceReferences gets a reference to the given V1SourceReferences and assigns it to the SourceReferences field.
func (o *V1Config3) SetSourceReferences(v V1SourceReferences) {
	o.SourceReferences = &v
}

// GetDestinationReferences returns the DestinationReferences field value if set, zero value otherwise.
func (o *V1Config3) GetDestinationReferences() V1DestinationReferences {
	if o == nil || o.DestinationReferences == nil {
		var ret V1DestinationReferences
		return ret
	}
	return *o.DestinationReferences
}

// GetDestinationReferencesOk returns a tuple with the DestinationReferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Config3) GetDestinationReferencesOk() (*V1DestinationReferences, bool) {
	if o == nil || o.DestinationReferences == nil {
		return nil, false
	}
	return o.DestinationReferences, true
}

// HasDestinationReferences returns a boolean if a field has been set.
func (o *V1Config3) HasDestinationReferences() bool {
	if o != nil && o.DestinationReferences != nil {
		return true
	}

	return false
}

// SetDestinationReferences gets a reference to the given V1DestinationReferences and assigns it to the DestinationReferences field.
func (o *V1Config3) SetDestinationReferences(v V1DestinationReferences) {
	o.DestinationReferences = &v
}

// GetCustomResourceName returns the CustomResourceName field value if set, zero value otherwise.
func (o *V1Config3) GetCustomResourceName() string {
	if o == nil || o.CustomResourceName == nil {
		var ret string
		return ret
	}
	return *o.CustomResourceName
}

// GetCustomResourceNameOk returns a tuple with the CustomResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Config3) GetCustomResourceNameOk() (*string, bool) {
	if o == nil || o.CustomResourceName == nil {
		return nil, false
	}
	return o.CustomResourceName, true
}

// HasCustomResourceName returns a boolean if a field has been set.
func (o *V1Config3) HasCustomResourceName() bool {
	if o != nil && o.CustomResourceName != nil {
		return true
	}

	return false
}

// SetCustomResourceName gets a reference to the given string and assigns it to the CustomResourceName field.
func (o *V1Config3) SetCustomResourceName(v string) {
	o.CustomResourceName = &v
}

func (o V1Config3) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SourceReferences != nil {
		toSerialize["sourceReferences"] = o.SourceReferences
	}
	if o.DestinationReferences != nil {
		toSerialize["destinationReferences"] = o.DestinationReferences
	}
	if o.CustomResourceName != nil {
		toSerialize["customResourceName"] = o.CustomResourceName
	}
	return json.Marshal(toSerialize)
}

type NullableV1Config3 struct {
	value *V1Config3
	isSet bool
}

func (v NullableV1Config3) Get() *V1Config3 {
	return v.value
}

func (v *NullableV1Config3) Set(val *V1Config3) {
	v.value = val
	v.isSet = true
}

func (v NullableV1Config3) IsSet() bool {
	return v.isSet
}

func (v *NullableV1Config3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1Config3(val *V1Config3) *NullableV1Config3 {
	return &NullableV1Config3{value: val, isSet: true}
}

func (v NullableV1Config3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1Config3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


