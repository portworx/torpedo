/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1S3Credentials struct for V1S3Credentials
type V1S3Credentials struct {
	ConfigS3AccessKey *string `json:"config/s3/access_key,omitempty"`
	ConfigS3SecretKey *string `json:"config/s3/secret_key,omitempty"`
}

// NewV1S3Credentials instantiates a new V1S3Credentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1S3Credentials() *V1S3Credentials {
	this := V1S3Credentials{}
	return &this
}

// NewV1S3CredentialsWithDefaults instantiates a new V1S3Credentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1S3CredentialsWithDefaults() *V1S3Credentials {
	this := V1S3Credentials{}
	return &this
}

// GetConfigS3AccessKey returns the ConfigS3AccessKey field value if set, zero value otherwise.
func (o *V1S3Credentials) GetConfigS3AccessKey() string {
	if o == nil || o.ConfigS3AccessKey == nil {
		var ret string
		return ret
	}
	return *o.ConfigS3AccessKey
}

// GetConfigS3AccessKeyOk returns a tuple with the ConfigS3AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1S3Credentials) GetConfigS3AccessKeyOk() (*string, bool) {
	if o == nil || o.ConfigS3AccessKey == nil {
		return nil, false
	}
	return o.ConfigS3AccessKey, true
}

// HasConfigS3AccessKey returns a boolean if a field has been set.
func (o *V1S3Credentials) HasConfigS3AccessKey() bool {
	if o != nil && o.ConfigS3AccessKey != nil {
		return true
	}

	return false
}

// SetConfigS3AccessKey gets a reference to the given string and assigns it to the ConfigS3AccessKey field.
func (o *V1S3Credentials) SetConfigS3AccessKey(v string) {
	o.ConfigS3AccessKey = &v
}

// GetConfigS3SecretKey returns the ConfigS3SecretKey field value if set, zero value otherwise.
func (o *V1S3Credentials) GetConfigS3SecretKey() string {
	if o == nil || o.ConfigS3SecretKey == nil {
		var ret string
		return ret
	}
	return *o.ConfigS3SecretKey
}

// GetConfigS3SecretKeyOk returns a tuple with the ConfigS3SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1S3Credentials) GetConfigS3SecretKeyOk() (*string, bool) {
	if o == nil || o.ConfigS3SecretKey == nil {
		return nil, false
	}
	return o.ConfigS3SecretKey, true
}

// HasConfigS3SecretKey returns a boolean if a field has been set.
func (o *V1S3Credentials) HasConfigS3SecretKey() bool {
	if o != nil && o.ConfigS3SecretKey != nil {
		return true
	}

	return false
}

// SetConfigS3SecretKey gets a reference to the given string and assigns it to the ConfigS3SecretKey field.
func (o *V1S3Credentials) SetConfigS3SecretKey(v string) {
	o.ConfigS3SecretKey = &v
}

func (o V1S3Credentials) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConfigS3AccessKey != nil {
		toSerialize["config/s3/access_key"] = o.ConfigS3AccessKey
	}
	if o.ConfigS3SecretKey != nil {
		toSerialize["config/s3/secret_key"] = o.ConfigS3SecretKey
	}
	return json.Marshal(toSerialize)
}

type NullableV1S3Credentials struct {
	value *V1S3Credentials
	isSet bool
}

func (v NullableV1S3Credentials) Get() *V1S3Credentials {
	return v.value
}

func (v *NullableV1S3Credentials) Set(val *V1S3Credentials) {
	v.value = val
	v.isSet = true
}

func (v NullableV1S3Credentials) IsSet() bool {
	return v.isSet
}

func (v *NullableV1S3Credentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1S3Credentials(val *V1S3Credentials) *NullableV1S3Credentials {
	return &NullableV1S3Credentials{value: val, isSet: true}
}

func (v NullableV1S3Credentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1S3Credentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


