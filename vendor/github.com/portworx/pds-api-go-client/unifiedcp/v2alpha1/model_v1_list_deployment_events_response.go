/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1ListDeploymentEventsResponse Response to list the deployment events.
type V1ListDeploymentEventsResponse struct {
	// List of Event resources.
	DeploymentEvents []V1DeploymentEvent `json:"deploymentEvents,omitempty"`
	Pagination *V1PageBasedPaginationResponse `json:"pagination,omitempty"`
}

// NewV1ListDeploymentEventsResponse instantiates a new V1ListDeploymentEventsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ListDeploymentEventsResponse() *V1ListDeploymentEventsResponse {
	this := V1ListDeploymentEventsResponse{}
	return &this
}

// NewV1ListDeploymentEventsResponseWithDefaults instantiates a new V1ListDeploymentEventsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ListDeploymentEventsResponseWithDefaults() *V1ListDeploymentEventsResponse {
	this := V1ListDeploymentEventsResponse{}
	return &this
}

// GetDeploymentEvents returns the DeploymentEvents field value if set, zero value otherwise.
func (o *V1ListDeploymentEventsResponse) GetDeploymentEvents() []V1DeploymentEvent {
	if o == nil || o.DeploymentEvents == nil {
		var ret []V1DeploymentEvent
		return ret
	}
	return o.DeploymentEvents
}

// GetDeploymentEventsOk returns a tuple with the DeploymentEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ListDeploymentEventsResponse) GetDeploymentEventsOk() ([]V1DeploymentEvent, bool) {
	if o == nil || o.DeploymentEvents == nil {
		return nil, false
	}
	return o.DeploymentEvents, true
}

// HasDeploymentEvents returns a boolean if a field has been set.
func (o *V1ListDeploymentEventsResponse) HasDeploymentEvents() bool {
	if o != nil && o.DeploymentEvents != nil {
		return true
	}

	return false
}

// SetDeploymentEvents gets a reference to the given []V1DeploymentEvent and assigns it to the DeploymentEvents field.
func (o *V1ListDeploymentEventsResponse) SetDeploymentEvents(v []V1DeploymentEvent) {
	o.DeploymentEvents = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *V1ListDeploymentEventsResponse) GetPagination() V1PageBasedPaginationResponse {
	if o == nil || o.Pagination == nil {
		var ret V1PageBasedPaginationResponse
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ListDeploymentEventsResponse) GetPaginationOk() (*V1PageBasedPaginationResponse, bool) {
	if o == nil || o.Pagination == nil {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *V1ListDeploymentEventsResponse) HasPagination() bool {
	if o != nil && o.Pagination != nil {
		return true
	}

	return false
}

// SetPagination gets a reference to the given V1PageBasedPaginationResponse and assigns it to the Pagination field.
func (o *V1ListDeploymentEventsResponse) SetPagination(v V1PageBasedPaginationResponse) {
	o.Pagination = &v
}

func (o V1ListDeploymentEventsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeploymentEvents != nil {
		toSerialize["deploymentEvents"] = o.DeploymentEvents
	}
	if o.Pagination != nil {
		toSerialize["pagination"] = o.Pagination
	}
	return json.Marshal(toSerialize)
}

type NullableV1ListDeploymentEventsResponse struct {
	value *V1ListDeploymentEventsResponse
	isSet bool
}

func (v NullableV1ListDeploymentEventsResponse) Get() *V1ListDeploymentEventsResponse {
	return v.value
}

func (v *NullableV1ListDeploymentEventsResponse) Set(val *V1ListDeploymentEventsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ListDeploymentEventsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ListDeploymentEventsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ListDeploymentEventsResponse(val *V1ListDeploymentEventsResponse) *NullableV1ListDeploymentEventsResponse {
	return &NullableV1ListDeploymentEventsResponse{value: val, isSet: true}
}

func (v NullableV1ListDeploymentEventsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ListDeploymentEventsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


