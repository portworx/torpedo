/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1Config8 Config clubs attributes represents in detail view for service account.
type V1Config8 struct {
	// Client id.
	ClientId *string `json:"clientId,omitempty"`
	// Client secret.
	ClientSecret *string `json:"clientSecret,omitempty"`
	// If sets to true then service account will be inactive, false by default.
	Disabled *bool `json:"disabled,omitempty"`
}

// NewV1Config8 instantiates a new V1Config8 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1Config8() *V1Config8 {
	this := V1Config8{}
	return &this
}

// NewV1Config8WithDefaults instantiates a new V1Config8 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1Config8WithDefaults() *V1Config8 {
	this := V1Config8{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *V1Config8) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Config8) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *V1Config8) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *V1Config8) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *V1Config8) GetClientSecret() string {
	if o == nil || o.ClientSecret == nil {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Config8) GetClientSecretOk() (*string, bool) {
	if o == nil || o.ClientSecret == nil {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *V1Config8) HasClientSecret() bool {
	if o != nil && o.ClientSecret != nil {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *V1Config8) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *V1Config8) GetDisabled() bool {
	if o == nil || o.Disabled == nil {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Config8) GetDisabledOk() (*bool, bool) {
	if o == nil || o.Disabled == nil {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *V1Config8) HasDisabled() bool {
	if o != nil && o.Disabled != nil {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *V1Config8) SetDisabled(v bool) {
	o.Disabled = &v
}

func (o V1Config8) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientId != nil {
		toSerialize["clientId"] = o.ClientId
	}
	if o.ClientSecret != nil {
		toSerialize["clientSecret"] = o.ClientSecret
	}
	if o.Disabled != nil {
		toSerialize["disabled"] = o.Disabled
	}
	return json.Marshal(toSerialize)
}

type NullableV1Config8 struct {
	value *V1Config8
	isSet bool
}

func (v NullableV1Config8) Get() *V1Config8 {
	return v.value
}

func (v *NullableV1Config8) Set(val *V1Config8) {
	v.value = val
	v.isSet = true
}

func (v NullableV1Config8) IsSet() bool {
	return v.isSet
}

func (v *NullableV1Config8) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1Config8(val *V1Config8) *NullableV1Config8 {
	return &NullableV1Config8{value: val, isSet: true}
}

func (v NullableV1Config8) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1Config8) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


