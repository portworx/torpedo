/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TargetClusterDetails struct for TargetClusterDetails
type TargetClusterDetails struct {
	Meta *MetadataOfTheTargetClusterResourceMeta `json:"meta,omitempty"`
	Config map[string]interface{} `json:"config,omitempty"`
	Status *PlatformTargetClusterv1Status `json:"status,omitempty"`
}

// NewTargetClusterDetails instantiates a new TargetClusterDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTargetClusterDetails() *TargetClusterDetails {
	this := TargetClusterDetails{}
	return &this
}

// NewTargetClusterDetailsWithDefaults instantiates a new TargetClusterDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTargetClusterDetailsWithDefaults() *TargetClusterDetails {
	this := TargetClusterDetails{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *TargetClusterDetails) GetMeta() MetadataOfTheTargetClusterResourceMeta {
	if o == nil || o.Meta == nil {
		var ret MetadataOfTheTargetClusterResourceMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetClusterDetails) GetMetaOk() (*MetadataOfTheTargetClusterResourceMeta, bool) {
	if o == nil || o.Meta == nil {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *TargetClusterDetails) HasMeta() bool {
	if o != nil && o.Meta != nil {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetadataOfTheTargetClusterResourceMeta and assigns it to the Meta field.
func (o *TargetClusterDetails) SetMeta(v MetadataOfTheTargetClusterResourceMeta) {
	o.Meta = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *TargetClusterDetails) GetConfig() map[string]interface{} {
	if o == nil || o.Config == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetClusterDetails) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *TargetClusterDetails) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *TargetClusterDetails) SetConfig(v map[string]interface{}) {
	o.Config = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TargetClusterDetails) GetStatus() PlatformTargetClusterv1Status {
	if o == nil || o.Status == nil {
		var ret PlatformTargetClusterv1Status
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetClusterDetails) GetStatusOk() (*PlatformTargetClusterv1Status, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TargetClusterDetails) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given PlatformTargetClusterv1Status and assigns it to the Status field.
func (o *TargetClusterDetails) SetStatus(v PlatformTargetClusterv1Status) {
	o.Status = &v
}

func (o TargetClusterDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableTargetClusterDetails struct {
	value *TargetClusterDetails
	isSet bool
}

func (v NullableTargetClusterDetails) Get() *TargetClusterDetails {
	return v.value
}

func (v *NullableTargetClusterDetails) Set(val *TargetClusterDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableTargetClusterDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableTargetClusterDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTargetClusterDetails(val *TargetClusterDetails) *NullableTargetClusterDetails {
	return &NullableTargetClusterDetails{value: val, isSet: true}
}

func (v NullableTargetClusterDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTargetClusterDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


