/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProjectServiceDisassociateResourcesBody Request to disassociate infra resource from the project configuration.
type ProjectServiceDisassociateResourcesBody struct {
	InfraResource *V1Resources `json:"infraResource,omitempty"`
}

// NewProjectServiceDisassociateResourcesBody instantiates a new ProjectServiceDisassociateResourcesBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectServiceDisassociateResourcesBody() *ProjectServiceDisassociateResourcesBody {
	this := ProjectServiceDisassociateResourcesBody{}
	return &this
}

// NewProjectServiceDisassociateResourcesBodyWithDefaults instantiates a new ProjectServiceDisassociateResourcesBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectServiceDisassociateResourcesBodyWithDefaults() *ProjectServiceDisassociateResourcesBody {
	this := ProjectServiceDisassociateResourcesBody{}
	return &this
}

// GetInfraResource returns the InfraResource field value if set, zero value otherwise.
func (o *ProjectServiceDisassociateResourcesBody) GetInfraResource() V1Resources {
	if o == nil || o.InfraResource == nil {
		var ret V1Resources
		return ret
	}
	return *o.InfraResource
}

// GetInfraResourceOk returns a tuple with the InfraResource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectServiceDisassociateResourcesBody) GetInfraResourceOk() (*V1Resources, bool) {
	if o == nil || o.InfraResource == nil {
		return nil, false
	}
	return o.InfraResource, true
}

// HasInfraResource returns a boolean if a field has been set.
func (o *ProjectServiceDisassociateResourcesBody) HasInfraResource() bool {
	if o != nil && o.InfraResource != nil {
		return true
	}

	return false
}

// SetInfraResource gets a reference to the given V1Resources and assigns it to the InfraResource field.
func (o *ProjectServiceDisassociateResourcesBody) SetInfraResource(v V1Resources) {
	o.InfraResource = &v
}

func (o ProjectServiceDisassociateResourcesBody) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InfraResource != nil {
		toSerialize["infraResource"] = o.InfraResource
	}
	return json.Marshal(toSerialize)
}

type NullableProjectServiceDisassociateResourcesBody struct {
	value *ProjectServiceDisassociateResourcesBody
	isSet bool
}

func (v NullableProjectServiceDisassociateResourcesBody) Get() *ProjectServiceDisassociateResourcesBody {
	return v.value
}

func (v *NullableProjectServiceDisassociateResourcesBody) Set(val *ProjectServiceDisassociateResourcesBody) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectServiceDisassociateResourcesBody) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectServiceDisassociateResourcesBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectServiceDisassociateResourcesBody(val *ProjectServiceDisassociateResourcesBody) *NullableProjectServiceDisassociateResourcesBody {
	return &NullableProjectServiceDisassociateResourcesBody{value: val, isSet: true}
}

func (v NullableProjectServiceDisassociateResourcesBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectServiceDisassociateResourcesBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


