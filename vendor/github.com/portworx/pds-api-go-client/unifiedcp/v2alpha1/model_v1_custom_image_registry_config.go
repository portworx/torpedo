/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1CustomImageRegistryConfig struct for V1CustomImageRegistryConfig
type V1CustomImageRegistryConfig struct {
	RegistryUrl *string `json:"registryUrl,omitempty"`
	RegistryNamespace *string `json:"registryNamespace,omitempty"`
	Username *string `json:"username,omitempty"`
	Password *string `json:"password,omitempty"`
	CaCert *string `json:"caCert,omitempty"`
}

// NewV1CustomImageRegistryConfig instantiates a new V1CustomImageRegistryConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1CustomImageRegistryConfig() *V1CustomImageRegistryConfig {
	this := V1CustomImageRegistryConfig{}
	return &this
}

// NewV1CustomImageRegistryConfigWithDefaults instantiates a new V1CustomImageRegistryConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1CustomImageRegistryConfigWithDefaults() *V1CustomImageRegistryConfig {
	this := V1CustomImageRegistryConfig{}
	return &this
}

// GetRegistryUrl returns the RegistryUrl field value if set, zero value otherwise.
func (o *V1CustomImageRegistryConfig) GetRegistryUrl() string {
	if o == nil || o.RegistryUrl == nil {
		var ret string
		return ret
	}
	return *o.RegistryUrl
}

// GetRegistryUrlOk returns a tuple with the RegistryUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1CustomImageRegistryConfig) GetRegistryUrlOk() (*string, bool) {
	if o == nil || o.RegistryUrl == nil {
		return nil, false
	}
	return o.RegistryUrl, true
}

// HasRegistryUrl returns a boolean if a field has been set.
func (o *V1CustomImageRegistryConfig) HasRegistryUrl() bool {
	if o != nil && o.RegistryUrl != nil {
		return true
	}

	return false
}

// SetRegistryUrl gets a reference to the given string and assigns it to the RegistryUrl field.
func (o *V1CustomImageRegistryConfig) SetRegistryUrl(v string) {
	o.RegistryUrl = &v
}

// GetRegistryNamespace returns the RegistryNamespace field value if set, zero value otherwise.
func (o *V1CustomImageRegistryConfig) GetRegistryNamespace() string {
	if o == nil || o.RegistryNamespace == nil {
		var ret string
		return ret
	}
	return *o.RegistryNamespace
}

// GetRegistryNamespaceOk returns a tuple with the RegistryNamespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1CustomImageRegistryConfig) GetRegistryNamespaceOk() (*string, bool) {
	if o == nil || o.RegistryNamespace == nil {
		return nil, false
	}
	return o.RegistryNamespace, true
}

// HasRegistryNamespace returns a boolean if a field has been set.
func (o *V1CustomImageRegistryConfig) HasRegistryNamespace() bool {
	if o != nil && o.RegistryNamespace != nil {
		return true
	}

	return false
}

// SetRegistryNamespace gets a reference to the given string and assigns it to the RegistryNamespace field.
func (o *V1CustomImageRegistryConfig) SetRegistryNamespace(v string) {
	o.RegistryNamespace = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *V1CustomImageRegistryConfig) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1CustomImageRegistryConfig) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *V1CustomImageRegistryConfig) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *V1CustomImageRegistryConfig) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *V1CustomImageRegistryConfig) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1CustomImageRegistryConfig) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *V1CustomImageRegistryConfig) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *V1CustomImageRegistryConfig) SetPassword(v string) {
	o.Password = &v
}

// GetCaCert returns the CaCert field value if set, zero value otherwise.
func (o *V1CustomImageRegistryConfig) GetCaCert() string {
	if o == nil || o.CaCert == nil {
		var ret string
		return ret
	}
	return *o.CaCert
}

// GetCaCertOk returns a tuple with the CaCert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1CustomImageRegistryConfig) GetCaCertOk() (*string, bool) {
	if o == nil || o.CaCert == nil {
		return nil, false
	}
	return o.CaCert, true
}

// HasCaCert returns a boolean if a field has been set.
func (o *V1CustomImageRegistryConfig) HasCaCert() bool {
	if o != nil && o.CaCert != nil {
		return true
	}

	return false
}

// SetCaCert gets a reference to the given string and assigns it to the CaCert field.
func (o *V1CustomImageRegistryConfig) SetCaCert(v string) {
	o.CaCert = &v
}

func (o V1CustomImageRegistryConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RegistryUrl != nil {
		toSerialize["registryUrl"] = o.RegistryUrl
	}
	if o.RegistryNamespace != nil {
		toSerialize["registryNamespace"] = o.RegistryNamespace
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.CaCert != nil {
		toSerialize["caCert"] = o.CaCert
	}
	return json.Marshal(toSerialize)
}

type NullableV1CustomImageRegistryConfig struct {
	value *V1CustomImageRegistryConfig
	isSet bool
}

func (v NullableV1CustomImageRegistryConfig) Get() *V1CustomImageRegistryConfig {
	return v.value
}

func (v *NullableV1CustomImageRegistryConfig) Set(val *V1CustomImageRegistryConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableV1CustomImageRegistryConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableV1CustomImageRegistryConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1CustomImageRegistryConfig(val *V1CustomImageRegistryConfig) *NullableV1CustomImageRegistryConfig {
	return &NullableV1CustomImageRegistryConfig{value: val, isSet: true}
}

func (v NullableV1CustomImageRegistryConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1CustomImageRegistryConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


