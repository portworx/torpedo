/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1DeploymentMetaData Deployment Meta Data contains the details of the deployment associated with the backup configuration.
type V1DeploymentMetaData struct {
	// Name of the deployment.
	Name *string `json:"name,omitempty"`
	// Custom Resource Name is the kubernetes resource name for the deployment meta data.
	CustomResourceName *string `json:"customResourceName,omitempty"`
	// Deployment Target Name associated with the backup configuration.
	DeploymentTargetName *string `json:"deploymentTargetName,omitempty"`
	// Namespace name to which the backup configuration is associated.
	NamespaceName *string `json:"namespaceName,omitempty"`
	// Flag to check whether Transport Layer Security support is enabled or not.
	TlsEnabled *bool `json:"tlsEnabled,omitempty"`
}

// NewV1DeploymentMetaData instantiates a new V1DeploymentMetaData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DeploymentMetaData() *V1DeploymentMetaData {
	this := V1DeploymentMetaData{}
	return &this
}

// NewV1DeploymentMetaDataWithDefaults instantiates a new V1DeploymentMetaData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DeploymentMetaDataWithDefaults() *V1DeploymentMetaData {
	this := V1DeploymentMetaData{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1DeploymentMetaData) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeploymentMetaData) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1DeploymentMetaData) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1DeploymentMetaData) SetName(v string) {
	o.Name = &v
}

// GetCustomResourceName returns the CustomResourceName field value if set, zero value otherwise.
func (o *V1DeploymentMetaData) GetCustomResourceName() string {
	if o == nil || o.CustomResourceName == nil {
		var ret string
		return ret
	}
	return *o.CustomResourceName
}

// GetCustomResourceNameOk returns a tuple with the CustomResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeploymentMetaData) GetCustomResourceNameOk() (*string, bool) {
	if o == nil || o.CustomResourceName == nil {
		return nil, false
	}
	return o.CustomResourceName, true
}

// HasCustomResourceName returns a boolean if a field has been set.
func (o *V1DeploymentMetaData) HasCustomResourceName() bool {
	if o != nil && o.CustomResourceName != nil {
		return true
	}

	return false
}

// SetCustomResourceName gets a reference to the given string and assigns it to the CustomResourceName field.
func (o *V1DeploymentMetaData) SetCustomResourceName(v string) {
	o.CustomResourceName = &v
}

// GetDeploymentTargetName returns the DeploymentTargetName field value if set, zero value otherwise.
func (o *V1DeploymentMetaData) GetDeploymentTargetName() string {
	if o == nil || o.DeploymentTargetName == nil {
		var ret string
		return ret
	}
	return *o.DeploymentTargetName
}

// GetDeploymentTargetNameOk returns a tuple with the DeploymentTargetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeploymentMetaData) GetDeploymentTargetNameOk() (*string, bool) {
	if o == nil || o.DeploymentTargetName == nil {
		return nil, false
	}
	return o.DeploymentTargetName, true
}

// HasDeploymentTargetName returns a boolean if a field has been set.
func (o *V1DeploymentMetaData) HasDeploymentTargetName() bool {
	if o != nil && o.DeploymentTargetName != nil {
		return true
	}

	return false
}

// SetDeploymentTargetName gets a reference to the given string and assigns it to the DeploymentTargetName field.
func (o *V1DeploymentMetaData) SetDeploymentTargetName(v string) {
	o.DeploymentTargetName = &v
}

// GetNamespaceName returns the NamespaceName field value if set, zero value otherwise.
func (o *V1DeploymentMetaData) GetNamespaceName() string {
	if o == nil || o.NamespaceName == nil {
		var ret string
		return ret
	}
	return *o.NamespaceName
}

// GetNamespaceNameOk returns a tuple with the NamespaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeploymentMetaData) GetNamespaceNameOk() (*string, bool) {
	if o == nil || o.NamespaceName == nil {
		return nil, false
	}
	return o.NamespaceName, true
}

// HasNamespaceName returns a boolean if a field has been set.
func (o *V1DeploymentMetaData) HasNamespaceName() bool {
	if o != nil && o.NamespaceName != nil {
		return true
	}

	return false
}

// SetNamespaceName gets a reference to the given string and assigns it to the NamespaceName field.
func (o *V1DeploymentMetaData) SetNamespaceName(v string) {
	o.NamespaceName = &v
}

// GetTlsEnabled returns the TlsEnabled field value if set, zero value otherwise.
func (o *V1DeploymentMetaData) GetTlsEnabled() bool {
	if o == nil || o.TlsEnabled == nil {
		var ret bool
		return ret
	}
	return *o.TlsEnabled
}

// GetTlsEnabledOk returns a tuple with the TlsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeploymentMetaData) GetTlsEnabledOk() (*bool, bool) {
	if o == nil || o.TlsEnabled == nil {
		return nil, false
	}
	return o.TlsEnabled, true
}

// HasTlsEnabled returns a boolean if a field has been set.
func (o *V1DeploymentMetaData) HasTlsEnabled() bool {
	if o != nil && o.TlsEnabled != nil {
		return true
	}

	return false
}

// SetTlsEnabled gets a reference to the given bool and assigns it to the TlsEnabled field.
func (o *V1DeploymentMetaData) SetTlsEnabled(v bool) {
	o.TlsEnabled = &v
}

func (o V1DeploymentMetaData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.CustomResourceName != nil {
		toSerialize["customResourceName"] = o.CustomResourceName
	}
	if o.DeploymentTargetName != nil {
		toSerialize["deploymentTargetName"] = o.DeploymentTargetName
	}
	if o.NamespaceName != nil {
		toSerialize["namespaceName"] = o.NamespaceName
	}
	if o.TlsEnabled != nil {
		toSerialize["tlsEnabled"] = o.TlsEnabled
	}
	return json.Marshal(toSerialize)
}

type NullableV1DeploymentMetaData struct {
	value *V1DeploymentMetaData
	isSet bool
}

func (v NullableV1DeploymentMetaData) Get() *V1DeploymentMetaData {
	return v.value
}

func (v *NullableV1DeploymentMetaData) Set(val *V1DeploymentMetaData) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DeploymentMetaData) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DeploymentMetaData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DeploymentMetaData(val *V1DeploymentMetaData) *NullableV1DeploymentMetaData {
	return &NullableV1DeploymentMetaData{value: val, isSet: true}
}

func (v NullableV1DeploymentMetaData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DeploymentMetaData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


