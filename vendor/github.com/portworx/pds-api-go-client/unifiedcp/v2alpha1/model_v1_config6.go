/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1Config6 struct for V1Config6
type V1Config6 struct {
	ActorId *string `json:"actorId,omitempty"`
	ActorType *string `json:"actorType,omitempty"`
	AccessPolicy *V1AccessPolicy `json:"accessPolicy,omitempty"`
}

// NewV1Config6 instantiates a new V1Config6 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1Config6() *V1Config6 {
	this := V1Config6{}
	return &this
}

// NewV1Config6WithDefaults instantiates a new V1Config6 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1Config6WithDefaults() *V1Config6 {
	this := V1Config6{}
	return &this
}

// GetActorId returns the ActorId field value if set, zero value otherwise.
func (o *V1Config6) GetActorId() string {
	if o == nil || o.ActorId == nil {
		var ret string
		return ret
	}
	return *o.ActorId
}

// GetActorIdOk returns a tuple with the ActorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Config6) GetActorIdOk() (*string, bool) {
	if o == nil || o.ActorId == nil {
		return nil, false
	}
	return o.ActorId, true
}

// HasActorId returns a boolean if a field has been set.
func (o *V1Config6) HasActorId() bool {
	if o != nil && o.ActorId != nil {
		return true
	}

	return false
}

// SetActorId gets a reference to the given string and assigns it to the ActorId field.
func (o *V1Config6) SetActorId(v string) {
	o.ActorId = &v
}

// GetActorType returns the ActorType field value if set, zero value otherwise.
func (o *V1Config6) GetActorType() string {
	if o == nil || o.ActorType == nil {
		var ret string
		return ret
	}
	return *o.ActorType
}

// GetActorTypeOk returns a tuple with the ActorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Config6) GetActorTypeOk() (*string, bool) {
	if o == nil || o.ActorType == nil {
		return nil, false
	}
	return o.ActorType, true
}

// HasActorType returns a boolean if a field has been set.
func (o *V1Config6) HasActorType() bool {
	if o != nil && o.ActorType != nil {
		return true
	}

	return false
}

// SetActorType gets a reference to the given string and assigns it to the ActorType field.
func (o *V1Config6) SetActorType(v string) {
	o.ActorType = &v
}

// GetAccessPolicy returns the AccessPolicy field value if set, zero value otherwise.
func (o *V1Config6) GetAccessPolicy() V1AccessPolicy {
	if o == nil || o.AccessPolicy == nil {
		var ret V1AccessPolicy
		return ret
	}
	return *o.AccessPolicy
}

// GetAccessPolicyOk returns a tuple with the AccessPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Config6) GetAccessPolicyOk() (*V1AccessPolicy, bool) {
	if o == nil || o.AccessPolicy == nil {
		return nil, false
	}
	return o.AccessPolicy, true
}

// HasAccessPolicy returns a boolean if a field has been set.
func (o *V1Config6) HasAccessPolicy() bool {
	if o != nil && o.AccessPolicy != nil {
		return true
	}

	return false
}

// SetAccessPolicy gets a reference to the given V1AccessPolicy and assigns it to the AccessPolicy field.
func (o *V1Config6) SetAccessPolicy(v V1AccessPolicy) {
	o.AccessPolicy = &v
}

func (o V1Config6) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ActorId != nil {
		toSerialize["actorId"] = o.ActorId
	}
	if o.ActorType != nil {
		toSerialize["actorType"] = o.ActorType
	}
	if o.AccessPolicy != nil {
		toSerialize["accessPolicy"] = o.AccessPolicy
	}
	return json.Marshal(toSerialize)
}

type NullableV1Config6 struct {
	value *V1Config6
	isSet bool
}

func (v NullableV1Config6) Get() *V1Config6 {
	return v.value
}

func (v *NullableV1Config6) Set(val *V1Config6) {
	v.value = val
	v.isSet = true
}

func (v NullableV1Config6) IsSet() bool {
	return v.isSet
}

func (v *NullableV1Config6) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1Config6(val *V1Config6) *NullableV1Config6 {
	return &NullableV1Config6{value: val, isSet: true}
}

func (v NullableV1Config6) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1Config6) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


