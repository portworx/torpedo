/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1ListImagesResponse Response to list images request.
type V1ListImagesResponse struct {
	// List of images.
	Images []V1Image `json:"images,omitempty"`
	Pagination *V1PageBasedPaginationResponse `json:"pagination,omitempty"`
}

// NewV1ListImagesResponse instantiates a new V1ListImagesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ListImagesResponse() *V1ListImagesResponse {
	this := V1ListImagesResponse{}
	return &this
}

// NewV1ListImagesResponseWithDefaults instantiates a new V1ListImagesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ListImagesResponseWithDefaults() *V1ListImagesResponse {
	this := V1ListImagesResponse{}
	return &this
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *V1ListImagesResponse) GetImages() []V1Image {
	if o == nil || o.Images == nil {
		var ret []V1Image
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ListImagesResponse) GetImagesOk() ([]V1Image, bool) {
	if o == nil || o.Images == nil {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *V1ListImagesResponse) HasImages() bool {
	if o != nil && o.Images != nil {
		return true
	}

	return false
}

// SetImages gets a reference to the given []V1Image and assigns it to the Images field.
func (o *V1ListImagesResponse) SetImages(v []V1Image) {
	o.Images = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *V1ListImagesResponse) GetPagination() V1PageBasedPaginationResponse {
	if o == nil || o.Pagination == nil {
		var ret V1PageBasedPaginationResponse
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ListImagesResponse) GetPaginationOk() (*V1PageBasedPaginationResponse, bool) {
	if o == nil || o.Pagination == nil {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *V1ListImagesResponse) HasPagination() bool {
	if o != nil && o.Pagination != nil {
		return true
	}

	return false
}

// SetPagination gets a reference to the given V1PageBasedPaginationResponse and assigns it to the Pagination field.
func (o *V1ListImagesResponse) SetPagination(v V1PageBasedPaginationResponse) {
	o.Pagination = &v
}

func (o V1ListImagesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Images != nil {
		toSerialize["images"] = o.Images
	}
	if o.Pagination != nil {
		toSerialize["pagination"] = o.Pagination
	}
	return json.Marshal(toSerialize)
}

type NullableV1ListImagesResponse struct {
	value *V1ListImagesResponse
	isSet bool
}

func (v NullableV1ListImagesResponse) Get() *V1ListImagesResponse {
	return v.value
}

func (v *NullableV1ListImagesResponse) Set(val *V1ListImagesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ListImagesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ListImagesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ListImagesResponse(val *V1ListImagesResponse) *NullableV1ListImagesResponse {
	return &NullableV1ListImagesResponse{value: val, isSet: true}
}

func (v NullableV1ListImagesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ListImagesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


