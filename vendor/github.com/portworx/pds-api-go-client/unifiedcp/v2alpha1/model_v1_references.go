/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1References References to the associated resources for backup configuration.
type V1References struct {
	// UID of the deployment to which the backup configuration belong.
	DeploymentId *string `json:"deploymentId,omitempty"`
	// UID of the backup target to which the backup configuration belong.
	BackupLocationId *string `json:"backupLocationId,omitempty"`
	// UID of the data service to which the backup configuration belong.
	DataServiceId *string `json:"dataServiceId,omitempty"`
}

// NewV1References instantiates a new V1References object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1References() *V1References {
	this := V1References{}
	return &this
}

// NewV1ReferencesWithDefaults instantiates a new V1References object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ReferencesWithDefaults() *V1References {
	this := V1References{}
	return &this
}

// GetDeploymentId returns the DeploymentId field value if set, zero value otherwise.
func (o *V1References) GetDeploymentId() string {
	if o == nil || o.DeploymentId == nil {
		var ret string
		return ret
	}
	return *o.DeploymentId
}

// GetDeploymentIdOk returns a tuple with the DeploymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1References) GetDeploymentIdOk() (*string, bool) {
	if o == nil || o.DeploymentId == nil {
		return nil, false
	}
	return o.DeploymentId, true
}

// HasDeploymentId returns a boolean if a field has been set.
func (o *V1References) HasDeploymentId() bool {
	if o != nil && o.DeploymentId != nil {
		return true
	}

	return false
}

// SetDeploymentId gets a reference to the given string and assigns it to the DeploymentId field.
func (o *V1References) SetDeploymentId(v string) {
	o.DeploymentId = &v
}

// GetBackupLocationId returns the BackupLocationId field value if set, zero value otherwise.
func (o *V1References) GetBackupLocationId() string {
	if o == nil || o.BackupLocationId == nil {
		var ret string
		return ret
	}
	return *o.BackupLocationId
}

// GetBackupLocationIdOk returns a tuple with the BackupLocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1References) GetBackupLocationIdOk() (*string, bool) {
	if o == nil || o.BackupLocationId == nil {
		return nil, false
	}
	return o.BackupLocationId, true
}

// HasBackupLocationId returns a boolean if a field has been set.
func (o *V1References) HasBackupLocationId() bool {
	if o != nil && o.BackupLocationId != nil {
		return true
	}

	return false
}

// SetBackupLocationId gets a reference to the given string and assigns it to the BackupLocationId field.
func (o *V1References) SetBackupLocationId(v string) {
	o.BackupLocationId = &v
}

// GetDataServiceId returns the DataServiceId field value if set, zero value otherwise.
func (o *V1References) GetDataServiceId() string {
	if o == nil || o.DataServiceId == nil {
		var ret string
		return ret
	}
	return *o.DataServiceId
}

// GetDataServiceIdOk returns a tuple with the DataServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1References) GetDataServiceIdOk() (*string, bool) {
	if o == nil || o.DataServiceId == nil {
		return nil, false
	}
	return o.DataServiceId, true
}

// HasDataServiceId returns a boolean if a field has been set.
func (o *V1References) HasDataServiceId() bool {
	if o != nil && o.DataServiceId != nil {
		return true
	}

	return false
}

// SetDataServiceId gets a reference to the given string and assigns it to the DataServiceId field.
func (o *V1References) SetDataServiceId(v string) {
	o.DataServiceId = &v
}

func (o V1References) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeploymentId != nil {
		toSerialize["deploymentId"] = o.DeploymentId
	}
	if o.BackupLocationId != nil {
		toSerialize["backupLocationId"] = o.BackupLocationId
	}
	if o.DataServiceId != nil {
		toSerialize["dataServiceId"] = o.DataServiceId
	}
	return json.Marshal(toSerialize)
}

type NullableV1References struct {
	value *V1References
	isSet bool
}

func (v NullableV1References) Get() *V1References {
	return v.value
}

func (v *NullableV1References) Set(val *V1References) {
	v.value = val
	v.isSet = true
}

func (v NullableV1References) IsSet() bool {
	return v.isSet
}

func (v *NullableV1References) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1References(val *V1References) *NullableV1References {
	return &NullableV1References{value: val, isSet: true}
}

func (v NullableV1References) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1References) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


