/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// V1WhoAmIResponse struct for V1WhoAmIResponse
type V1WhoAmIResponse struct {
	Id *string `json:"id,omitempty"`
	Email *string `json:"email,omitempty"`
	Accounts []V1Account1 `json:"accounts,omitempty"`
}

// NewV1WhoAmIResponse instantiates a new V1WhoAmIResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1WhoAmIResponse() *V1WhoAmIResponse {
	this := V1WhoAmIResponse{}
	return &this
}

// NewV1WhoAmIResponseWithDefaults instantiates a new V1WhoAmIResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1WhoAmIResponseWithDefaults() *V1WhoAmIResponse {
	this := V1WhoAmIResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *V1WhoAmIResponse) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1WhoAmIResponse) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *V1WhoAmIResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *V1WhoAmIResponse) SetId(v string) {
	o.Id = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *V1WhoAmIResponse) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1WhoAmIResponse) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *V1WhoAmIResponse) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *V1WhoAmIResponse) SetEmail(v string) {
	o.Email = &v
}

// GetAccounts returns the Accounts field value if set, zero value otherwise.
func (o *V1WhoAmIResponse) GetAccounts() []V1Account1 {
	if o == nil || o.Accounts == nil {
		var ret []V1Account1
		return ret
	}
	return o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1WhoAmIResponse) GetAccountsOk() ([]V1Account1, bool) {
	if o == nil || o.Accounts == nil {
		return nil, false
	}
	return o.Accounts, true
}

// HasAccounts returns a boolean if a field has been set.
func (o *V1WhoAmIResponse) HasAccounts() bool {
	if o != nil && o.Accounts != nil {
		return true
	}

	return false
}

// SetAccounts gets a reference to the given []V1Account1 and assigns it to the Accounts field.
func (o *V1WhoAmIResponse) SetAccounts(v []V1Account1) {
	o.Accounts = v
}

func (o V1WhoAmIResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Accounts != nil {
		toSerialize["accounts"] = o.Accounts
	}
	return json.Marshal(toSerialize)
}

type NullableV1WhoAmIResponse struct {
	value *V1WhoAmIResponse
	isSet bool
}

func (v NullableV1WhoAmIResponse) Get() *V1WhoAmIResponse {
	return v.value
}

func (v *NullableV1WhoAmIResponse) Set(val *V1WhoAmIResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1WhoAmIResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1WhoAmIResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1WhoAmIResponse(val *V1WhoAmIResponse) *NullableV1WhoAmIResponse {
	return &NullableV1WhoAmIResponse{value: val, isSet: true}
}

func (v NullableV1WhoAmIResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1WhoAmIResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


