/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// V1ProviderType - TYPE_UNSPECIFIED: Type unspecified  - AZURE: Azure Cloud  - GOOGLE: Google Cloud  - S3COMPATIBLE: S3 Compatible  - UNSTRUCTURED: Unstructured credentials
type V1ProviderType string

// List of v1ProviderType
const (
	TYPE_UNSPECIFIED V1ProviderType = "TYPE_UNSPECIFIED"
	AZURE V1ProviderType = "AZURE"
	GOOGLE V1ProviderType = "GOOGLE"
	S3_COMPATIBLE V1ProviderType = "S3COMPATIBLE"
	UNSTRUCTURED V1ProviderType = "UNSTRUCTURED"
)

// All allowed values of V1ProviderType enum
var AllowedV1ProviderTypeEnumValues = []V1ProviderType{
	"TYPE_UNSPECIFIED",
	"AZURE",
	"GOOGLE",
	"S3COMPATIBLE",
	"UNSTRUCTURED",
}

func (v *V1ProviderType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := V1ProviderType(value)
	for _, existing := range AllowedV1ProviderTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid V1ProviderType", value)
}

// NewV1ProviderTypeFromValue returns a pointer to a valid V1ProviderType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewV1ProviderTypeFromValue(v string) (*V1ProviderType, error) {
	ev := V1ProviderType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for V1ProviderType: valid values are %v", v, AllowedV1ProviderTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v V1ProviderType) IsValid() bool {
	for _, existing := range AllowedV1ProviderTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to v1ProviderType value
func (v V1ProviderType) Ptr() *V1ProviderType {
	return &v
}

type NullableV1ProviderType struct {
	value *V1ProviderType
	isSet bool
}

func (v NullableV1ProviderType) Get() *V1ProviderType {
	return v.value
}

func (v *NullableV1ProviderType) Set(val *V1ProviderType) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ProviderType) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ProviderType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ProviderType(val *V1ProviderType) *NullableV1ProviderType {
	return &NullableV1ProviderType{value: val, isSet: true}
}

func (v NullableV1ProviderType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ProviderType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

