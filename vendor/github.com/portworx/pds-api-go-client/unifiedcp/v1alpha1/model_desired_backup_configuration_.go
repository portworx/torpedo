/*
public/portworx/pds/tasks/apiv1/tasks.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pdsclient

import (
	"encoding/json"
)

// checks if the DesiredBackupConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DesiredBackupConfiguration{}

// DesiredBackupConfiguration struct for DesiredBackupConfiguration
type DesiredBackupConfiguration struct {
	Meta *MetadataOfTheBackupConfiguration `json:"meta,omitempty"`
	Config *V1Config `json:"config,omitempty"`
	Status *Backupconfigv1Status `json:"status,omitempty"`
}

// NewDesiredBackupConfiguration instantiates a new DesiredBackupConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDesiredBackupConfiguration() *DesiredBackupConfiguration {
	this := DesiredBackupConfiguration{}
	return &this
}

// NewDesiredBackupConfigurationWithDefaults instantiates a new DesiredBackupConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDesiredBackupConfigurationWithDefaults() *DesiredBackupConfiguration {
	this := DesiredBackupConfiguration{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *DesiredBackupConfiguration) GetMeta() MetadataOfTheBackupConfiguration {
	if o == nil || IsNil(o.Meta) {
		var ret MetadataOfTheBackupConfiguration
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesiredBackupConfiguration) GetMetaOk() (*MetadataOfTheBackupConfiguration, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *DesiredBackupConfiguration) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetadataOfTheBackupConfiguration and assigns it to the Meta field.
func (o *DesiredBackupConfiguration) SetMeta(v MetadataOfTheBackupConfiguration) {
	o.Meta = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *DesiredBackupConfiguration) GetConfig() V1Config {
	if o == nil || IsNil(o.Config) {
		var ret V1Config
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesiredBackupConfiguration) GetConfigOk() (*V1Config, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *DesiredBackupConfiguration) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given V1Config and assigns it to the Config field.
func (o *DesiredBackupConfiguration) SetConfig(v V1Config) {
	o.Config = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DesiredBackupConfiguration) GetStatus() Backupconfigv1Status {
	if o == nil || IsNil(o.Status) {
		var ret Backupconfigv1Status
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DesiredBackupConfiguration) GetStatusOk() (*Backupconfigv1Status, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DesiredBackupConfiguration) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given Backupconfigv1Status and assigns it to the Status field.
func (o *DesiredBackupConfiguration) SetStatus(v Backupconfigv1Status) {
	o.Status = &v
}

func (o DesiredBackupConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DesiredBackupConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableDesiredBackupConfiguration struct {
	value *DesiredBackupConfiguration
	isSet bool
}

func (v NullableDesiredBackupConfiguration) Get() *DesiredBackupConfiguration {
	return v.value
}

func (v *NullableDesiredBackupConfiguration) Set(val *DesiredBackupConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableDesiredBackupConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableDesiredBackupConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDesiredBackupConfiguration(val *DesiredBackupConfiguration) *NullableDesiredBackupConfiguration {
	return &NullableDesiredBackupConfiguration{value: val, isSet: true}
}

func (v NullableDesiredBackupConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDesiredBackupConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


