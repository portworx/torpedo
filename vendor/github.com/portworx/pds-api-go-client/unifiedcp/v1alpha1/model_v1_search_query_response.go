/*
public/portworx/pds/tasks/apiv1/tasks.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pdsclient

import (
	"encoding/json"
	"time"
)

// checks if the V1SearchQueryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1SearchQueryResponse{}

// V1SearchQueryResponse Response structure contains fields for query response from copilot service.
type V1SearchQueryResponse struct {
	// (-- api-linter: core::0158::response-repeated-first-field=disabled     aip.dev/not-precedent: We need to do this because of the copilot response. --) (-- api-linter: core::0158::response-plural-first-field=disabled     aip.dev/not-precedent: We need to do this because of the copilot response. --) Id of the dataservice.
	DataServiceId *string `json:"dataServiceId,omitempty"`
	// Unique id of response.
	Id *string `json:"id,omitempty"`
	// Query string.
	Query *string `json:"query,omitempty"`
	// Response string.
	Response *string `json:"response,omitempty"`
	// Response time.
	ResponseTime *time.Time `json:"responseTime,omitempty"`
}

// NewV1SearchQueryResponse instantiates a new V1SearchQueryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1SearchQueryResponse() *V1SearchQueryResponse {
	this := V1SearchQueryResponse{}
	return &this
}

// NewV1SearchQueryResponseWithDefaults instantiates a new V1SearchQueryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1SearchQueryResponseWithDefaults() *V1SearchQueryResponse {
	this := V1SearchQueryResponse{}
	return &this
}

// GetDataServiceId returns the DataServiceId field value if set, zero value otherwise.
func (o *V1SearchQueryResponse) GetDataServiceId() string {
	if o == nil || IsNil(o.DataServiceId) {
		var ret string
		return ret
	}
	return *o.DataServiceId
}

// GetDataServiceIdOk returns a tuple with the DataServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SearchQueryResponse) GetDataServiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.DataServiceId) {
		return nil, false
	}
	return o.DataServiceId, true
}

// HasDataServiceId returns a boolean if a field has been set.
func (o *V1SearchQueryResponse) HasDataServiceId() bool {
	if o != nil && !IsNil(o.DataServiceId) {
		return true
	}

	return false
}

// SetDataServiceId gets a reference to the given string and assigns it to the DataServiceId field.
func (o *V1SearchQueryResponse) SetDataServiceId(v string) {
	o.DataServiceId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *V1SearchQueryResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SearchQueryResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *V1SearchQueryResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *V1SearchQueryResponse) SetId(v string) {
	o.Id = &v
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *V1SearchQueryResponse) GetQuery() string {
	if o == nil || IsNil(o.Query) {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SearchQueryResponse) GetQueryOk() (*string, bool) {
	if o == nil || IsNil(o.Query) {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *V1SearchQueryResponse) HasQuery() bool {
	if o != nil && !IsNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *V1SearchQueryResponse) SetQuery(v string) {
	o.Query = &v
}

// GetResponse returns the Response field value if set, zero value otherwise.
func (o *V1SearchQueryResponse) GetResponse() string {
	if o == nil || IsNil(o.Response) {
		var ret string
		return ret
	}
	return *o.Response
}

// GetResponseOk returns a tuple with the Response field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SearchQueryResponse) GetResponseOk() (*string, bool) {
	if o == nil || IsNil(o.Response) {
		return nil, false
	}
	return o.Response, true
}

// HasResponse returns a boolean if a field has been set.
func (o *V1SearchQueryResponse) HasResponse() bool {
	if o != nil && !IsNil(o.Response) {
		return true
	}

	return false
}

// SetResponse gets a reference to the given string and assigns it to the Response field.
func (o *V1SearchQueryResponse) SetResponse(v string) {
	o.Response = &v
}

// GetResponseTime returns the ResponseTime field value if set, zero value otherwise.
func (o *V1SearchQueryResponse) GetResponseTime() time.Time {
	if o == nil || IsNil(o.ResponseTime) {
		var ret time.Time
		return ret
	}
	return *o.ResponseTime
}

// GetResponseTimeOk returns a tuple with the ResponseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SearchQueryResponse) GetResponseTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ResponseTime) {
		return nil, false
	}
	return o.ResponseTime, true
}

// HasResponseTime returns a boolean if a field has been set.
func (o *V1SearchQueryResponse) HasResponseTime() bool {
	if o != nil && !IsNil(o.ResponseTime) {
		return true
	}

	return false
}

// SetResponseTime gets a reference to the given time.Time and assigns it to the ResponseTime field.
func (o *V1SearchQueryResponse) SetResponseTime(v time.Time) {
	o.ResponseTime = &v
}

func (o V1SearchQueryResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1SearchQueryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DataServiceId) {
		toSerialize["dataServiceId"] = o.DataServiceId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Query) {
		toSerialize["query"] = o.Query
	}
	if !IsNil(o.Response) {
		toSerialize["response"] = o.Response
	}
	if !IsNil(o.ResponseTime) {
		toSerialize["responseTime"] = o.ResponseTime
	}
	return toSerialize, nil
}

type NullableV1SearchQueryResponse struct {
	value *V1SearchQueryResponse
	isSet bool
}

func (v NullableV1SearchQueryResponse) Get() *V1SearchQueryResponse {
	return v.value
}

func (v *NullableV1SearchQueryResponse) Set(val *V1SearchQueryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1SearchQueryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1SearchQueryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1SearchQueryResponse(val *V1SearchQueryResponse) *NullableV1SearchQueryResponse {
	return &NullableV1SearchQueryResponse{value: val, isSet: true}
}

func (v NullableV1SearchQueryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1SearchQueryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


