/*
public/portworx/pds/tasks/apiv1/tasks.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pdsclient

import (
	"encoding/json"
	"time"
)

// checks if the Restorev1Status type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Restorev1Status{}

// Restorev1Status Status of the restore.
type Restorev1Status struct {
	StartedAt *time.Time `json:"startedAt,omitempty"`
	CompletedAt *time.Time `json:"completedAt,omitempty"`
	ErrorCode *V1ErrorCode `json:"errorCode,omitempty"`
	ErrorMessage *string `json:"errorMessage,omitempty"`
	Phase *V1Phase `json:"phase,omitempty"`
}

// NewRestorev1Status instantiates a new Restorev1Status object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestorev1Status() *Restorev1Status {
	this := Restorev1Status{}
	var errorCode V1ErrorCode = V1ERRORCODE_ERROR_CODE_UNSPECIFIED
	this.ErrorCode = &errorCode
	var phase V1Phase = V1PHASE_PHASE_UNSPECIFIED
	this.Phase = &phase
	return &this
}

// NewRestorev1StatusWithDefaults instantiates a new Restorev1Status object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestorev1StatusWithDefaults() *Restorev1Status {
	this := Restorev1Status{}
	var errorCode V1ErrorCode = V1ERRORCODE_ERROR_CODE_UNSPECIFIED
	this.ErrorCode = &errorCode
	var phase V1Phase = V1PHASE_PHASE_UNSPECIFIED
	this.Phase = &phase
	return &this
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise.
func (o *Restorev1Status) GetStartedAt() time.Time {
	if o == nil || IsNil(o.StartedAt) {
		var ret time.Time
		return ret
	}
	return *o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Restorev1Status) GetStartedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartedAt) {
		return nil, false
	}
	return o.StartedAt, true
}

// HasStartedAt returns a boolean if a field has been set.
func (o *Restorev1Status) HasStartedAt() bool {
	if o != nil && !IsNil(o.StartedAt) {
		return true
	}

	return false
}

// SetStartedAt gets a reference to the given time.Time and assigns it to the StartedAt field.
func (o *Restorev1Status) SetStartedAt(v time.Time) {
	o.StartedAt = &v
}

// GetCompletedAt returns the CompletedAt field value if set, zero value otherwise.
func (o *Restorev1Status) GetCompletedAt() time.Time {
	if o == nil || IsNil(o.CompletedAt) {
		var ret time.Time
		return ret
	}
	return *o.CompletedAt
}

// GetCompletedAtOk returns a tuple with the CompletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Restorev1Status) GetCompletedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CompletedAt) {
		return nil, false
	}
	return o.CompletedAt, true
}

// HasCompletedAt returns a boolean if a field has been set.
func (o *Restorev1Status) HasCompletedAt() bool {
	if o != nil && !IsNil(o.CompletedAt) {
		return true
	}

	return false
}

// SetCompletedAt gets a reference to the given time.Time and assigns it to the CompletedAt field.
func (o *Restorev1Status) SetCompletedAt(v time.Time) {
	o.CompletedAt = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *Restorev1Status) GetErrorCode() V1ErrorCode {
	if o == nil || IsNil(o.ErrorCode) {
		var ret V1ErrorCode
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Restorev1Status) GetErrorCodeOk() (*V1ErrorCode, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *Restorev1Status) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given V1ErrorCode and assigns it to the ErrorCode field.
func (o *Restorev1Status) SetErrorCode(v V1ErrorCode) {
	o.ErrorCode = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *Restorev1Status) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Restorev1Status) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *Restorev1Status) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *Restorev1Status) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetPhase returns the Phase field value if set, zero value otherwise.
func (o *Restorev1Status) GetPhase() V1Phase {
	if o == nil || IsNil(o.Phase) {
		var ret V1Phase
		return ret
	}
	return *o.Phase
}

// GetPhaseOk returns a tuple with the Phase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Restorev1Status) GetPhaseOk() (*V1Phase, bool) {
	if o == nil || IsNil(o.Phase) {
		return nil, false
	}
	return o.Phase, true
}

// HasPhase returns a boolean if a field has been set.
func (o *Restorev1Status) HasPhase() bool {
	if o != nil && !IsNil(o.Phase) {
		return true
	}

	return false
}

// SetPhase gets a reference to the given V1Phase and assigns it to the Phase field.
func (o *Restorev1Status) SetPhase(v V1Phase) {
	o.Phase = &v
}

func (o Restorev1Status) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Restorev1Status) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StartedAt) {
		toSerialize["startedAt"] = o.StartedAt
	}
	if !IsNil(o.CompletedAt) {
		toSerialize["completedAt"] = o.CompletedAt
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if !IsNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	if !IsNil(o.Phase) {
		toSerialize["phase"] = o.Phase
	}
	return toSerialize, nil
}

type NullableRestorev1Status struct {
	value *Restorev1Status
	isSet bool
}

func (v NullableRestorev1Status) Get() *Restorev1Status {
	return v.value
}

func (v *NullableRestorev1Status) Set(val *Restorev1Status) {
	v.value = val
	v.isSet = true
}

func (v NullableRestorev1Status) IsSet() bool {
	return v.isSet
}

func (v *NullableRestorev1Status) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestorev1Status(val *Restorev1Status) *NullableRestorev1Status {
	return &NullableRestorev1Status{value: val, isSet: true}
}

func (v NullableRestorev1Status) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestorev1Status) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


