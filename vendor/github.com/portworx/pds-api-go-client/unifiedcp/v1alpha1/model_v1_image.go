/*
public/portworx/pds/tasks/apiv1/tasks.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pdsclient

import (
	"encoding/json"
)

// checks if the V1Image type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1Image{}

// V1Image Resource representing the data service image.
type V1Image struct {
	Meta *V1Meta `json:"meta,omitempty"`
	Info *V1Info `json:"info,omitempty"`
}

// NewV1Image instantiates a new V1Image object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1Image() *V1Image {
	this := V1Image{}
	return &this
}

// NewV1ImageWithDefaults instantiates a new V1Image object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ImageWithDefaults() *V1Image {
	this := V1Image{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *V1Image) GetMeta() V1Meta {
	if o == nil || IsNil(o.Meta) {
		var ret V1Meta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Image) GetMetaOk() (*V1Meta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *V1Image) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given V1Meta and assigns it to the Meta field.
func (o *V1Image) SetMeta(v V1Meta) {
	o.Meta = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *V1Image) GetInfo() V1Info {
	if o == nil || IsNil(o.Info) {
		var ret V1Info
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Image) GetInfoOk() (*V1Info, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *V1Image) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given V1Info and assigns it to the Info field.
func (o *V1Image) SetInfo(v V1Info) {
	o.Info = &v
}

func (o V1Image) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1Image) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Info) {
		toSerialize["info"] = o.Info
	}
	return toSerialize, nil
}

type NullableV1Image struct {
	value *V1Image
	isSet bool
}

func (v NullableV1Image) Get() *V1Image {
	return v.value
}

func (v *NullableV1Image) Set(val *V1Image) {
	v.value = val
	v.isSet = true
}

func (v NullableV1Image) IsSet() bool {
	return v.isSet
}

func (v *NullableV1Image) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1Image(val *V1Image) *NullableV1Image {
	return &NullableV1Image{value: val, isSet: true}
}

func (v NullableV1Image) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1Image) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


