/*
public/portworx/pds/tasks/apiv1/tasks.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pdsclient

import (
	"encoding/json"
)

// checks if the V1References3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1References3{}

// V1References3 References to other resources.
type V1References3 struct {
	// UID of the image of the data service which will needs to be backup .
	ImageId *string `json:"imageId,omitempty"`
}

// NewV1References3 instantiates a new V1References3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1References3() *V1References3 {
	this := V1References3{}
	return &this
}

// NewV1References3WithDefaults instantiates a new V1References3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1References3WithDefaults() *V1References3 {
	this := V1References3{}
	return &this
}

// GetImageId returns the ImageId field value if set, zero value otherwise.
func (o *V1References3) GetImageId() string {
	if o == nil || IsNil(o.ImageId) {
		var ret string
		return ret
	}
	return *o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1References3) GetImageIdOk() (*string, bool) {
	if o == nil || IsNil(o.ImageId) {
		return nil, false
	}
	return o.ImageId, true
}

// HasImageId returns a boolean if a field has been set.
func (o *V1References3) HasImageId() bool {
	if o != nil && !IsNil(o.ImageId) {
		return true
	}

	return false
}

// SetImageId gets a reference to the given string and assigns it to the ImageId field.
func (o *V1References3) SetImageId(v string) {
	o.ImageId = &v
}

func (o V1References3) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1References3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ImageId) {
		toSerialize["imageId"] = o.ImageId
	}
	return toSerialize, nil
}

type NullableV1References3 struct {
	value *V1References3
	isSet bool
}

func (v NullableV1References3) Get() *V1References3 {
	return v.value
}

func (v *NullableV1References3) Set(val *V1References3) {
	v.value = val
	v.isSet = true
}

func (v NullableV1References3) IsSet() bool {
	return v.isSet
}

func (v *NullableV1References3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1References3(val *V1References3) *NullableV1References3 {
	return &NullableV1References3{value: val, isSet: true}
}

func (v NullableV1References3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1References3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


