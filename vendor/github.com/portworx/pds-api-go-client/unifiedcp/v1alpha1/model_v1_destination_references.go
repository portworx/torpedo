/*
public/portworx/pds/tasks/apiv1/tasks.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pdsclient

import (
	"encoding/json"
)

// checks if the V1DestinationReferences type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DestinationReferences{}

// V1DestinationReferences Destination references for the restore.
type V1DestinationReferences struct {
	TargetClusterId *string `json:"targetClusterId,omitempty"`
	// UID of the deployment created by the restore.
	DeploymentId *string `json:"deploymentId,omitempty"`
}

// NewV1DestinationReferences instantiates a new V1DestinationReferences object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DestinationReferences() *V1DestinationReferences {
	this := V1DestinationReferences{}
	return &this
}

// NewV1DestinationReferencesWithDefaults instantiates a new V1DestinationReferences object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DestinationReferencesWithDefaults() *V1DestinationReferences {
	this := V1DestinationReferences{}
	return &this
}

// GetTargetClusterId returns the TargetClusterId field value if set, zero value otherwise.
func (o *V1DestinationReferences) GetTargetClusterId() string {
	if o == nil || IsNil(o.TargetClusterId) {
		var ret string
		return ret
	}
	return *o.TargetClusterId
}

// GetTargetClusterIdOk returns a tuple with the TargetClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DestinationReferences) GetTargetClusterIdOk() (*string, bool) {
	if o == nil || IsNil(o.TargetClusterId) {
		return nil, false
	}
	return o.TargetClusterId, true
}

// HasTargetClusterId returns a boolean if a field has been set.
func (o *V1DestinationReferences) HasTargetClusterId() bool {
	if o != nil && !IsNil(o.TargetClusterId) {
		return true
	}

	return false
}

// SetTargetClusterId gets a reference to the given string and assigns it to the TargetClusterId field.
func (o *V1DestinationReferences) SetTargetClusterId(v string) {
	o.TargetClusterId = &v
}

// GetDeploymentId returns the DeploymentId field value if set, zero value otherwise.
func (o *V1DestinationReferences) GetDeploymentId() string {
	if o == nil || IsNil(o.DeploymentId) {
		var ret string
		return ret
	}
	return *o.DeploymentId
}

// GetDeploymentIdOk returns a tuple with the DeploymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DestinationReferences) GetDeploymentIdOk() (*string, bool) {
	if o == nil || IsNil(o.DeploymentId) {
		return nil, false
	}
	return o.DeploymentId, true
}

// HasDeploymentId returns a boolean if a field has been set.
func (o *V1DestinationReferences) HasDeploymentId() bool {
	if o != nil && !IsNil(o.DeploymentId) {
		return true
	}

	return false
}

// SetDeploymentId gets a reference to the given string and assigns it to the DeploymentId field.
func (o *V1DestinationReferences) SetDeploymentId(v string) {
	o.DeploymentId = &v
}

func (o V1DestinationReferences) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DestinationReferences) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TargetClusterId) {
		toSerialize["targetClusterId"] = o.TargetClusterId
	}
	if !IsNil(o.DeploymentId) {
		toSerialize["deploymentId"] = o.DeploymentId
	}
	return toSerialize, nil
}

type NullableV1DestinationReferences struct {
	value *V1DestinationReferences
	isSet bool
}

func (v NullableV1DestinationReferences) Get() *V1DestinationReferences {
	return v.value
}

func (v *NullableV1DestinationReferences) Set(val *V1DestinationReferences) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DestinationReferences) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DestinationReferences) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DestinationReferences(val *V1DestinationReferences) *NullableV1DestinationReferences {
	return &NullableV1DestinationReferences{value: val, isSet: true}
}

func (v NullableV1DestinationReferences) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DestinationReferences) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


