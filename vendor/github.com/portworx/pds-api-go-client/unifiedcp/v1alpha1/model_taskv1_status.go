/*
public/portworx/pds/tasks/apiv1/tasks.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pdsclient

import (
	"encoding/json"
)

// checks if the Taskv1Status type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Taskv1Status{}

// Taskv1Status Status of the Task.
type Taskv1Status struct {
	// Total number of steps involved in the task.
	TotalSteps *string `json:"totalSteps,omitempty"`
	// Current step of the running task.
	CurrentStep *string `json:"currentStep,omitempty"`
	// List of log strings associated with the task.
	Logs []string `json:"logs,omitempty"`
	AssociatedResource *V1Reference `json:"associatedResource,omitempty"`
	State *StatusState `json:"state,omitempty"`
}

// NewTaskv1Status instantiates a new Taskv1Status object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaskv1Status() *Taskv1Status {
	this := Taskv1Status{}
	var state StatusState = STATUSSTATE_STATE_UNSPECIFIED
	this.State = &state
	return &this
}

// NewTaskv1StatusWithDefaults instantiates a new Taskv1Status object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaskv1StatusWithDefaults() *Taskv1Status {
	this := Taskv1Status{}
	var state StatusState = STATUSSTATE_STATE_UNSPECIFIED
	this.State = &state
	return &this
}

// GetTotalSteps returns the TotalSteps field value if set, zero value otherwise.
func (o *Taskv1Status) GetTotalSteps() string {
	if o == nil || IsNil(o.TotalSteps) {
		var ret string
		return ret
	}
	return *o.TotalSteps
}

// GetTotalStepsOk returns a tuple with the TotalSteps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Taskv1Status) GetTotalStepsOk() (*string, bool) {
	if o == nil || IsNil(o.TotalSteps) {
		return nil, false
	}
	return o.TotalSteps, true
}

// HasTotalSteps returns a boolean if a field has been set.
func (o *Taskv1Status) HasTotalSteps() bool {
	if o != nil && !IsNil(o.TotalSteps) {
		return true
	}

	return false
}

// SetTotalSteps gets a reference to the given string and assigns it to the TotalSteps field.
func (o *Taskv1Status) SetTotalSteps(v string) {
	o.TotalSteps = &v
}

// GetCurrentStep returns the CurrentStep field value if set, zero value otherwise.
func (o *Taskv1Status) GetCurrentStep() string {
	if o == nil || IsNil(o.CurrentStep) {
		var ret string
		return ret
	}
	return *o.CurrentStep
}

// GetCurrentStepOk returns a tuple with the CurrentStep field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Taskv1Status) GetCurrentStepOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentStep) {
		return nil, false
	}
	return o.CurrentStep, true
}

// HasCurrentStep returns a boolean if a field has been set.
func (o *Taskv1Status) HasCurrentStep() bool {
	if o != nil && !IsNil(o.CurrentStep) {
		return true
	}

	return false
}

// SetCurrentStep gets a reference to the given string and assigns it to the CurrentStep field.
func (o *Taskv1Status) SetCurrentStep(v string) {
	o.CurrentStep = &v
}

// GetLogs returns the Logs field value if set, zero value otherwise.
func (o *Taskv1Status) GetLogs() []string {
	if o == nil || IsNil(o.Logs) {
		var ret []string
		return ret
	}
	return o.Logs
}

// GetLogsOk returns a tuple with the Logs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Taskv1Status) GetLogsOk() ([]string, bool) {
	if o == nil || IsNil(o.Logs) {
		return nil, false
	}
	return o.Logs, true
}

// HasLogs returns a boolean if a field has been set.
func (o *Taskv1Status) HasLogs() bool {
	if o != nil && !IsNil(o.Logs) {
		return true
	}

	return false
}

// SetLogs gets a reference to the given []string and assigns it to the Logs field.
func (o *Taskv1Status) SetLogs(v []string) {
	o.Logs = v
}

// GetAssociatedResource returns the AssociatedResource field value if set, zero value otherwise.
func (o *Taskv1Status) GetAssociatedResource() V1Reference {
	if o == nil || IsNil(o.AssociatedResource) {
		var ret V1Reference
		return ret
	}
	return *o.AssociatedResource
}

// GetAssociatedResourceOk returns a tuple with the AssociatedResource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Taskv1Status) GetAssociatedResourceOk() (*V1Reference, bool) {
	if o == nil || IsNil(o.AssociatedResource) {
		return nil, false
	}
	return o.AssociatedResource, true
}

// HasAssociatedResource returns a boolean if a field has been set.
func (o *Taskv1Status) HasAssociatedResource() bool {
	if o != nil && !IsNil(o.AssociatedResource) {
		return true
	}

	return false
}

// SetAssociatedResource gets a reference to the given V1Reference and assigns it to the AssociatedResource field.
func (o *Taskv1Status) SetAssociatedResource(v V1Reference) {
	o.AssociatedResource = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Taskv1Status) GetState() StatusState {
	if o == nil || IsNil(o.State) {
		var ret StatusState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Taskv1Status) GetStateOk() (*StatusState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Taskv1Status) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given StatusState and assigns it to the State field.
func (o *Taskv1Status) SetState(v StatusState) {
	o.State = &v
}

func (o Taskv1Status) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Taskv1Status) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalSteps) {
		toSerialize["totalSteps"] = o.TotalSteps
	}
	if !IsNil(o.CurrentStep) {
		toSerialize["currentStep"] = o.CurrentStep
	}
	if !IsNil(o.Logs) {
		toSerialize["logs"] = o.Logs
	}
	if !IsNil(o.AssociatedResource) {
		toSerialize["associatedResource"] = o.AssociatedResource
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	return toSerialize, nil
}

type NullableTaskv1Status struct {
	value *Taskv1Status
	isSet bool
}

func (v NullableTaskv1Status) Get() *Taskv1Status {
	return v.value
}

func (v *NullableTaskv1Status) Set(val *Taskv1Status) {
	v.value = val
	v.isSet = true
}

func (v NullableTaskv1Status) IsSet() bool {
	return v.isSet
}

func (v *NullableTaskv1Status) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaskv1Status(val *Taskv1Status) *NullableTaskv1Status {
	return &NullableTaskv1Status{value: val, isSet: true}
}

func (v NullableTaskv1Status) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaskv1Status) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


