/*
public/portworx/pds/tasks/apiv1/tasks.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pdsclient

import (
	"encoding/json"
)

// checks if the V1ListDataServiceVersionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ListDataServiceVersionsResponse{}

// V1ListDataServiceVersionsResponse struct for V1ListDataServiceVersionsResponse
type V1ListDataServiceVersionsResponse struct {
	DataServiceVersions []V1DataServiceVersion `json:"dataServiceVersions,omitempty"`
	Pagination *V1PageBasedPaginationResponse `json:"pagination,omitempty"`
}

// NewV1ListDataServiceVersionsResponse instantiates a new V1ListDataServiceVersionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ListDataServiceVersionsResponse() *V1ListDataServiceVersionsResponse {
	this := V1ListDataServiceVersionsResponse{}
	return &this
}

// NewV1ListDataServiceVersionsResponseWithDefaults instantiates a new V1ListDataServiceVersionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ListDataServiceVersionsResponseWithDefaults() *V1ListDataServiceVersionsResponse {
	this := V1ListDataServiceVersionsResponse{}
	return &this
}

// GetDataServiceVersions returns the DataServiceVersions field value if set, zero value otherwise.
func (o *V1ListDataServiceVersionsResponse) GetDataServiceVersions() []V1DataServiceVersion {
	if o == nil || IsNil(o.DataServiceVersions) {
		var ret []V1DataServiceVersion
		return ret
	}
	return o.DataServiceVersions
}

// GetDataServiceVersionsOk returns a tuple with the DataServiceVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ListDataServiceVersionsResponse) GetDataServiceVersionsOk() ([]V1DataServiceVersion, bool) {
	if o == nil || IsNil(o.DataServiceVersions) {
		return nil, false
	}
	return o.DataServiceVersions, true
}

// HasDataServiceVersions returns a boolean if a field has been set.
func (o *V1ListDataServiceVersionsResponse) HasDataServiceVersions() bool {
	if o != nil && !IsNil(o.DataServiceVersions) {
		return true
	}

	return false
}

// SetDataServiceVersions gets a reference to the given []V1DataServiceVersion and assigns it to the DataServiceVersions field.
func (o *V1ListDataServiceVersionsResponse) SetDataServiceVersions(v []V1DataServiceVersion) {
	o.DataServiceVersions = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *V1ListDataServiceVersionsResponse) GetPagination() V1PageBasedPaginationResponse {
	if o == nil || IsNil(o.Pagination) {
		var ret V1PageBasedPaginationResponse
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ListDataServiceVersionsResponse) GetPaginationOk() (*V1PageBasedPaginationResponse, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *V1ListDataServiceVersionsResponse) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given V1PageBasedPaginationResponse and assigns it to the Pagination field.
func (o *V1ListDataServiceVersionsResponse) SetPagination(v V1PageBasedPaginationResponse) {
	o.Pagination = &v
}

func (o V1ListDataServiceVersionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ListDataServiceVersionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DataServiceVersions) {
		toSerialize["dataServiceVersions"] = o.DataServiceVersions
	}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	return toSerialize, nil
}

type NullableV1ListDataServiceVersionsResponse struct {
	value *V1ListDataServiceVersionsResponse
	isSet bool
}

func (v NullableV1ListDataServiceVersionsResponse) Get() *V1ListDataServiceVersionsResponse {
	return v.value
}

func (v *NullableV1ListDataServiceVersionsResponse) Set(val *V1ListDataServiceVersionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ListDataServiceVersionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ListDataServiceVersionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ListDataServiceVersionsResponse(val *V1ListDataServiceVersionsResponse) *NullableV1ListDataServiceVersionsResponse {
	return &NullableV1ListDataServiceVersionsResponse{value: val, isSet: true}
}

func (v NullableV1ListDataServiceVersionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ListDataServiceVersionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


