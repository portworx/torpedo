/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// ControllersCreateAccountRequest struct for ControllersCreateAccountRequest
type ControllersCreateAccountRequest struct {
	DnsDetails *ModelsDNSDetails `json:"dns_details,omitempty"`
	MaasDetails *ModelsMAASDetails `json:"maas_details,omitempty"`
	// Name of the account.
	Name *string `json:"name,omitempty"`
}

// NewControllersCreateAccountRequest instantiates a new ControllersCreateAccountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControllersCreateAccountRequest() *ControllersCreateAccountRequest {
	this := ControllersCreateAccountRequest{}
	return &this
}

// NewControllersCreateAccountRequestWithDefaults instantiates a new ControllersCreateAccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControllersCreateAccountRequestWithDefaults() *ControllersCreateAccountRequest {
	this := ControllersCreateAccountRequest{}
	return &this
}

// GetDnsDetails returns the DnsDetails field value if set, zero value otherwise.
func (o *ControllersCreateAccountRequest) GetDnsDetails() ModelsDNSDetails {
	if o == nil || o.DnsDetails == nil {
		var ret ModelsDNSDetails
		return ret
	}
	return *o.DnsDetails
}

// GetDnsDetailsOk returns a tuple with the DnsDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersCreateAccountRequest) GetDnsDetailsOk() (*ModelsDNSDetails, bool) {
	if o == nil || o.DnsDetails == nil {
		return nil, false
	}
	return o.DnsDetails, true
}

// HasDnsDetails returns a boolean if a field has been set.
func (o *ControllersCreateAccountRequest) HasDnsDetails() bool {
	if o != nil && o.DnsDetails != nil {
		return true
	}

	return false
}

// SetDnsDetails gets a reference to the given ModelsDNSDetails and assigns it to the DnsDetails field.
func (o *ControllersCreateAccountRequest) SetDnsDetails(v ModelsDNSDetails) {
	o.DnsDetails = &v
}

// GetMaasDetails returns the MaasDetails field value if set, zero value otherwise.
func (o *ControllersCreateAccountRequest) GetMaasDetails() ModelsMAASDetails {
	if o == nil || o.MaasDetails == nil {
		var ret ModelsMAASDetails
		return ret
	}
	return *o.MaasDetails
}

// GetMaasDetailsOk returns a tuple with the MaasDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersCreateAccountRequest) GetMaasDetailsOk() (*ModelsMAASDetails, bool) {
	if o == nil || o.MaasDetails == nil {
		return nil, false
	}
	return o.MaasDetails, true
}

// HasMaasDetails returns a boolean if a field has been set.
func (o *ControllersCreateAccountRequest) HasMaasDetails() bool {
	if o != nil && o.MaasDetails != nil {
		return true
	}

	return false
}

// SetMaasDetails gets a reference to the given ModelsMAASDetails and assigns it to the MaasDetails field.
func (o *ControllersCreateAccountRequest) SetMaasDetails(v ModelsMAASDetails) {
	o.MaasDetails = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ControllersCreateAccountRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersCreateAccountRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ControllersCreateAccountRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ControllersCreateAccountRequest) SetName(v string) {
	o.Name = &v
}

func (o ControllersCreateAccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DnsDetails != nil {
		toSerialize["dns_details"] = o.DnsDetails
	}
	if o.MaasDetails != nil {
		toSerialize["maas_details"] = o.MaasDetails
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableControllersCreateAccountRequest struct {
	value *ControllersCreateAccountRequest
	isSet bool
}

func (v NullableControllersCreateAccountRequest) Get() *ControllersCreateAccountRequest {
	return v.value
}

func (v *NullableControllersCreateAccountRequest) Set(val *ControllersCreateAccountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableControllersCreateAccountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableControllersCreateAccountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControllersCreateAccountRequest(val *ControllersCreateAccountRequest) *NullableControllersCreateAccountRequest {
	return &NullableControllersCreateAccountRequest{value: val, isSet: true}
}

func (v NullableControllersCreateAccountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControllersCreateAccountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


