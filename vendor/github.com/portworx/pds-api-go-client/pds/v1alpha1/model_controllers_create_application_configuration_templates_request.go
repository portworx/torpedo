/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// ControllersCreateApplicationConfigurationTemplatesRequest struct for ControllersCreateApplicationConfigurationTemplatesRequest
type ControllersCreateApplicationConfigurationTemplatesRequest struct {
	ConfigItems []ModelsConfigItem `json:"config_items,omitempty"`
	DataServiceId *string `json:"data_service_id,omitempty"`
	// See models.ApplicationConfigurationTemplate for more information.
	Name *string `json:"name,omitempty"`
}

// NewControllersCreateApplicationConfigurationTemplatesRequest instantiates a new ControllersCreateApplicationConfigurationTemplatesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControllersCreateApplicationConfigurationTemplatesRequest() *ControllersCreateApplicationConfigurationTemplatesRequest {
	this := ControllersCreateApplicationConfigurationTemplatesRequest{}
	return &this
}

// NewControllersCreateApplicationConfigurationTemplatesRequestWithDefaults instantiates a new ControllersCreateApplicationConfigurationTemplatesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControllersCreateApplicationConfigurationTemplatesRequestWithDefaults() *ControllersCreateApplicationConfigurationTemplatesRequest {
	this := ControllersCreateApplicationConfigurationTemplatesRequest{}
	return &this
}

// GetConfigItems returns the ConfigItems field value if set, zero value otherwise.
func (o *ControllersCreateApplicationConfigurationTemplatesRequest) GetConfigItems() []ModelsConfigItem {
	if o == nil || o.ConfigItems == nil {
		var ret []ModelsConfigItem
		return ret
	}
	return o.ConfigItems
}

// GetConfigItemsOk returns a tuple with the ConfigItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersCreateApplicationConfigurationTemplatesRequest) GetConfigItemsOk() ([]ModelsConfigItem, bool) {
	if o == nil || o.ConfigItems == nil {
		return nil, false
	}
	return o.ConfigItems, true
}

// HasConfigItems returns a boolean if a field has been set.
func (o *ControllersCreateApplicationConfigurationTemplatesRequest) HasConfigItems() bool {
	if o != nil && o.ConfigItems != nil {
		return true
	}

	return false
}

// SetConfigItems gets a reference to the given []ModelsConfigItem and assigns it to the ConfigItems field.
func (o *ControllersCreateApplicationConfigurationTemplatesRequest) SetConfigItems(v []ModelsConfigItem) {
	o.ConfigItems = v
}

// GetDataServiceId returns the DataServiceId field value if set, zero value otherwise.
func (o *ControllersCreateApplicationConfigurationTemplatesRequest) GetDataServiceId() string {
	if o == nil || o.DataServiceId == nil {
		var ret string
		return ret
	}
	return *o.DataServiceId
}

// GetDataServiceIdOk returns a tuple with the DataServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersCreateApplicationConfigurationTemplatesRequest) GetDataServiceIdOk() (*string, bool) {
	if o == nil || o.DataServiceId == nil {
		return nil, false
	}
	return o.DataServiceId, true
}

// HasDataServiceId returns a boolean if a field has been set.
func (o *ControllersCreateApplicationConfigurationTemplatesRequest) HasDataServiceId() bool {
	if o != nil && o.DataServiceId != nil {
		return true
	}

	return false
}

// SetDataServiceId gets a reference to the given string and assigns it to the DataServiceId field.
func (o *ControllersCreateApplicationConfigurationTemplatesRequest) SetDataServiceId(v string) {
	o.DataServiceId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ControllersCreateApplicationConfigurationTemplatesRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersCreateApplicationConfigurationTemplatesRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ControllersCreateApplicationConfigurationTemplatesRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ControllersCreateApplicationConfigurationTemplatesRequest) SetName(v string) {
	o.Name = &v
}

func (o ControllersCreateApplicationConfigurationTemplatesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConfigItems != nil {
		toSerialize["config_items"] = o.ConfigItems
	}
	if o.DataServiceId != nil {
		toSerialize["data_service_id"] = o.DataServiceId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableControllersCreateApplicationConfigurationTemplatesRequest struct {
	value *ControllersCreateApplicationConfigurationTemplatesRequest
	isSet bool
}

func (v NullableControllersCreateApplicationConfigurationTemplatesRequest) Get() *ControllersCreateApplicationConfigurationTemplatesRequest {
	return v.value
}

func (v *NullableControllersCreateApplicationConfigurationTemplatesRequest) Set(val *ControllersCreateApplicationConfigurationTemplatesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableControllersCreateApplicationConfigurationTemplatesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableControllersCreateApplicationConfigurationTemplatesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControllersCreateApplicationConfigurationTemplatesRequest(val *ControllersCreateApplicationConfigurationTemplatesRequest) *NullableControllersCreateApplicationConfigurationTemplatesRequest {
	return &NullableControllersCreateApplicationConfigurationTemplatesRequest{value: val, isSet: true}
}

func (v NullableControllersCreateApplicationConfigurationTemplatesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControllersCreateApplicationConfigurationTemplatesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


