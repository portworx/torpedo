/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// ControllersEventsResponse struct for ControllersEventsResponse
type ControllersEventsResponse struct {
	ResourceEvents []DeploymentsResourceEvents `json:"resourceEvents,omitempty"`
}

// NewControllersEventsResponse instantiates a new ControllersEventsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControllersEventsResponse() *ControllersEventsResponse {
	this := ControllersEventsResponse{}
	return &this
}

// NewControllersEventsResponseWithDefaults instantiates a new ControllersEventsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControllersEventsResponseWithDefaults() *ControllersEventsResponse {
	this := ControllersEventsResponse{}
	return &this
}

// GetResourceEvents returns the ResourceEvents field value if set, zero value otherwise.
func (o *ControllersEventsResponse) GetResourceEvents() []DeploymentsResourceEvents {
	if o == nil || o.ResourceEvents == nil {
		var ret []DeploymentsResourceEvents
		return ret
	}
	return o.ResourceEvents
}

// GetResourceEventsOk returns a tuple with the ResourceEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersEventsResponse) GetResourceEventsOk() ([]DeploymentsResourceEvents, bool) {
	if o == nil || o.ResourceEvents == nil {
		return nil, false
	}
	return o.ResourceEvents, true
}

// HasResourceEvents returns a boolean if a field has been set.
func (o *ControllersEventsResponse) HasResourceEvents() bool {
	if o != nil && o.ResourceEvents != nil {
		return true
	}

	return false
}

// SetResourceEvents gets a reference to the given []DeploymentsResourceEvents and assigns it to the ResourceEvents field.
func (o *ControllersEventsResponse) SetResourceEvents(v []DeploymentsResourceEvents) {
	o.ResourceEvents = v
}

func (o ControllersEventsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ResourceEvents != nil {
		toSerialize["resourceEvents"] = o.ResourceEvents
	}
	return json.Marshal(toSerialize)
}

type NullableControllersEventsResponse struct {
	value *ControllersEventsResponse
	isSet bool
}

func (v NullableControllersEventsResponse) Get() *ControllersEventsResponse {
	return v.value
}

func (v *NullableControllersEventsResponse) Set(val *ControllersEventsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableControllersEventsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableControllersEventsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControllersEventsResponse(val *ControllersEventsResponse) *NullableControllersEventsResponse {
	return &NullableControllersEventsResponse{value: val, isSet: true}
}

func (v NullableControllersEventsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControllersEventsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


