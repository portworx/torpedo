/*
PDS API

Portworx Data Services API Server

API version: 3.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// ControllersUpdateDeploymentRequest struct for ControllersUpdateDeploymentRequest
type ControllersUpdateDeploymentRequest struct {
	Configuration map[string]interface{} `json:"configuration,omitempty"`
	ConnectionDetails map[string]interface{} `json:"connection_details,omitempty"`
	Endpoint *string `json:"endpoint,omitempty"`
	ImageId *string `json:"image_id,omitempty"`
	NodeCount *int32 `json:"node_count,omitempty"`
	Resources map[string]interface{} `json:"resources,omitempty"`
}

// NewControllersUpdateDeploymentRequest instantiates a new ControllersUpdateDeploymentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControllersUpdateDeploymentRequest() *ControllersUpdateDeploymentRequest {
	this := ControllersUpdateDeploymentRequest{}
	return &this
}

// NewControllersUpdateDeploymentRequestWithDefaults instantiates a new ControllersUpdateDeploymentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControllersUpdateDeploymentRequestWithDefaults() *ControllersUpdateDeploymentRequest {
	this := ControllersUpdateDeploymentRequest{}
	return &this
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *ControllersUpdateDeploymentRequest) GetConfiguration() map[string]interface{} {
	if o == nil || o.Configuration == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersUpdateDeploymentRequest) GetConfigurationOk() (map[string]interface{}, bool) {
	if o == nil || o.Configuration == nil {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *ControllersUpdateDeploymentRequest) HasConfiguration() bool {
	if o != nil && o.Configuration != nil {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given map[string]interface{} and assigns it to the Configuration field.
func (o *ControllersUpdateDeploymentRequest) SetConfiguration(v map[string]interface{}) {
	o.Configuration = v
}

// GetConnectionDetails returns the ConnectionDetails field value if set, zero value otherwise.
func (o *ControllersUpdateDeploymentRequest) GetConnectionDetails() map[string]interface{} {
	if o == nil || o.ConnectionDetails == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.ConnectionDetails
}

// GetConnectionDetailsOk returns a tuple with the ConnectionDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersUpdateDeploymentRequest) GetConnectionDetailsOk() (map[string]interface{}, bool) {
	if o == nil || o.ConnectionDetails == nil {
		return nil, false
	}
	return o.ConnectionDetails, true
}

// HasConnectionDetails returns a boolean if a field has been set.
func (o *ControllersUpdateDeploymentRequest) HasConnectionDetails() bool {
	if o != nil && o.ConnectionDetails != nil {
		return true
	}

	return false
}

// SetConnectionDetails gets a reference to the given map[string]interface{} and assigns it to the ConnectionDetails field.
func (o *ControllersUpdateDeploymentRequest) SetConnectionDetails(v map[string]interface{}) {
	o.ConnectionDetails = v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *ControllersUpdateDeploymentRequest) GetEndpoint() string {
	if o == nil || o.Endpoint == nil {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersUpdateDeploymentRequest) GetEndpointOk() (*string, bool) {
	if o == nil || o.Endpoint == nil {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *ControllersUpdateDeploymentRequest) HasEndpoint() bool {
	if o != nil && o.Endpoint != nil {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *ControllersUpdateDeploymentRequest) SetEndpoint(v string) {
	o.Endpoint = &v
}

// GetImageId returns the ImageId field value if set, zero value otherwise.
func (o *ControllersUpdateDeploymentRequest) GetImageId() string {
	if o == nil || o.ImageId == nil {
		var ret string
		return ret
	}
	return *o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersUpdateDeploymentRequest) GetImageIdOk() (*string, bool) {
	if o == nil || o.ImageId == nil {
		return nil, false
	}
	return o.ImageId, true
}

// HasImageId returns a boolean if a field has been set.
func (o *ControllersUpdateDeploymentRequest) HasImageId() bool {
	if o != nil && o.ImageId != nil {
		return true
	}

	return false
}

// SetImageId gets a reference to the given string and assigns it to the ImageId field.
func (o *ControllersUpdateDeploymentRequest) SetImageId(v string) {
	o.ImageId = &v
}

// GetNodeCount returns the NodeCount field value if set, zero value otherwise.
func (o *ControllersUpdateDeploymentRequest) GetNodeCount() int32 {
	if o == nil || o.NodeCount == nil {
		var ret int32
		return ret
	}
	return *o.NodeCount
}

// GetNodeCountOk returns a tuple with the NodeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersUpdateDeploymentRequest) GetNodeCountOk() (*int32, bool) {
	if o == nil || o.NodeCount == nil {
		return nil, false
	}
	return o.NodeCount, true
}

// HasNodeCount returns a boolean if a field has been set.
func (o *ControllersUpdateDeploymentRequest) HasNodeCount() bool {
	if o != nil && o.NodeCount != nil {
		return true
	}

	return false
}

// SetNodeCount gets a reference to the given int32 and assigns it to the NodeCount field.
func (o *ControllersUpdateDeploymentRequest) SetNodeCount(v int32) {
	o.NodeCount = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *ControllersUpdateDeploymentRequest) GetResources() map[string]interface{} {
	if o == nil || o.Resources == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersUpdateDeploymentRequest) GetResourcesOk() (map[string]interface{}, bool) {
	if o == nil || o.Resources == nil {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *ControllersUpdateDeploymentRequest) HasResources() bool {
	if o != nil && o.Resources != nil {
		return true
	}

	return false
}

// SetResources gets a reference to the given map[string]interface{} and assigns it to the Resources field.
func (o *ControllersUpdateDeploymentRequest) SetResources(v map[string]interface{}) {
	o.Resources = v
}

func (o ControllersUpdateDeploymentRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Configuration != nil {
		toSerialize["configuration"] = o.Configuration
	}
	if o.ConnectionDetails != nil {
		toSerialize["connection_details"] = o.ConnectionDetails
	}
	if o.Endpoint != nil {
		toSerialize["endpoint"] = o.Endpoint
	}
	if o.ImageId != nil {
		toSerialize["image_id"] = o.ImageId
	}
	if o.NodeCount != nil {
		toSerialize["node_count"] = o.NodeCount
	}
	if o.Resources != nil {
		toSerialize["resources"] = o.Resources
	}
	return json.Marshal(toSerialize)
}

type NullableControllersUpdateDeploymentRequest struct {
	value *ControllersUpdateDeploymentRequest
	isSet bool
}

func (v NullableControllersUpdateDeploymentRequest) Get() *ControllersUpdateDeploymentRequest {
	return v.value
}

func (v *NullableControllersUpdateDeploymentRequest) Set(val *ControllersUpdateDeploymentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableControllersUpdateDeploymentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableControllersUpdateDeploymentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControllersUpdateDeploymentRequest(val *ControllersUpdateDeploymentRequest) *NullableControllersUpdateDeploymentRequest {
	return &NullableControllersUpdateDeploymentRequest{value: val, isSet: true}
}

func (v NullableControllersUpdateDeploymentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControllersUpdateDeploymentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


