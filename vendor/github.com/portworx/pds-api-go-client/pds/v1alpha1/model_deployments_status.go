/*
PDS API

Portworx Data Services API Server

API version: 3.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// DeploymentsStatus struct for DeploymentsStatus
type DeploymentsStatus struct {
	Health *string `json:"health,omitempty"`
	Initialized *string `json:"initialized,omitempty"`
	ReadyReplicas *int32 `json:"readyReplicas,omitempty"`
	Replicas *int32 `json:"replicas,omitempty"`
	Resources []DeploymentsResourceConditions `json:"resources,omitempty"`
}

// NewDeploymentsStatus instantiates a new DeploymentsStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentsStatus() *DeploymentsStatus {
	this := DeploymentsStatus{}
	return &this
}

// NewDeploymentsStatusWithDefaults instantiates a new DeploymentsStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentsStatusWithDefaults() *DeploymentsStatus {
	this := DeploymentsStatus{}
	return &this
}

// GetHealth returns the Health field value if set, zero value otherwise.
func (o *DeploymentsStatus) GetHealth() string {
	if o == nil || o.Health == nil {
		var ret string
		return ret
	}
	return *o.Health
}

// GetHealthOk returns a tuple with the Health field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentsStatus) GetHealthOk() (*string, bool) {
	if o == nil || o.Health == nil {
		return nil, false
	}
	return o.Health, true
}

// HasHealth returns a boolean if a field has been set.
func (o *DeploymentsStatus) HasHealth() bool {
	if o != nil && o.Health != nil {
		return true
	}

	return false
}

// SetHealth gets a reference to the given string and assigns it to the Health field.
func (o *DeploymentsStatus) SetHealth(v string) {
	o.Health = &v
}

// GetInitialized returns the Initialized field value if set, zero value otherwise.
func (o *DeploymentsStatus) GetInitialized() string {
	if o == nil || o.Initialized == nil {
		var ret string
		return ret
	}
	return *o.Initialized
}

// GetInitializedOk returns a tuple with the Initialized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentsStatus) GetInitializedOk() (*string, bool) {
	if o == nil || o.Initialized == nil {
		return nil, false
	}
	return o.Initialized, true
}

// HasInitialized returns a boolean if a field has been set.
func (o *DeploymentsStatus) HasInitialized() bool {
	if o != nil && o.Initialized != nil {
		return true
	}

	return false
}

// SetInitialized gets a reference to the given string and assigns it to the Initialized field.
func (o *DeploymentsStatus) SetInitialized(v string) {
	o.Initialized = &v
}

// GetReadyReplicas returns the ReadyReplicas field value if set, zero value otherwise.
func (o *DeploymentsStatus) GetReadyReplicas() int32 {
	if o == nil || o.ReadyReplicas == nil {
		var ret int32
		return ret
	}
	return *o.ReadyReplicas
}

// GetReadyReplicasOk returns a tuple with the ReadyReplicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentsStatus) GetReadyReplicasOk() (*int32, bool) {
	if o == nil || o.ReadyReplicas == nil {
		return nil, false
	}
	return o.ReadyReplicas, true
}

// HasReadyReplicas returns a boolean if a field has been set.
func (o *DeploymentsStatus) HasReadyReplicas() bool {
	if o != nil && o.ReadyReplicas != nil {
		return true
	}

	return false
}

// SetReadyReplicas gets a reference to the given int32 and assigns it to the ReadyReplicas field.
func (o *DeploymentsStatus) SetReadyReplicas(v int32) {
	o.ReadyReplicas = &v
}

// GetReplicas returns the Replicas field value if set, zero value otherwise.
func (o *DeploymentsStatus) GetReplicas() int32 {
	if o == nil || o.Replicas == nil {
		var ret int32
		return ret
	}
	return *o.Replicas
}

// GetReplicasOk returns a tuple with the Replicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentsStatus) GetReplicasOk() (*int32, bool) {
	if o == nil || o.Replicas == nil {
		return nil, false
	}
	return o.Replicas, true
}

// HasReplicas returns a boolean if a field has been set.
func (o *DeploymentsStatus) HasReplicas() bool {
	if o != nil && o.Replicas != nil {
		return true
	}

	return false
}

// SetReplicas gets a reference to the given int32 and assigns it to the Replicas field.
func (o *DeploymentsStatus) SetReplicas(v int32) {
	o.Replicas = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *DeploymentsStatus) GetResources() []DeploymentsResourceConditions {
	if o == nil || o.Resources == nil {
		var ret []DeploymentsResourceConditions
		return ret
	}
	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentsStatus) GetResourcesOk() ([]DeploymentsResourceConditions, bool) {
	if o == nil || o.Resources == nil {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *DeploymentsStatus) HasResources() bool {
	if o != nil && o.Resources != nil {
		return true
	}

	return false
}

// SetResources gets a reference to the given []DeploymentsResourceConditions and assigns it to the Resources field.
func (o *DeploymentsStatus) SetResources(v []DeploymentsResourceConditions) {
	o.Resources = v
}

func (o DeploymentsStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Health != nil {
		toSerialize["health"] = o.Health
	}
	if o.Initialized != nil {
		toSerialize["initialized"] = o.Initialized
	}
	if o.ReadyReplicas != nil {
		toSerialize["readyReplicas"] = o.ReadyReplicas
	}
	if o.Replicas != nil {
		toSerialize["replicas"] = o.Replicas
	}
	if o.Resources != nil {
		toSerialize["resources"] = o.Resources
	}
	return json.Marshal(toSerialize)
}

type NullableDeploymentsStatus struct {
	value *DeploymentsStatus
	isSet bool
}

func (v NullableDeploymentsStatus) Get() *DeploymentsStatus {
	return v.value
}

func (v *NullableDeploymentsStatus) Set(val *DeploymentsStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentsStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentsStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentsStatus(val *DeploymentsStatus) *NullableDeploymentsStatus {
	return &NullableDeploymentsStatus{value: val, isSet: true}
}

func (v NullableDeploymentsStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentsStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


