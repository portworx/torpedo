/*
PDS API

Portworx Data Services API Server

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pds

import (
	"encoding/json"
)

// ControllersResourceSettingsTemplates struct for ControllersResourceSettingsTemplates
type ControllersResourceSettingsTemplates struct {
	Data []ModelsResourceSettingsTemplate `json:"data,omitempty"`
}

// NewControllersResourceSettingsTemplates instantiates a new ControllersResourceSettingsTemplates object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControllersResourceSettingsTemplates() *ControllersResourceSettingsTemplates {
	this := ControllersResourceSettingsTemplates{}
	return &this
}

// NewControllersResourceSettingsTemplatesWithDefaults instantiates a new ControllersResourceSettingsTemplates object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControllersResourceSettingsTemplatesWithDefaults() *ControllersResourceSettingsTemplates {
	this := ControllersResourceSettingsTemplates{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ControllersResourceSettingsTemplates) GetData() []ModelsResourceSettingsTemplate {
	if o == nil || o.Data == nil {
		var ret []ModelsResourceSettingsTemplate
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControllersResourceSettingsTemplates) GetDataOk() ([]ModelsResourceSettingsTemplate, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ControllersResourceSettingsTemplates) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given []ModelsResourceSettingsTemplate and assigns it to the Data field.
func (o *ControllersResourceSettingsTemplates) SetData(v []ModelsResourceSettingsTemplate) {
	o.Data = v
}

func (o ControllersResourceSettingsTemplates) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableControllersResourceSettingsTemplates struct {
	value *ControllersResourceSettingsTemplates
	isSet bool
}

func (v NullableControllersResourceSettingsTemplates) Get() *ControllersResourceSettingsTemplates {
	return v.value
}

func (v *NullableControllersResourceSettingsTemplates) Set(val *ControllersResourceSettingsTemplates) {
	v.value = val
	v.isSet = true
}

func (v NullableControllersResourceSettingsTemplates) IsSet() bool {
	return v.isSet
}

func (v *NullableControllersResourceSettingsTemplates) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControllersResourceSettingsTemplates(val *ControllersResourceSettingsTemplates) *NullableControllersResourceSettingsTemplates {
	return &NullableControllersResourceSettingsTemplates{value: val, isSet: true}
}

func (v NullableControllersResourceSettingsTemplates) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControllersResourceSettingsTemplates) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


