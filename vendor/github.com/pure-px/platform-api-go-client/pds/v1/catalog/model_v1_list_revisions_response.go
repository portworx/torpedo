/*
public/portworx/pds/catalog/dataserviceversions/apiv1/dataserviceversions.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package catalog

import (
	"encoding/json"
)

// checks if the V1ListRevisionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ListRevisionsResponse{}

// V1ListRevisionsResponse Revisions listing response.
type V1ListRevisionsResponse struct {
	// Revisions is the list of revisions.
	Revisions []V1Revision `json:"revisions,omitempty"`
	Pagination *V1PageBasedPaginationResponse `json:"pagination,omitempty"`
}

// NewV1ListRevisionsResponse instantiates a new V1ListRevisionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ListRevisionsResponse() *V1ListRevisionsResponse {
	this := V1ListRevisionsResponse{}
	return &this
}

// NewV1ListRevisionsResponseWithDefaults instantiates a new V1ListRevisionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ListRevisionsResponseWithDefaults() *V1ListRevisionsResponse {
	this := V1ListRevisionsResponse{}
	return &this
}

// GetRevisions returns the Revisions field value if set, zero value otherwise.
func (o *V1ListRevisionsResponse) GetRevisions() []V1Revision {
	if o == nil || IsNil(o.Revisions) {
		var ret []V1Revision
		return ret
	}
	return o.Revisions
}

// GetRevisionsOk returns a tuple with the Revisions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ListRevisionsResponse) GetRevisionsOk() ([]V1Revision, bool) {
	if o == nil || IsNil(o.Revisions) {
		return nil, false
	}
	return o.Revisions, true
}

// HasRevisions returns a boolean if a field has been set.
func (o *V1ListRevisionsResponse) HasRevisions() bool {
	if o != nil && !IsNil(o.Revisions) {
		return true
	}

	return false
}

// SetRevisions gets a reference to the given []V1Revision and assigns it to the Revisions field.
func (o *V1ListRevisionsResponse) SetRevisions(v []V1Revision) {
	o.Revisions = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *V1ListRevisionsResponse) GetPagination() V1PageBasedPaginationResponse {
	if o == nil || IsNil(o.Pagination) {
		var ret V1PageBasedPaginationResponse
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ListRevisionsResponse) GetPaginationOk() (*V1PageBasedPaginationResponse, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *V1ListRevisionsResponse) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given V1PageBasedPaginationResponse and assigns it to the Pagination field.
func (o *V1ListRevisionsResponse) SetPagination(v V1PageBasedPaginationResponse) {
	o.Pagination = &v
}

func (o V1ListRevisionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ListRevisionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Revisions) {
		toSerialize["revisions"] = o.Revisions
	}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	return toSerialize, nil
}

type NullableV1ListRevisionsResponse struct {
	value *V1ListRevisionsResponse
	isSet bool
}

func (v NullableV1ListRevisionsResponse) Get() *V1ListRevisionsResponse {
	return v.value
}

func (v *NullableV1ListRevisionsResponse) Set(val *V1ListRevisionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ListRevisionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ListRevisionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ListRevisionsResponse(val *V1ListRevisionsResponse) *NullableV1ListRevisionsResponse {
	return &NullableV1ListRevisionsResponse{value: val, isSet: true}
}

func (v NullableV1ListRevisionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ListRevisionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


