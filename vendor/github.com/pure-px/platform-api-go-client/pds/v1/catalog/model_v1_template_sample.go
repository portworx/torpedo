/*
public/portworx/pds/catalog/dataservices/apiv1/dataservices.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package catalog

import (
	"encoding/json"
)

// checks if the V1TemplateSample type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1TemplateSample{}

// V1TemplateSample TemplateSample represents the sample template schema.
type V1TemplateSample struct {
	Meta *V1Meta `json:"meta,omitempty"`
	Info *Templatedefinitionv1Info `json:"info,omitempty"`
}

// NewV1TemplateSample instantiates a new V1TemplateSample object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1TemplateSample() *V1TemplateSample {
	this := V1TemplateSample{}
	return &this
}

// NewV1TemplateSampleWithDefaults instantiates a new V1TemplateSample object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1TemplateSampleWithDefaults() *V1TemplateSample {
	this := V1TemplateSample{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *V1TemplateSample) GetMeta() V1Meta {
	if o == nil || IsNil(o.Meta) {
		var ret V1Meta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TemplateSample) GetMetaOk() (*V1Meta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *V1TemplateSample) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given V1Meta and assigns it to the Meta field.
func (o *V1TemplateSample) SetMeta(v V1Meta) {
	o.Meta = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *V1TemplateSample) GetInfo() Templatedefinitionv1Info {
	if o == nil || IsNil(o.Info) {
		var ret Templatedefinitionv1Info
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TemplateSample) GetInfoOk() (*Templatedefinitionv1Info, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *V1TemplateSample) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given Templatedefinitionv1Info and assigns it to the Info field.
func (o *V1TemplateSample) SetInfo(v Templatedefinitionv1Info) {
	o.Info = &v
}

func (o V1TemplateSample) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1TemplateSample) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Info) {
		toSerialize["info"] = o.Info
	}
	return toSerialize, nil
}

type NullableV1TemplateSample struct {
	value *V1TemplateSample
	isSet bool
}

func (v NullableV1TemplateSample) Get() *V1TemplateSample {
	return v.value
}

func (v *NullableV1TemplateSample) Set(val *V1TemplateSample) {
	v.value = val
	v.isSet = true
}

func (v NullableV1TemplateSample) IsSet() bool {
	return v.isSet
}

func (v *NullableV1TemplateSample) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1TemplateSample(val *V1TemplateSample) *NullableV1TemplateSample {
	return &NullableV1TemplateSample{value: val, isSet: true}
}

func (v NullableV1TemplateSample) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1TemplateSample) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


