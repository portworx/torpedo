/*
public/portworx/pds/catalog/dataservices/apiv1/dataservices.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package catalog

import (
	"encoding/json"
)

// checks if the V1ListRevisionsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ListRevisionsRequest{}

// V1ListRevisionsRequest Request parameters for listing revisions.
type V1ListRevisionsRequest struct {
	FieldSelector *V1Selector `json:"fieldSelector,omitempty"`
	Sort *V1Sort1 `json:"sort,omitempty"`
	Pagination *V1PageBasedPaginationRequest `json:"pagination,omitempty"`
}

// NewV1ListRevisionsRequest instantiates a new V1ListRevisionsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ListRevisionsRequest() *V1ListRevisionsRequest {
	this := V1ListRevisionsRequest{}
	return &this
}

// NewV1ListRevisionsRequestWithDefaults instantiates a new V1ListRevisionsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ListRevisionsRequestWithDefaults() *V1ListRevisionsRequest {
	this := V1ListRevisionsRequest{}
	return &this
}

// GetFieldSelector returns the FieldSelector field value if set, zero value otherwise.
func (o *V1ListRevisionsRequest) GetFieldSelector() V1Selector {
	if o == nil || IsNil(o.FieldSelector) {
		var ret V1Selector
		return ret
	}
	return *o.FieldSelector
}

// GetFieldSelectorOk returns a tuple with the FieldSelector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ListRevisionsRequest) GetFieldSelectorOk() (*V1Selector, bool) {
	if o == nil || IsNil(o.FieldSelector) {
		return nil, false
	}
	return o.FieldSelector, true
}

// HasFieldSelector returns a boolean if a field has been set.
func (o *V1ListRevisionsRequest) HasFieldSelector() bool {
	if o != nil && !IsNil(o.FieldSelector) {
		return true
	}

	return false
}

// SetFieldSelector gets a reference to the given V1Selector and assigns it to the FieldSelector field.
func (o *V1ListRevisionsRequest) SetFieldSelector(v V1Selector) {
	o.FieldSelector = &v
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *V1ListRevisionsRequest) GetSort() V1Sort1 {
	if o == nil || IsNil(o.Sort) {
		var ret V1Sort1
		return ret
	}
	return *o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ListRevisionsRequest) GetSortOk() (*V1Sort1, bool) {
	if o == nil || IsNil(o.Sort) {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *V1ListRevisionsRequest) HasSort() bool {
	if o != nil && !IsNil(o.Sort) {
		return true
	}

	return false
}

// SetSort gets a reference to the given V1Sort1 and assigns it to the Sort field.
func (o *V1ListRevisionsRequest) SetSort(v V1Sort1) {
	o.Sort = &v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *V1ListRevisionsRequest) GetPagination() V1PageBasedPaginationRequest {
	if o == nil || IsNil(o.Pagination) {
		var ret V1PageBasedPaginationRequest
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ListRevisionsRequest) GetPaginationOk() (*V1PageBasedPaginationRequest, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *V1ListRevisionsRequest) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given V1PageBasedPaginationRequest and assigns it to the Pagination field.
func (o *V1ListRevisionsRequest) SetPagination(v V1PageBasedPaginationRequest) {
	o.Pagination = &v
}

func (o V1ListRevisionsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ListRevisionsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FieldSelector) {
		toSerialize["fieldSelector"] = o.FieldSelector
	}
	if !IsNil(o.Sort) {
		toSerialize["sort"] = o.Sort
	}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	return toSerialize, nil
}

type NullableV1ListRevisionsRequest struct {
	value *V1ListRevisionsRequest
	isSet bool
}

func (v NullableV1ListRevisionsRequest) Get() *V1ListRevisionsRequest {
	return v.value
}

func (v *NullableV1ListRevisionsRequest) Set(val *V1ListRevisionsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ListRevisionsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ListRevisionsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ListRevisionsRequest(val *V1ListRevisionsRequest) *NullableV1ListRevisionsRequest {
	return &NullableV1ListRevisionsRequest{value: val, isSet: true}
}

func (v NullableV1ListRevisionsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ListRevisionsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


