/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backupconfig

import (
	"encoding/json"
)

// checks if the Backupconfigv1Status type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Backupconfigv1Status{}

// Backupconfigv1Status Status for backup configuration.
type Backupconfigv1Status struct {
	Phase *V1Phase `json:"phase,omitempty"`
	// Custom Resource Name is the kubernetes resource name for the backup that is built from ID.
	CustomResourceName *string `json:"customResourceName,omitempty"`
	// Flag to check if the backup policy is synchronized or not.
	IsBackupPolicySynchronized *bool `json:"isBackupPolicySynchronized,omitempty"`
	DataServiceDeploymentMetaData *V1DataServiceDeploymentMetaData `json:"dataServiceDeploymentMetaData,omitempty"`
	// Error code.
	ErrorCode *string `json:"errorCode,omitempty"`
	// Error message.
	ErrorMessage *string `json:"errorMessage,omitempty"`
}

// NewBackupconfigv1Status instantiates a new Backupconfigv1Status object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupconfigv1Status() *Backupconfigv1Status {
	this := Backupconfigv1Status{}
	var phase V1Phase = V1PHASE_PHASE_UNSPECIFIED
	this.Phase = &phase
	return &this
}

// NewBackupconfigv1StatusWithDefaults instantiates a new Backupconfigv1Status object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupconfigv1StatusWithDefaults() *Backupconfigv1Status {
	this := Backupconfigv1Status{}
	var phase V1Phase = V1PHASE_PHASE_UNSPECIFIED
	this.Phase = &phase
	return &this
}

// GetPhase returns the Phase field value if set, zero value otherwise.
func (o *Backupconfigv1Status) GetPhase() V1Phase {
	if o == nil || IsNil(o.Phase) {
		var ret V1Phase
		return ret
	}
	return *o.Phase
}

// GetPhaseOk returns a tuple with the Phase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backupconfigv1Status) GetPhaseOk() (*V1Phase, bool) {
	if o == nil || IsNil(o.Phase) {
		return nil, false
	}
	return o.Phase, true
}

// HasPhase returns a boolean if a field has been set.
func (o *Backupconfigv1Status) HasPhase() bool {
	if o != nil && !IsNil(o.Phase) {
		return true
	}

	return false
}

// SetPhase gets a reference to the given V1Phase and assigns it to the Phase field.
func (o *Backupconfigv1Status) SetPhase(v V1Phase) {
	o.Phase = &v
}

// GetCustomResourceName returns the CustomResourceName field value if set, zero value otherwise.
func (o *Backupconfigv1Status) GetCustomResourceName() string {
	if o == nil || IsNil(o.CustomResourceName) {
		var ret string
		return ret
	}
	return *o.CustomResourceName
}

// GetCustomResourceNameOk returns a tuple with the CustomResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backupconfigv1Status) GetCustomResourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.CustomResourceName) {
		return nil, false
	}
	return o.CustomResourceName, true
}

// HasCustomResourceName returns a boolean if a field has been set.
func (o *Backupconfigv1Status) HasCustomResourceName() bool {
	if o != nil && !IsNil(o.CustomResourceName) {
		return true
	}

	return false
}

// SetCustomResourceName gets a reference to the given string and assigns it to the CustomResourceName field.
func (o *Backupconfigv1Status) SetCustomResourceName(v string) {
	o.CustomResourceName = &v
}

// GetIsBackupPolicySynchronized returns the IsBackupPolicySynchronized field value if set, zero value otherwise.
func (o *Backupconfigv1Status) GetIsBackupPolicySynchronized() bool {
	if o == nil || IsNil(o.IsBackupPolicySynchronized) {
		var ret bool
		return ret
	}
	return *o.IsBackupPolicySynchronized
}

// GetIsBackupPolicySynchronizedOk returns a tuple with the IsBackupPolicySynchronized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backupconfigv1Status) GetIsBackupPolicySynchronizedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBackupPolicySynchronized) {
		return nil, false
	}
	return o.IsBackupPolicySynchronized, true
}

// HasIsBackupPolicySynchronized returns a boolean if a field has been set.
func (o *Backupconfigv1Status) HasIsBackupPolicySynchronized() bool {
	if o != nil && !IsNil(o.IsBackupPolicySynchronized) {
		return true
	}

	return false
}

// SetIsBackupPolicySynchronized gets a reference to the given bool and assigns it to the IsBackupPolicySynchronized field.
func (o *Backupconfigv1Status) SetIsBackupPolicySynchronized(v bool) {
	o.IsBackupPolicySynchronized = &v
}

// GetDataServiceDeploymentMetaData returns the DataServiceDeploymentMetaData field value if set, zero value otherwise.
func (o *Backupconfigv1Status) GetDataServiceDeploymentMetaData() V1DataServiceDeploymentMetaData {
	if o == nil || IsNil(o.DataServiceDeploymentMetaData) {
		var ret V1DataServiceDeploymentMetaData
		return ret
	}
	return *o.DataServiceDeploymentMetaData
}

// GetDataServiceDeploymentMetaDataOk returns a tuple with the DataServiceDeploymentMetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backupconfigv1Status) GetDataServiceDeploymentMetaDataOk() (*V1DataServiceDeploymentMetaData, bool) {
	if o == nil || IsNil(o.DataServiceDeploymentMetaData) {
		return nil, false
	}
	return o.DataServiceDeploymentMetaData, true
}

// HasDataServiceDeploymentMetaData returns a boolean if a field has been set.
func (o *Backupconfigv1Status) HasDataServiceDeploymentMetaData() bool {
	if o != nil && !IsNil(o.DataServiceDeploymentMetaData) {
		return true
	}

	return false
}

// SetDataServiceDeploymentMetaData gets a reference to the given V1DataServiceDeploymentMetaData and assigns it to the DataServiceDeploymentMetaData field.
func (o *Backupconfigv1Status) SetDataServiceDeploymentMetaData(v V1DataServiceDeploymentMetaData) {
	o.DataServiceDeploymentMetaData = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *Backupconfigv1Status) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode) {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backupconfigv1Status) GetErrorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *Backupconfigv1Status) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *Backupconfigv1Status) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *Backupconfigv1Status) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backupconfigv1Status) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *Backupconfigv1Status) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *Backupconfigv1Status) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

func (o Backupconfigv1Status) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Backupconfigv1Status) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Phase) {
		toSerialize["phase"] = o.Phase
	}
	if !IsNil(o.CustomResourceName) {
		toSerialize["customResourceName"] = o.CustomResourceName
	}
	if !IsNil(o.IsBackupPolicySynchronized) {
		toSerialize["isBackupPolicySynchronized"] = o.IsBackupPolicySynchronized
	}
	if !IsNil(o.DataServiceDeploymentMetaData) {
		toSerialize["dataServiceDeploymentMetaData"] = o.DataServiceDeploymentMetaData
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if !IsNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	return toSerialize, nil
}

type NullableBackupconfigv1Status struct {
	value *Backupconfigv1Status
	isSet bool
}

func (v NullableBackupconfigv1Status) Get() *Backupconfigv1Status {
	return v.value
}

func (v *NullableBackupconfigv1Status) Set(val *Backupconfigv1Status) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupconfigv1Status) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupconfigv1Status) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupconfigv1Status(val *Backupconfigv1Status) *NullableBackupconfigv1Status {
	return &NullableBackupconfigv1Status{value: val, isSet: true}
}

func (v NullableBackupconfigv1Status) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupconfigv1Status) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


