/*
public/portworx/pds/backupconfig/apiv1/backupconfig.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backupconfig

import (
	"encoding/json"
)

// checks if the V1DataServiceDeploymentMetaData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DataServiceDeploymentMetaData{}

// V1DataServiceDeploymentMetaData DataServiceDeployment Meta Data contains the details of the DataService deployment associated with the backup configuration.
type V1DataServiceDeploymentMetaData struct {
	// Name of the DataService deployment.
	Name *string `json:"name,omitempty"`
	// Custom Resource Name is the kubernetes resource name for the deployment meta data.
	CustomResourceName *string `json:"customResourceName,omitempty"`
	// Target cluster Name associated with the backup configuration.
	TargetClusterName *string `json:"targetClusterName,omitempty"`
	// Namespace name to which the backup configuration is associated.
	NamespaceName *string `json:"namespaceName,omitempty"`
	// Flag to check whether Transport Layer Security support is enabled or not.
	TlsEnabled *bool `json:"tlsEnabled,omitempty"`
}

// NewV1DataServiceDeploymentMetaData instantiates a new V1DataServiceDeploymentMetaData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DataServiceDeploymentMetaData() *V1DataServiceDeploymentMetaData {
	this := V1DataServiceDeploymentMetaData{}
	return &this
}

// NewV1DataServiceDeploymentMetaDataWithDefaults instantiates a new V1DataServiceDeploymentMetaData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DataServiceDeploymentMetaDataWithDefaults() *V1DataServiceDeploymentMetaData {
	this := V1DataServiceDeploymentMetaData{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1DataServiceDeploymentMetaData) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DataServiceDeploymentMetaData) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1DataServiceDeploymentMetaData) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1DataServiceDeploymentMetaData) SetName(v string) {
	o.Name = &v
}

// GetCustomResourceName returns the CustomResourceName field value if set, zero value otherwise.
func (o *V1DataServiceDeploymentMetaData) GetCustomResourceName() string {
	if o == nil || IsNil(o.CustomResourceName) {
		var ret string
		return ret
	}
	return *o.CustomResourceName
}

// GetCustomResourceNameOk returns a tuple with the CustomResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DataServiceDeploymentMetaData) GetCustomResourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.CustomResourceName) {
		return nil, false
	}
	return o.CustomResourceName, true
}

// HasCustomResourceName returns a boolean if a field has been set.
func (o *V1DataServiceDeploymentMetaData) HasCustomResourceName() bool {
	if o != nil && !IsNil(o.CustomResourceName) {
		return true
	}

	return false
}

// SetCustomResourceName gets a reference to the given string and assigns it to the CustomResourceName field.
func (o *V1DataServiceDeploymentMetaData) SetCustomResourceName(v string) {
	o.CustomResourceName = &v
}

// GetTargetClusterName returns the TargetClusterName field value if set, zero value otherwise.
func (o *V1DataServiceDeploymentMetaData) GetTargetClusterName() string {
	if o == nil || IsNil(o.TargetClusterName) {
		var ret string
		return ret
	}
	return *o.TargetClusterName
}

// GetTargetClusterNameOk returns a tuple with the TargetClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DataServiceDeploymentMetaData) GetTargetClusterNameOk() (*string, bool) {
	if o == nil || IsNil(o.TargetClusterName) {
		return nil, false
	}
	return o.TargetClusterName, true
}

// HasTargetClusterName returns a boolean if a field has been set.
func (o *V1DataServiceDeploymentMetaData) HasTargetClusterName() bool {
	if o != nil && !IsNil(o.TargetClusterName) {
		return true
	}

	return false
}

// SetTargetClusterName gets a reference to the given string and assigns it to the TargetClusterName field.
func (o *V1DataServiceDeploymentMetaData) SetTargetClusterName(v string) {
	o.TargetClusterName = &v
}

// GetNamespaceName returns the NamespaceName field value if set, zero value otherwise.
func (o *V1DataServiceDeploymentMetaData) GetNamespaceName() string {
	if o == nil || IsNil(o.NamespaceName) {
		var ret string
		return ret
	}
	return *o.NamespaceName
}

// GetNamespaceNameOk returns a tuple with the NamespaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DataServiceDeploymentMetaData) GetNamespaceNameOk() (*string, bool) {
	if o == nil || IsNil(o.NamespaceName) {
		return nil, false
	}
	return o.NamespaceName, true
}

// HasNamespaceName returns a boolean if a field has been set.
func (o *V1DataServiceDeploymentMetaData) HasNamespaceName() bool {
	if o != nil && !IsNil(o.NamespaceName) {
		return true
	}

	return false
}

// SetNamespaceName gets a reference to the given string and assigns it to the NamespaceName field.
func (o *V1DataServiceDeploymentMetaData) SetNamespaceName(v string) {
	o.NamespaceName = &v
}

// GetTlsEnabled returns the TlsEnabled field value if set, zero value otherwise.
func (o *V1DataServiceDeploymentMetaData) GetTlsEnabled() bool {
	if o == nil || IsNil(o.TlsEnabled) {
		var ret bool
		return ret
	}
	return *o.TlsEnabled
}

// GetTlsEnabledOk returns a tuple with the TlsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DataServiceDeploymentMetaData) GetTlsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.TlsEnabled) {
		return nil, false
	}
	return o.TlsEnabled, true
}

// HasTlsEnabled returns a boolean if a field has been set.
func (o *V1DataServiceDeploymentMetaData) HasTlsEnabled() bool {
	if o != nil && !IsNil(o.TlsEnabled) {
		return true
	}

	return false
}

// SetTlsEnabled gets a reference to the given bool and assigns it to the TlsEnabled field.
func (o *V1DataServiceDeploymentMetaData) SetTlsEnabled(v bool) {
	o.TlsEnabled = &v
}

func (o V1DataServiceDeploymentMetaData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DataServiceDeploymentMetaData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.CustomResourceName) {
		toSerialize["customResourceName"] = o.CustomResourceName
	}
	if !IsNil(o.TargetClusterName) {
		toSerialize["targetClusterName"] = o.TargetClusterName
	}
	if !IsNil(o.NamespaceName) {
		toSerialize["namespaceName"] = o.NamespaceName
	}
	if !IsNil(o.TlsEnabled) {
		toSerialize["tlsEnabled"] = o.TlsEnabled
	}
	return toSerialize, nil
}

type NullableV1DataServiceDeploymentMetaData struct {
	value *V1DataServiceDeploymentMetaData
	isSet bool
}

func (v NullableV1DataServiceDeploymentMetaData) Get() *V1DataServiceDeploymentMetaData {
	return v.value
}

func (v *NullableV1DataServiceDeploymentMetaData) Set(val *V1DataServiceDeploymentMetaData) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DataServiceDeploymentMetaData) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DataServiceDeploymentMetaData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DataServiceDeploymentMetaData(val *V1DataServiceDeploymentMetaData) *NullableV1DataServiceDeploymentMetaData {
	return &NullableV1DataServiceDeploymentMetaData{value: val, isSet: true}
}

func (v NullableV1DataServiceDeploymentMetaData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DataServiceDeploymentMetaData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


