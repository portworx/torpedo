/*
public/portworx/pds/deploymentconfigupdate/apiv1/deploymentconfigupdate.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package deploymentconfigupdate

import (
	"encoding/json"
)

// checks if the ConfigOfTheDeploymentForWhichConfigUpdateIsRequested type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigOfTheDeploymentForWhichConfigUpdateIsRequested{}

// ConfigOfTheDeploymentForWhichConfigUpdateIsRequested Config of the deployment for which config update is requested.
type ConfigOfTheDeploymentForWhichConfigUpdateIsRequested struct {
	DeploymentMeta *MetadataOfTheDeploymentResource `json:"deploymentMeta,omitempty"`
	DeploymentConfig *Pdsdeploymentv1Config `json:"deploymentConfig,omitempty"`
}

// NewConfigOfTheDeploymentForWhichConfigUpdateIsRequested instantiates a new ConfigOfTheDeploymentForWhichConfigUpdateIsRequested object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigOfTheDeploymentForWhichConfigUpdateIsRequested() *ConfigOfTheDeploymentForWhichConfigUpdateIsRequested {
	this := ConfigOfTheDeploymentForWhichConfigUpdateIsRequested{}
	return &this
}

// NewConfigOfTheDeploymentForWhichConfigUpdateIsRequestedWithDefaults instantiates a new ConfigOfTheDeploymentForWhichConfigUpdateIsRequested object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigOfTheDeploymentForWhichConfigUpdateIsRequestedWithDefaults() *ConfigOfTheDeploymentForWhichConfigUpdateIsRequested {
	this := ConfigOfTheDeploymentForWhichConfigUpdateIsRequested{}
	return &this
}

// GetDeploymentMeta returns the DeploymentMeta field value if set, zero value otherwise.
func (o *ConfigOfTheDeploymentForWhichConfigUpdateIsRequested) GetDeploymentMeta() MetadataOfTheDeploymentResource {
	if o == nil || IsNil(o.DeploymentMeta) {
		var ret MetadataOfTheDeploymentResource
		return ret
	}
	return *o.DeploymentMeta
}

// GetDeploymentMetaOk returns a tuple with the DeploymentMeta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigOfTheDeploymentForWhichConfigUpdateIsRequested) GetDeploymentMetaOk() (*MetadataOfTheDeploymentResource, bool) {
	if o == nil || IsNil(o.DeploymentMeta) {
		return nil, false
	}
	return o.DeploymentMeta, true
}

// HasDeploymentMeta returns a boolean if a field has been set.
func (o *ConfigOfTheDeploymentForWhichConfigUpdateIsRequested) HasDeploymentMeta() bool {
	if o != nil && !IsNil(o.DeploymentMeta) {
		return true
	}

	return false
}

// SetDeploymentMeta gets a reference to the given MetadataOfTheDeploymentResource and assigns it to the DeploymentMeta field.
func (o *ConfigOfTheDeploymentForWhichConfigUpdateIsRequested) SetDeploymentMeta(v MetadataOfTheDeploymentResource) {
	o.DeploymentMeta = &v
}

// GetDeploymentConfig returns the DeploymentConfig field value if set, zero value otherwise.
func (o *ConfigOfTheDeploymentForWhichConfigUpdateIsRequested) GetDeploymentConfig() Pdsdeploymentv1Config {
	if o == nil || IsNil(o.DeploymentConfig) {
		var ret Pdsdeploymentv1Config
		return ret
	}
	return *o.DeploymentConfig
}

// GetDeploymentConfigOk returns a tuple with the DeploymentConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigOfTheDeploymentForWhichConfigUpdateIsRequested) GetDeploymentConfigOk() (*Pdsdeploymentv1Config, bool) {
	if o == nil || IsNil(o.DeploymentConfig) {
		return nil, false
	}
	return o.DeploymentConfig, true
}

// HasDeploymentConfig returns a boolean if a field has been set.
func (o *ConfigOfTheDeploymentForWhichConfigUpdateIsRequested) HasDeploymentConfig() bool {
	if o != nil && !IsNil(o.DeploymentConfig) {
		return true
	}

	return false
}

// SetDeploymentConfig gets a reference to the given Pdsdeploymentv1Config and assigns it to the DeploymentConfig field.
func (o *ConfigOfTheDeploymentForWhichConfigUpdateIsRequested) SetDeploymentConfig(v Pdsdeploymentv1Config) {
	o.DeploymentConfig = &v
}

func (o ConfigOfTheDeploymentForWhichConfigUpdateIsRequested) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigOfTheDeploymentForWhichConfigUpdateIsRequested) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeploymentMeta) {
		toSerialize["deploymentMeta"] = o.DeploymentMeta
	}
	if !IsNil(o.DeploymentConfig) {
		toSerialize["deploymentConfig"] = o.DeploymentConfig
	}
	return toSerialize, nil
}

type NullableConfigOfTheDeploymentForWhichConfigUpdateIsRequested struct {
	value *ConfigOfTheDeploymentForWhichConfigUpdateIsRequested
	isSet bool
}

func (v NullableConfigOfTheDeploymentForWhichConfigUpdateIsRequested) Get() *ConfigOfTheDeploymentForWhichConfigUpdateIsRequested {
	return v.value
}

func (v *NullableConfigOfTheDeploymentForWhichConfigUpdateIsRequested) Set(val *ConfigOfTheDeploymentForWhichConfigUpdateIsRequested) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigOfTheDeploymentForWhichConfigUpdateIsRequested) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigOfTheDeploymentForWhichConfigUpdateIsRequested) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigOfTheDeploymentForWhichConfigUpdateIsRequested(val *ConfigOfTheDeploymentForWhichConfigUpdateIsRequested) *NullableConfigOfTheDeploymentForWhichConfigUpdateIsRequested {
	return &NullableConfigOfTheDeploymentForWhichConfigUpdateIsRequested{value: val, isSet: true}
}

func (v NullableConfigOfTheDeploymentForWhichConfigUpdateIsRequested) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigOfTheDeploymentForWhichConfigUpdateIsRequested) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


