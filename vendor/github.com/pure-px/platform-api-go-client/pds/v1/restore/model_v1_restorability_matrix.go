/*
public/portworx/pds/restore/apiv1/restore.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package restore

import (
	"encoding/json"
)

// checks if the V1RestorabilityMatrix type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1RestorabilityMatrix{}

// V1RestorabilityMatrix RestorabilityMatrix represents the compatibility matrix for restore.
type V1RestorabilityMatrix struct {
	// Restore compatibility conditions for each dataservice.
	Conditions *map[string]V1RestoreCompatibilityConditionList `json:"conditions,omitempty"`
}

// NewV1RestorabilityMatrix instantiates a new V1RestorabilityMatrix object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1RestorabilityMatrix() *V1RestorabilityMatrix {
	this := V1RestorabilityMatrix{}
	return &this
}

// NewV1RestorabilityMatrixWithDefaults instantiates a new V1RestorabilityMatrix object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1RestorabilityMatrixWithDefaults() *V1RestorabilityMatrix {
	this := V1RestorabilityMatrix{}
	return &this
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *V1RestorabilityMatrix) GetConditions() map[string]V1RestoreCompatibilityConditionList {
	if o == nil || IsNil(o.Conditions) {
		var ret map[string]V1RestoreCompatibilityConditionList
		return ret
	}
	return *o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RestorabilityMatrix) GetConditionsOk() (*map[string]V1RestoreCompatibilityConditionList, bool) {
	if o == nil || IsNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *V1RestorabilityMatrix) HasConditions() bool {
	if o != nil && !IsNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given map[string]V1RestoreCompatibilityConditionList and assigns it to the Conditions field.
func (o *V1RestorabilityMatrix) SetConditions(v map[string]V1RestoreCompatibilityConditionList) {
	o.Conditions = &v
}

func (o V1RestorabilityMatrix) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1RestorabilityMatrix) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}
	return toSerialize, nil
}

type NullableV1RestorabilityMatrix struct {
	value *V1RestorabilityMatrix
	isSet bool
}

func (v NullableV1RestorabilityMatrix) Get() *V1RestorabilityMatrix {
	return v.value
}

func (v *NullableV1RestorabilityMatrix) Set(val *V1RestorabilityMatrix) {
	v.value = val
	v.isSet = true
}

func (v NullableV1RestorabilityMatrix) IsSet() bool {
	return v.isSet
}

func (v *NullableV1RestorabilityMatrix) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1RestorabilityMatrix(val *V1RestorabilityMatrix) *NullableV1RestorabilityMatrix {
	return &NullableV1RestorabilityMatrix{value: val, isSet: true}
}

func (v NullableV1RestorabilityMatrix) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1RestorabilityMatrix) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


