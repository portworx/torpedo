/*
public/portworx/pds/dataservicedeployment/apiv1/dataservicedeployment.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dataservicedeployment

import (
	"encoding/json"
)

// checks if the V1KeyPerformanceIndicators type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1KeyPerformanceIndicators{}

// V1KeyPerformanceIndicators struct for V1KeyPerformanceIndicators
type V1KeyPerformanceIndicators struct {
	// count of available data service deployments.
	DataServiceDeploymentAvailableCount *int32 `json:"dataServiceDeploymentAvailableCount,omitempty"`
	// count of partially available data service deployments.
	DataServiceDeploymentPartiallyAvailableCount *int32 `json:"dataServiceDeploymentPartiallyAvailableCount,omitempty"`
	// count of unavailable data service deployments.
	DataServiceDeploymentUnavailableCount *int32 `json:"dataServiceDeploymentUnavailableCount,omitempty"`
	// count of unknown data service deployments.
	DataServiceDeploymentUnknownCount *int32 `json:"dataServiceDeploymentUnknownCount,omitempty"`
	// count of unknown data service deployments.
	DataServiceDeploymentNotApplicableCount *int32 `json:"dataServiceDeploymentNotApplicableCount,omitempty"`
	// count of running instances.
	RunningInstances *int32 `json:"runningInstances,omitempty"`
	// count of not running instances.
	NotRunningInstances *int32 `json:"notRunningInstances,omitempty"`
}

// NewV1KeyPerformanceIndicators instantiates a new V1KeyPerformanceIndicators object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1KeyPerformanceIndicators() *V1KeyPerformanceIndicators {
	this := V1KeyPerformanceIndicators{}
	return &this
}

// NewV1KeyPerformanceIndicatorsWithDefaults instantiates a new V1KeyPerformanceIndicators object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1KeyPerformanceIndicatorsWithDefaults() *V1KeyPerformanceIndicators {
	this := V1KeyPerformanceIndicators{}
	return &this
}

// GetDataServiceDeploymentAvailableCount returns the DataServiceDeploymentAvailableCount field value if set, zero value otherwise.
func (o *V1KeyPerformanceIndicators) GetDataServiceDeploymentAvailableCount() int32 {
	if o == nil || IsNil(o.DataServiceDeploymentAvailableCount) {
		var ret int32
		return ret
	}
	return *o.DataServiceDeploymentAvailableCount
}

// GetDataServiceDeploymentAvailableCountOk returns a tuple with the DataServiceDeploymentAvailableCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1KeyPerformanceIndicators) GetDataServiceDeploymentAvailableCountOk() (*int32, bool) {
	if o == nil || IsNil(o.DataServiceDeploymentAvailableCount) {
		return nil, false
	}
	return o.DataServiceDeploymentAvailableCount, true
}

// HasDataServiceDeploymentAvailableCount returns a boolean if a field has been set.
func (o *V1KeyPerformanceIndicators) HasDataServiceDeploymentAvailableCount() bool {
	if o != nil && !IsNil(o.DataServiceDeploymentAvailableCount) {
		return true
	}

	return false
}

// SetDataServiceDeploymentAvailableCount gets a reference to the given int32 and assigns it to the DataServiceDeploymentAvailableCount field.
func (o *V1KeyPerformanceIndicators) SetDataServiceDeploymentAvailableCount(v int32) {
	o.DataServiceDeploymentAvailableCount = &v
}

// GetDataServiceDeploymentPartiallyAvailableCount returns the DataServiceDeploymentPartiallyAvailableCount field value if set, zero value otherwise.
func (o *V1KeyPerformanceIndicators) GetDataServiceDeploymentPartiallyAvailableCount() int32 {
	if o == nil || IsNil(o.DataServiceDeploymentPartiallyAvailableCount) {
		var ret int32
		return ret
	}
	return *o.DataServiceDeploymentPartiallyAvailableCount
}

// GetDataServiceDeploymentPartiallyAvailableCountOk returns a tuple with the DataServiceDeploymentPartiallyAvailableCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1KeyPerformanceIndicators) GetDataServiceDeploymentPartiallyAvailableCountOk() (*int32, bool) {
	if o == nil || IsNil(o.DataServiceDeploymentPartiallyAvailableCount) {
		return nil, false
	}
	return o.DataServiceDeploymentPartiallyAvailableCount, true
}

// HasDataServiceDeploymentPartiallyAvailableCount returns a boolean if a field has been set.
func (o *V1KeyPerformanceIndicators) HasDataServiceDeploymentPartiallyAvailableCount() bool {
	if o != nil && !IsNil(o.DataServiceDeploymentPartiallyAvailableCount) {
		return true
	}

	return false
}

// SetDataServiceDeploymentPartiallyAvailableCount gets a reference to the given int32 and assigns it to the DataServiceDeploymentPartiallyAvailableCount field.
func (o *V1KeyPerformanceIndicators) SetDataServiceDeploymentPartiallyAvailableCount(v int32) {
	o.DataServiceDeploymentPartiallyAvailableCount = &v
}

// GetDataServiceDeploymentUnavailableCount returns the DataServiceDeploymentUnavailableCount field value if set, zero value otherwise.
func (o *V1KeyPerformanceIndicators) GetDataServiceDeploymentUnavailableCount() int32 {
	if o == nil || IsNil(o.DataServiceDeploymentUnavailableCount) {
		var ret int32
		return ret
	}
	return *o.DataServiceDeploymentUnavailableCount
}

// GetDataServiceDeploymentUnavailableCountOk returns a tuple with the DataServiceDeploymentUnavailableCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1KeyPerformanceIndicators) GetDataServiceDeploymentUnavailableCountOk() (*int32, bool) {
	if o == nil || IsNil(o.DataServiceDeploymentUnavailableCount) {
		return nil, false
	}
	return o.DataServiceDeploymentUnavailableCount, true
}

// HasDataServiceDeploymentUnavailableCount returns a boolean if a field has been set.
func (o *V1KeyPerformanceIndicators) HasDataServiceDeploymentUnavailableCount() bool {
	if o != nil && !IsNil(o.DataServiceDeploymentUnavailableCount) {
		return true
	}

	return false
}

// SetDataServiceDeploymentUnavailableCount gets a reference to the given int32 and assigns it to the DataServiceDeploymentUnavailableCount field.
func (o *V1KeyPerformanceIndicators) SetDataServiceDeploymentUnavailableCount(v int32) {
	o.DataServiceDeploymentUnavailableCount = &v
}

// GetDataServiceDeploymentUnknownCount returns the DataServiceDeploymentUnknownCount field value if set, zero value otherwise.
func (o *V1KeyPerformanceIndicators) GetDataServiceDeploymentUnknownCount() int32 {
	if o == nil || IsNil(o.DataServiceDeploymentUnknownCount) {
		var ret int32
		return ret
	}
	return *o.DataServiceDeploymentUnknownCount
}

// GetDataServiceDeploymentUnknownCountOk returns a tuple with the DataServiceDeploymentUnknownCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1KeyPerformanceIndicators) GetDataServiceDeploymentUnknownCountOk() (*int32, bool) {
	if o == nil || IsNil(o.DataServiceDeploymentUnknownCount) {
		return nil, false
	}
	return o.DataServiceDeploymentUnknownCount, true
}

// HasDataServiceDeploymentUnknownCount returns a boolean if a field has been set.
func (o *V1KeyPerformanceIndicators) HasDataServiceDeploymentUnknownCount() bool {
	if o != nil && !IsNil(o.DataServiceDeploymentUnknownCount) {
		return true
	}

	return false
}

// SetDataServiceDeploymentUnknownCount gets a reference to the given int32 and assigns it to the DataServiceDeploymentUnknownCount field.
func (o *V1KeyPerformanceIndicators) SetDataServiceDeploymentUnknownCount(v int32) {
	o.DataServiceDeploymentUnknownCount = &v
}

// GetDataServiceDeploymentNotApplicableCount returns the DataServiceDeploymentNotApplicableCount field value if set, zero value otherwise.
func (o *V1KeyPerformanceIndicators) GetDataServiceDeploymentNotApplicableCount() int32 {
	if o == nil || IsNil(o.DataServiceDeploymentNotApplicableCount) {
		var ret int32
		return ret
	}
	return *o.DataServiceDeploymentNotApplicableCount
}

// GetDataServiceDeploymentNotApplicableCountOk returns a tuple with the DataServiceDeploymentNotApplicableCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1KeyPerformanceIndicators) GetDataServiceDeploymentNotApplicableCountOk() (*int32, bool) {
	if o == nil || IsNil(o.DataServiceDeploymentNotApplicableCount) {
		return nil, false
	}
	return o.DataServiceDeploymentNotApplicableCount, true
}

// HasDataServiceDeploymentNotApplicableCount returns a boolean if a field has been set.
func (o *V1KeyPerformanceIndicators) HasDataServiceDeploymentNotApplicableCount() bool {
	if o != nil && !IsNil(o.DataServiceDeploymentNotApplicableCount) {
		return true
	}

	return false
}

// SetDataServiceDeploymentNotApplicableCount gets a reference to the given int32 and assigns it to the DataServiceDeploymentNotApplicableCount field.
func (o *V1KeyPerformanceIndicators) SetDataServiceDeploymentNotApplicableCount(v int32) {
	o.DataServiceDeploymentNotApplicableCount = &v
}

// GetRunningInstances returns the RunningInstances field value if set, zero value otherwise.
func (o *V1KeyPerformanceIndicators) GetRunningInstances() int32 {
	if o == nil || IsNil(o.RunningInstances) {
		var ret int32
		return ret
	}
	return *o.RunningInstances
}

// GetRunningInstancesOk returns a tuple with the RunningInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1KeyPerformanceIndicators) GetRunningInstancesOk() (*int32, bool) {
	if o == nil || IsNil(o.RunningInstances) {
		return nil, false
	}
	return o.RunningInstances, true
}

// HasRunningInstances returns a boolean if a field has been set.
func (o *V1KeyPerformanceIndicators) HasRunningInstances() bool {
	if o != nil && !IsNil(o.RunningInstances) {
		return true
	}

	return false
}

// SetRunningInstances gets a reference to the given int32 and assigns it to the RunningInstances field.
func (o *V1KeyPerformanceIndicators) SetRunningInstances(v int32) {
	o.RunningInstances = &v
}

// GetNotRunningInstances returns the NotRunningInstances field value if set, zero value otherwise.
func (o *V1KeyPerformanceIndicators) GetNotRunningInstances() int32 {
	if o == nil || IsNil(o.NotRunningInstances) {
		var ret int32
		return ret
	}
	return *o.NotRunningInstances
}

// GetNotRunningInstancesOk returns a tuple with the NotRunningInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1KeyPerformanceIndicators) GetNotRunningInstancesOk() (*int32, bool) {
	if o == nil || IsNil(o.NotRunningInstances) {
		return nil, false
	}
	return o.NotRunningInstances, true
}

// HasNotRunningInstances returns a boolean if a field has been set.
func (o *V1KeyPerformanceIndicators) HasNotRunningInstances() bool {
	if o != nil && !IsNil(o.NotRunningInstances) {
		return true
	}

	return false
}

// SetNotRunningInstances gets a reference to the given int32 and assigns it to the NotRunningInstances field.
func (o *V1KeyPerformanceIndicators) SetNotRunningInstances(v int32) {
	o.NotRunningInstances = &v
}

func (o V1KeyPerformanceIndicators) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1KeyPerformanceIndicators) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DataServiceDeploymentAvailableCount) {
		toSerialize["dataServiceDeploymentAvailableCount"] = o.DataServiceDeploymentAvailableCount
	}
	if !IsNil(o.DataServiceDeploymentPartiallyAvailableCount) {
		toSerialize["dataServiceDeploymentPartiallyAvailableCount"] = o.DataServiceDeploymentPartiallyAvailableCount
	}
	if !IsNil(o.DataServiceDeploymentUnavailableCount) {
		toSerialize["dataServiceDeploymentUnavailableCount"] = o.DataServiceDeploymentUnavailableCount
	}
	if !IsNil(o.DataServiceDeploymentUnknownCount) {
		toSerialize["dataServiceDeploymentUnknownCount"] = o.DataServiceDeploymentUnknownCount
	}
	if !IsNil(o.DataServiceDeploymentNotApplicableCount) {
		toSerialize["dataServiceDeploymentNotApplicableCount"] = o.DataServiceDeploymentNotApplicableCount
	}
	if !IsNil(o.RunningInstances) {
		toSerialize["runningInstances"] = o.RunningInstances
	}
	if !IsNil(o.NotRunningInstances) {
		toSerialize["notRunningInstances"] = o.NotRunningInstances
	}
	return toSerialize, nil
}

type NullableV1KeyPerformanceIndicators struct {
	value *V1KeyPerformanceIndicators
	isSet bool
}

func (v NullableV1KeyPerformanceIndicators) Get() *V1KeyPerformanceIndicators {
	return v.value
}

func (v *NullableV1KeyPerformanceIndicators) Set(val *V1KeyPerformanceIndicators) {
	v.value = val
	v.isSet = true
}

func (v NullableV1KeyPerformanceIndicators) IsSet() bool {
	return v.isSet
}

func (v *NullableV1KeyPerformanceIndicators) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1KeyPerformanceIndicators(val *V1KeyPerformanceIndicators) *NullableV1KeyPerformanceIndicators {
	return &NullableV1KeyPerformanceIndicators{value: val, isSet: true}
}

func (v NullableV1KeyPerformanceIndicators) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1KeyPerformanceIndicators) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


