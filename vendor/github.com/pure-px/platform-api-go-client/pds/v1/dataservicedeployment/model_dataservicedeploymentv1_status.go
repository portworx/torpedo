/*
public/portworx/pds/dataservicedeployment/apiv1/dataservicedeployment.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dataservicedeployment

import (
	"encoding/json"
)

// checks if the Dataservicedeploymentv1Status type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Dataservicedeploymentv1Status{}

// Dataservicedeploymentv1Status Status of the DataService Deployment.
type Dataservicedeploymentv1Status struct {
	Health *V1StatusHealth `json:"health,omitempty"`
	Phase *V1StatusPhase `json:"phase,omitempty"`
	// ConnectionDetails urls, ports, credentials, etc for connecting to the data service.
	ConnectionInfo map[string]interface{} `json:"connectionInfo,omitempty"`
	// Initialize used to control startup scripts.
	Initialized *string `json:"initialized,omitempty"`
	// Status of the deployment topology.
	DataServiceDeploymentTopologyStatus []V1DataServiceDeploymentTopologyStatus `json:"dataServiceDeploymentTopologyStatus,omitempty"`
	// Custom Resource Name is the kubernetes resource name for the deployment that is built from ID.
	CustomResourceName *string `json:"customResourceName,omitempty"`
	// dns zone of the deployment.
	DnsZone *string `json:"dnsZone,omitempty"`
}

// NewDataservicedeploymentv1Status instantiates a new Dataservicedeploymentv1Status object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataservicedeploymentv1Status() *Dataservicedeploymentv1Status {
	this := Dataservicedeploymentv1Status{}
	var health V1StatusHealth = V1STATUSHEALTH_HEALTH_UNSPECIFIED
	this.Health = &health
	var phase V1StatusPhase = V1STATUSPHASE_PHASE_UNSPECIFIED
	this.Phase = &phase
	return &this
}

// NewDataservicedeploymentv1StatusWithDefaults instantiates a new Dataservicedeploymentv1Status object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataservicedeploymentv1StatusWithDefaults() *Dataservicedeploymentv1Status {
	this := Dataservicedeploymentv1Status{}
	var health V1StatusHealth = V1STATUSHEALTH_HEALTH_UNSPECIFIED
	this.Health = &health
	var phase V1StatusPhase = V1STATUSPHASE_PHASE_UNSPECIFIED
	this.Phase = &phase
	return &this
}

// GetHealth returns the Health field value if set, zero value otherwise.
func (o *Dataservicedeploymentv1Status) GetHealth() V1StatusHealth {
	if o == nil || IsNil(o.Health) {
		var ret V1StatusHealth
		return ret
	}
	return *o.Health
}

// GetHealthOk returns a tuple with the Health field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dataservicedeploymentv1Status) GetHealthOk() (*V1StatusHealth, bool) {
	if o == nil || IsNil(o.Health) {
		return nil, false
	}
	return o.Health, true
}

// HasHealth returns a boolean if a field has been set.
func (o *Dataservicedeploymentv1Status) HasHealth() bool {
	if o != nil && !IsNil(o.Health) {
		return true
	}

	return false
}

// SetHealth gets a reference to the given V1StatusHealth and assigns it to the Health field.
func (o *Dataservicedeploymentv1Status) SetHealth(v V1StatusHealth) {
	o.Health = &v
}

// GetPhase returns the Phase field value if set, zero value otherwise.
func (o *Dataservicedeploymentv1Status) GetPhase() V1StatusPhase {
	if o == nil || IsNil(o.Phase) {
		var ret V1StatusPhase
		return ret
	}
	return *o.Phase
}

// GetPhaseOk returns a tuple with the Phase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dataservicedeploymentv1Status) GetPhaseOk() (*V1StatusPhase, bool) {
	if o == nil || IsNil(o.Phase) {
		return nil, false
	}
	return o.Phase, true
}

// HasPhase returns a boolean if a field has been set.
func (o *Dataservicedeploymentv1Status) HasPhase() bool {
	if o != nil && !IsNil(o.Phase) {
		return true
	}

	return false
}

// SetPhase gets a reference to the given V1StatusPhase and assigns it to the Phase field.
func (o *Dataservicedeploymentv1Status) SetPhase(v V1StatusPhase) {
	o.Phase = &v
}

// GetConnectionInfo returns the ConnectionInfo field value if set, zero value otherwise.
func (o *Dataservicedeploymentv1Status) GetConnectionInfo() map[string]interface{} {
	if o == nil || IsNil(o.ConnectionInfo) {
		var ret map[string]interface{}
		return ret
	}
	return o.ConnectionInfo
}

// GetConnectionInfoOk returns a tuple with the ConnectionInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dataservicedeploymentv1Status) GetConnectionInfoOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ConnectionInfo) {
		return map[string]interface{}{}, false
	}
	return o.ConnectionInfo, true
}

// HasConnectionInfo returns a boolean if a field has been set.
func (o *Dataservicedeploymentv1Status) HasConnectionInfo() bool {
	if o != nil && !IsNil(o.ConnectionInfo) {
		return true
	}

	return false
}

// SetConnectionInfo gets a reference to the given map[string]interface{} and assigns it to the ConnectionInfo field.
func (o *Dataservicedeploymentv1Status) SetConnectionInfo(v map[string]interface{}) {
	o.ConnectionInfo = v
}

// GetInitialized returns the Initialized field value if set, zero value otherwise.
func (o *Dataservicedeploymentv1Status) GetInitialized() string {
	if o == nil || IsNil(o.Initialized) {
		var ret string
		return ret
	}
	return *o.Initialized
}

// GetInitializedOk returns a tuple with the Initialized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dataservicedeploymentv1Status) GetInitializedOk() (*string, bool) {
	if o == nil || IsNil(o.Initialized) {
		return nil, false
	}
	return o.Initialized, true
}

// HasInitialized returns a boolean if a field has been set.
func (o *Dataservicedeploymentv1Status) HasInitialized() bool {
	if o != nil && !IsNil(o.Initialized) {
		return true
	}

	return false
}

// SetInitialized gets a reference to the given string and assigns it to the Initialized field.
func (o *Dataservicedeploymentv1Status) SetInitialized(v string) {
	o.Initialized = &v
}

// GetDataServiceDeploymentTopologyStatus returns the DataServiceDeploymentTopologyStatus field value if set, zero value otherwise.
func (o *Dataservicedeploymentv1Status) GetDataServiceDeploymentTopologyStatus() []V1DataServiceDeploymentTopologyStatus {
	if o == nil || IsNil(o.DataServiceDeploymentTopologyStatus) {
		var ret []V1DataServiceDeploymentTopologyStatus
		return ret
	}
	return o.DataServiceDeploymentTopologyStatus
}

// GetDataServiceDeploymentTopologyStatusOk returns a tuple with the DataServiceDeploymentTopologyStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dataservicedeploymentv1Status) GetDataServiceDeploymentTopologyStatusOk() ([]V1DataServiceDeploymentTopologyStatus, bool) {
	if o == nil || IsNil(o.DataServiceDeploymentTopologyStatus) {
		return nil, false
	}
	return o.DataServiceDeploymentTopologyStatus, true
}

// HasDataServiceDeploymentTopologyStatus returns a boolean if a field has been set.
func (o *Dataservicedeploymentv1Status) HasDataServiceDeploymentTopologyStatus() bool {
	if o != nil && !IsNil(o.DataServiceDeploymentTopologyStatus) {
		return true
	}

	return false
}

// SetDataServiceDeploymentTopologyStatus gets a reference to the given []V1DataServiceDeploymentTopologyStatus and assigns it to the DataServiceDeploymentTopologyStatus field.
func (o *Dataservicedeploymentv1Status) SetDataServiceDeploymentTopologyStatus(v []V1DataServiceDeploymentTopologyStatus) {
	o.DataServiceDeploymentTopologyStatus = v
}

// GetCustomResourceName returns the CustomResourceName field value if set, zero value otherwise.
func (o *Dataservicedeploymentv1Status) GetCustomResourceName() string {
	if o == nil || IsNil(o.CustomResourceName) {
		var ret string
		return ret
	}
	return *o.CustomResourceName
}

// GetCustomResourceNameOk returns a tuple with the CustomResourceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dataservicedeploymentv1Status) GetCustomResourceNameOk() (*string, bool) {
	if o == nil || IsNil(o.CustomResourceName) {
		return nil, false
	}
	return o.CustomResourceName, true
}

// HasCustomResourceName returns a boolean if a field has been set.
func (o *Dataservicedeploymentv1Status) HasCustomResourceName() bool {
	if o != nil && !IsNil(o.CustomResourceName) {
		return true
	}

	return false
}

// SetCustomResourceName gets a reference to the given string and assigns it to the CustomResourceName field.
func (o *Dataservicedeploymentv1Status) SetCustomResourceName(v string) {
	o.CustomResourceName = &v
}

// GetDnsZone returns the DnsZone field value if set, zero value otherwise.
func (o *Dataservicedeploymentv1Status) GetDnsZone() string {
	if o == nil || IsNil(o.DnsZone) {
		var ret string
		return ret
	}
	return *o.DnsZone
}

// GetDnsZoneOk returns a tuple with the DnsZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Dataservicedeploymentv1Status) GetDnsZoneOk() (*string, bool) {
	if o == nil || IsNil(o.DnsZone) {
		return nil, false
	}
	return o.DnsZone, true
}

// HasDnsZone returns a boolean if a field has been set.
func (o *Dataservicedeploymentv1Status) HasDnsZone() bool {
	if o != nil && !IsNil(o.DnsZone) {
		return true
	}

	return false
}

// SetDnsZone gets a reference to the given string and assigns it to the DnsZone field.
func (o *Dataservicedeploymentv1Status) SetDnsZone(v string) {
	o.DnsZone = &v
}

func (o Dataservicedeploymentv1Status) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Dataservicedeploymentv1Status) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Health) {
		toSerialize["health"] = o.Health
	}
	if !IsNil(o.Phase) {
		toSerialize["phase"] = o.Phase
	}
	if !IsNil(o.ConnectionInfo) {
		toSerialize["connectionInfo"] = o.ConnectionInfo
	}
	if !IsNil(o.Initialized) {
		toSerialize["initialized"] = o.Initialized
	}
	if !IsNil(o.DataServiceDeploymentTopologyStatus) {
		toSerialize["dataServiceDeploymentTopologyStatus"] = o.DataServiceDeploymentTopologyStatus
	}
	if !IsNil(o.CustomResourceName) {
		toSerialize["customResourceName"] = o.CustomResourceName
	}
	if !IsNil(o.DnsZone) {
		toSerialize["dnsZone"] = o.DnsZone
	}
	return toSerialize, nil
}

type NullableDataservicedeploymentv1Status struct {
	value *Dataservicedeploymentv1Status
	isSet bool
}

func (v NullableDataservicedeploymentv1Status) Get() *Dataservicedeploymentv1Status {
	return v.value
}

func (v *NullableDataservicedeploymentv1Status) Set(val *Dataservicedeploymentv1Status) {
	v.value = val
	v.isSet = true
}

func (v NullableDataservicedeploymentv1Status) IsSet() bool {
	return v.isSet
}

func (v *NullableDataservicedeploymentv1Status) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataservicedeploymentv1Status(val *Dataservicedeploymentv1Status) *NullableDataservicedeploymentv1Status {
	return &NullableDataservicedeploymentv1Status{value: val, isSet: true}
}

func (v NullableDataservicedeploymentv1Status) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataservicedeploymentv1Status) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


