/*
public/portworx/platform/onboard/apiv1/onboard.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onboard

import (
	"encoding/json"
)

// checks if the V1AccountConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1AccountConfig{}

// V1AccountConfig Account Configuration Info used for Registration.
type V1AccountConfig struct {
	AccountConfig *V1Config `json:"accountConfig,omitempty"`
	// AWS registration token.
	PdsAwsRegistrationToken *string `json:"pdsAwsRegistrationToken,omitempty"`
	PdsZuoraSubscription *V1ZuoraSubscriptionInfo `json:"pdsZuoraSubscription,omitempty"`
	// AWS registration token.
	PxeAwsRegistrationToken *string `json:"pxeAwsRegistrationToken,omitempty"`
	PxeZuoraSubscription *V1ZuoraSubscriptionInfo `json:"pxeZuoraSubscription,omitempty"`
	// AWS registration token.
	BaasAwsRegistrationToken *string `json:"baasAwsRegistrationToken,omitempty"`
	BaasZuoraSubscription *V1ZuoraSubscriptionInfo `json:"baasZuoraSubscription,omitempty"`
}

// NewV1AccountConfig instantiates a new V1AccountConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1AccountConfig() *V1AccountConfig {
	this := V1AccountConfig{}
	return &this
}

// NewV1AccountConfigWithDefaults instantiates a new V1AccountConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1AccountConfigWithDefaults() *V1AccountConfig {
	this := V1AccountConfig{}
	return &this
}

// GetAccountConfig returns the AccountConfig field value if set, zero value otherwise.
func (o *V1AccountConfig) GetAccountConfig() V1Config {
	if o == nil || IsNil(o.AccountConfig) {
		var ret V1Config
		return ret
	}
	return *o.AccountConfig
}

// GetAccountConfigOk returns a tuple with the AccountConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AccountConfig) GetAccountConfigOk() (*V1Config, bool) {
	if o == nil || IsNil(o.AccountConfig) {
		return nil, false
	}
	return o.AccountConfig, true
}

// HasAccountConfig returns a boolean if a field has been set.
func (o *V1AccountConfig) HasAccountConfig() bool {
	if o != nil && !IsNil(o.AccountConfig) {
		return true
	}

	return false
}

// SetAccountConfig gets a reference to the given V1Config and assigns it to the AccountConfig field.
func (o *V1AccountConfig) SetAccountConfig(v V1Config) {
	o.AccountConfig = &v
}

// GetPdsAwsRegistrationToken returns the PdsAwsRegistrationToken field value if set, zero value otherwise.
func (o *V1AccountConfig) GetPdsAwsRegistrationToken() string {
	if o == nil || IsNil(o.PdsAwsRegistrationToken) {
		var ret string
		return ret
	}
	return *o.PdsAwsRegistrationToken
}

// GetPdsAwsRegistrationTokenOk returns a tuple with the PdsAwsRegistrationToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AccountConfig) GetPdsAwsRegistrationTokenOk() (*string, bool) {
	if o == nil || IsNil(o.PdsAwsRegistrationToken) {
		return nil, false
	}
	return o.PdsAwsRegistrationToken, true
}

// HasPdsAwsRegistrationToken returns a boolean if a field has been set.
func (o *V1AccountConfig) HasPdsAwsRegistrationToken() bool {
	if o != nil && !IsNil(o.PdsAwsRegistrationToken) {
		return true
	}

	return false
}

// SetPdsAwsRegistrationToken gets a reference to the given string and assigns it to the PdsAwsRegistrationToken field.
func (o *V1AccountConfig) SetPdsAwsRegistrationToken(v string) {
	o.PdsAwsRegistrationToken = &v
}

// GetPdsZuoraSubscription returns the PdsZuoraSubscription field value if set, zero value otherwise.
func (o *V1AccountConfig) GetPdsZuoraSubscription() V1ZuoraSubscriptionInfo {
	if o == nil || IsNil(o.PdsZuoraSubscription) {
		var ret V1ZuoraSubscriptionInfo
		return ret
	}
	return *o.PdsZuoraSubscription
}

// GetPdsZuoraSubscriptionOk returns a tuple with the PdsZuoraSubscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AccountConfig) GetPdsZuoraSubscriptionOk() (*V1ZuoraSubscriptionInfo, bool) {
	if o == nil || IsNil(o.PdsZuoraSubscription) {
		return nil, false
	}
	return o.PdsZuoraSubscription, true
}

// HasPdsZuoraSubscription returns a boolean if a field has been set.
func (o *V1AccountConfig) HasPdsZuoraSubscription() bool {
	if o != nil && !IsNil(o.PdsZuoraSubscription) {
		return true
	}

	return false
}

// SetPdsZuoraSubscription gets a reference to the given V1ZuoraSubscriptionInfo and assigns it to the PdsZuoraSubscription field.
func (o *V1AccountConfig) SetPdsZuoraSubscription(v V1ZuoraSubscriptionInfo) {
	o.PdsZuoraSubscription = &v
}

// GetPxeAwsRegistrationToken returns the PxeAwsRegistrationToken field value if set, zero value otherwise.
func (o *V1AccountConfig) GetPxeAwsRegistrationToken() string {
	if o == nil || IsNil(o.PxeAwsRegistrationToken) {
		var ret string
		return ret
	}
	return *o.PxeAwsRegistrationToken
}

// GetPxeAwsRegistrationTokenOk returns a tuple with the PxeAwsRegistrationToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AccountConfig) GetPxeAwsRegistrationTokenOk() (*string, bool) {
	if o == nil || IsNil(o.PxeAwsRegistrationToken) {
		return nil, false
	}
	return o.PxeAwsRegistrationToken, true
}

// HasPxeAwsRegistrationToken returns a boolean if a field has been set.
func (o *V1AccountConfig) HasPxeAwsRegistrationToken() bool {
	if o != nil && !IsNil(o.PxeAwsRegistrationToken) {
		return true
	}

	return false
}

// SetPxeAwsRegistrationToken gets a reference to the given string and assigns it to the PxeAwsRegistrationToken field.
func (o *V1AccountConfig) SetPxeAwsRegistrationToken(v string) {
	o.PxeAwsRegistrationToken = &v
}

// GetPxeZuoraSubscription returns the PxeZuoraSubscription field value if set, zero value otherwise.
func (o *V1AccountConfig) GetPxeZuoraSubscription() V1ZuoraSubscriptionInfo {
	if o == nil || IsNil(o.PxeZuoraSubscription) {
		var ret V1ZuoraSubscriptionInfo
		return ret
	}
	return *o.PxeZuoraSubscription
}

// GetPxeZuoraSubscriptionOk returns a tuple with the PxeZuoraSubscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AccountConfig) GetPxeZuoraSubscriptionOk() (*V1ZuoraSubscriptionInfo, bool) {
	if o == nil || IsNil(o.PxeZuoraSubscription) {
		return nil, false
	}
	return o.PxeZuoraSubscription, true
}

// HasPxeZuoraSubscription returns a boolean if a field has been set.
func (o *V1AccountConfig) HasPxeZuoraSubscription() bool {
	if o != nil && !IsNil(o.PxeZuoraSubscription) {
		return true
	}

	return false
}

// SetPxeZuoraSubscription gets a reference to the given V1ZuoraSubscriptionInfo and assigns it to the PxeZuoraSubscription field.
func (o *V1AccountConfig) SetPxeZuoraSubscription(v V1ZuoraSubscriptionInfo) {
	o.PxeZuoraSubscription = &v
}

// GetBaasAwsRegistrationToken returns the BaasAwsRegistrationToken field value if set, zero value otherwise.
func (o *V1AccountConfig) GetBaasAwsRegistrationToken() string {
	if o == nil || IsNil(o.BaasAwsRegistrationToken) {
		var ret string
		return ret
	}
	return *o.BaasAwsRegistrationToken
}

// GetBaasAwsRegistrationTokenOk returns a tuple with the BaasAwsRegistrationToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AccountConfig) GetBaasAwsRegistrationTokenOk() (*string, bool) {
	if o == nil || IsNil(o.BaasAwsRegistrationToken) {
		return nil, false
	}
	return o.BaasAwsRegistrationToken, true
}

// HasBaasAwsRegistrationToken returns a boolean if a field has been set.
func (o *V1AccountConfig) HasBaasAwsRegistrationToken() bool {
	if o != nil && !IsNil(o.BaasAwsRegistrationToken) {
		return true
	}

	return false
}

// SetBaasAwsRegistrationToken gets a reference to the given string and assigns it to the BaasAwsRegistrationToken field.
func (o *V1AccountConfig) SetBaasAwsRegistrationToken(v string) {
	o.BaasAwsRegistrationToken = &v
}

// GetBaasZuoraSubscription returns the BaasZuoraSubscription field value if set, zero value otherwise.
func (o *V1AccountConfig) GetBaasZuoraSubscription() V1ZuoraSubscriptionInfo {
	if o == nil || IsNil(o.BaasZuoraSubscription) {
		var ret V1ZuoraSubscriptionInfo
		return ret
	}
	return *o.BaasZuoraSubscription
}

// GetBaasZuoraSubscriptionOk returns a tuple with the BaasZuoraSubscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1AccountConfig) GetBaasZuoraSubscriptionOk() (*V1ZuoraSubscriptionInfo, bool) {
	if o == nil || IsNil(o.BaasZuoraSubscription) {
		return nil, false
	}
	return o.BaasZuoraSubscription, true
}

// HasBaasZuoraSubscription returns a boolean if a field has been set.
func (o *V1AccountConfig) HasBaasZuoraSubscription() bool {
	if o != nil && !IsNil(o.BaasZuoraSubscription) {
		return true
	}

	return false
}

// SetBaasZuoraSubscription gets a reference to the given V1ZuoraSubscriptionInfo and assigns it to the BaasZuoraSubscription field.
func (o *V1AccountConfig) SetBaasZuoraSubscription(v V1ZuoraSubscriptionInfo) {
	o.BaasZuoraSubscription = &v
}

func (o V1AccountConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1AccountConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountConfig) {
		toSerialize["accountConfig"] = o.AccountConfig
	}
	if !IsNil(o.PdsAwsRegistrationToken) {
		toSerialize["pdsAwsRegistrationToken"] = o.PdsAwsRegistrationToken
	}
	if !IsNil(o.PdsZuoraSubscription) {
		toSerialize["pdsZuoraSubscription"] = o.PdsZuoraSubscription
	}
	if !IsNil(o.PxeAwsRegistrationToken) {
		toSerialize["pxeAwsRegistrationToken"] = o.PxeAwsRegistrationToken
	}
	if !IsNil(o.PxeZuoraSubscription) {
		toSerialize["pxeZuoraSubscription"] = o.PxeZuoraSubscription
	}
	if !IsNil(o.BaasAwsRegistrationToken) {
		toSerialize["baasAwsRegistrationToken"] = o.BaasAwsRegistrationToken
	}
	if !IsNil(o.BaasZuoraSubscription) {
		toSerialize["baasZuoraSubscription"] = o.BaasZuoraSubscription
	}
	return toSerialize, nil
}

type NullableV1AccountConfig struct {
	value *V1AccountConfig
	isSet bool
}

func (v NullableV1AccountConfig) Get() *V1AccountConfig {
	return v.value
}

func (v *NullableV1AccountConfig) Set(val *V1AccountConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableV1AccountConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableV1AccountConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1AccountConfig(val *V1AccountConfig) *NullableV1AccountConfig {
	return &NullableV1AccountConfig{value: val, isSet: true}
}

func (v NullableV1AccountConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1AccountConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


