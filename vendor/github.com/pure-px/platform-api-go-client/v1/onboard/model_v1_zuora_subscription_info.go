/*
public/portworx/platform/onboard/apiv1/onboard.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onboard

import (
	"encoding/json"
)

// checks if the V1ZuoraSubscriptionInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ZuoraSubscriptionInfo{}

// V1ZuoraSubscriptionInfo Zuora Subscription info for a particular installed product.
type V1ZuoraSubscriptionInfo struct {
	// id associated installed product.
	SubscriptionId *string `json:"subscriptionId,omitempty"`
	// id associated with the customer account.
	AccountId *string `json:"accountId,omitempty"`
}

// NewV1ZuoraSubscriptionInfo instantiates a new V1ZuoraSubscriptionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ZuoraSubscriptionInfo() *V1ZuoraSubscriptionInfo {
	this := V1ZuoraSubscriptionInfo{}
	return &this
}

// NewV1ZuoraSubscriptionInfoWithDefaults instantiates a new V1ZuoraSubscriptionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ZuoraSubscriptionInfoWithDefaults() *V1ZuoraSubscriptionInfo {
	this := V1ZuoraSubscriptionInfo{}
	return &this
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *V1ZuoraSubscriptionInfo) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ZuoraSubscriptionInfo) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *V1ZuoraSubscriptionInfo) HasSubscriptionId() bool {
	if o != nil && !IsNil(o.SubscriptionId) {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *V1ZuoraSubscriptionInfo) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *V1ZuoraSubscriptionInfo) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ZuoraSubscriptionInfo) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *V1ZuoraSubscriptionInfo) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *V1ZuoraSubscriptionInfo) SetAccountId(v string) {
	o.AccountId = &v
}

func (o V1ZuoraSubscriptionInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ZuoraSubscriptionInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	return toSerialize, nil
}

type NullableV1ZuoraSubscriptionInfo struct {
	value *V1ZuoraSubscriptionInfo
	isSet bool
}

func (v NullableV1ZuoraSubscriptionInfo) Get() *V1ZuoraSubscriptionInfo {
	return v.value
}

func (v *NullableV1ZuoraSubscriptionInfo) Set(val *V1ZuoraSubscriptionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ZuoraSubscriptionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ZuoraSubscriptionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ZuoraSubscriptionInfo(val *V1ZuoraSubscriptionInfo) *NullableV1ZuoraSubscriptionInfo {
	return &NullableV1ZuoraSubscriptionInfo{value: val, isSet: true}
}

func (v NullableV1ZuoraSubscriptionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ZuoraSubscriptionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


