/*
public/portworx/platform/iam/apiv1/iam.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iam

import (
	"encoding/json"
)

// checks if the SpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser{}

// SpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser Specifies the IAM role binding that needs to be added or granted for the user.
type SpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser struct {
	Meta *V1Meta `json:"meta,omitempty"`
	Config *DesiredConfigurationOfTheIAM `json:"config,omitempty"`
}

// NewSpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser instantiates a new SpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser() *SpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser {
	this := SpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser{}
	return &this
}

// NewSpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUserWithDefaults instantiates a new SpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUserWithDefaults() *SpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser {
	this := SpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *SpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser) GetMeta() V1Meta {
	if o == nil || IsNil(o.Meta) {
		var ret V1Meta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser) GetMetaOk() (*V1Meta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *SpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given V1Meta and assigns it to the Meta field.
func (o *SpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser) SetMeta(v V1Meta) {
	o.Meta = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *SpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser) GetConfig() DesiredConfigurationOfTheIAM {
	if o == nil || IsNil(o.Config) {
		var ret DesiredConfigurationOfTheIAM
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser) GetConfigOk() (*DesiredConfigurationOfTheIAM, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *SpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given DesiredConfigurationOfTheIAM and assigns it to the Config field.
func (o *SpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser) SetConfig(v DesiredConfigurationOfTheIAM) {
	o.Config = &v
}

func (o SpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	return toSerialize, nil
}

type NullableSpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser struct {
	value *SpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser
	isSet bool
}

func (v NullableSpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser) Get() *SpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser {
	return v.value
}

func (v *NullableSpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser) Set(val *SpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser) {
	v.value = val
	v.isSet = true
}

func (v NullableSpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser) IsSet() bool {
	return v.isSet
}

func (v *NullableSpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser(val *SpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser) *NullableSpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser {
	return &NullableSpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser{value: val, isSet: true}
}

func (v NullableSpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpecifiesTheIAMRoleBindingThatNeedsToBeAddedOrGrantedForTheUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


