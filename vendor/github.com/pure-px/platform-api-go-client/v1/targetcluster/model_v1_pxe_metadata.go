/*
public/portworx/platform/targetcluster/application/apiv1/application.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package targetcluster

import (
	"encoding/json"
)

// checks if the V1PXEMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1PXEMetadata{}

// V1PXEMetadata PX Enterprise metadata on the target cluster.
type V1PXEMetadata struct {
	// CSIEnabled flag depicts if csi is supported on the target cluster.
	CsiEnabled *bool `json:"csiEnabled,omitempty"`
	// Name of portworx api service on the target cluster.
	ServiceName *string `json:"serviceName,omitempty"`
	// Namespace of portworx api service on the target cluster.
	ServiceNamespace *string `json:"serviceNamespace,omitempty"`
	// Version of PXE installed on the target cluster.
	Version *string `json:"version,omitempty"`
}

// NewV1PXEMetadata instantiates a new V1PXEMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1PXEMetadata() *V1PXEMetadata {
	this := V1PXEMetadata{}
	return &this
}

// NewV1PXEMetadataWithDefaults instantiates a new V1PXEMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1PXEMetadataWithDefaults() *V1PXEMetadata {
	this := V1PXEMetadata{}
	return &this
}

// GetCsiEnabled returns the CsiEnabled field value if set, zero value otherwise.
func (o *V1PXEMetadata) GetCsiEnabled() bool {
	if o == nil || IsNil(o.CsiEnabled) {
		var ret bool
		return ret
	}
	return *o.CsiEnabled
}

// GetCsiEnabledOk returns a tuple with the CsiEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1PXEMetadata) GetCsiEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.CsiEnabled) {
		return nil, false
	}
	return o.CsiEnabled, true
}

// HasCsiEnabled returns a boolean if a field has been set.
func (o *V1PXEMetadata) HasCsiEnabled() bool {
	if o != nil && !IsNil(o.CsiEnabled) {
		return true
	}

	return false
}

// SetCsiEnabled gets a reference to the given bool and assigns it to the CsiEnabled field.
func (o *V1PXEMetadata) SetCsiEnabled(v bool) {
	o.CsiEnabled = &v
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise.
func (o *V1PXEMetadata) GetServiceName() string {
	if o == nil || IsNil(o.ServiceName) {
		var ret string
		return ret
	}
	return *o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1PXEMetadata) GetServiceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceName) {
		return nil, false
	}
	return o.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (o *V1PXEMetadata) HasServiceName() bool {
	if o != nil && !IsNil(o.ServiceName) {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given string and assigns it to the ServiceName field.
func (o *V1PXEMetadata) SetServiceName(v string) {
	o.ServiceName = &v
}

// GetServiceNamespace returns the ServiceNamespace field value if set, zero value otherwise.
func (o *V1PXEMetadata) GetServiceNamespace() string {
	if o == nil || IsNil(o.ServiceNamespace) {
		var ret string
		return ret
	}
	return *o.ServiceNamespace
}

// GetServiceNamespaceOk returns a tuple with the ServiceNamespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1PXEMetadata) GetServiceNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceNamespace) {
		return nil, false
	}
	return o.ServiceNamespace, true
}

// HasServiceNamespace returns a boolean if a field has been set.
func (o *V1PXEMetadata) HasServiceNamespace() bool {
	if o != nil && !IsNil(o.ServiceNamespace) {
		return true
	}

	return false
}

// SetServiceNamespace gets a reference to the given string and assigns it to the ServiceNamespace field.
func (o *V1PXEMetadata) SetServiceNamespace(v string) {
	o.ServiceNamespace = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *V1PXEMetadata) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1PXEMetadata) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *V1PXEMetadata) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *V1PXEMetadata) SetVersion(v string) {
	o.Version = &v
}

func (o V1PXEMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1PXEMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CsiEnabled) {
		toSerialize["csiEnabled"] = o.CsiEnabled
	}
	if !IsNil(o.ServiceName) {
		toSerialize["serviceName"] = o.ServiceName
	}
	if !IsNil(o.ServiceNamespace) {
		toSerialize["serviceNamespace"] = o.ServiceNamespace
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableV1PXEMetadata struct {
	value *V1PXEMetadata
	isSet bool
}

func (v NullableV1PXEMetadata) Get() *V1PXEMetadata {
	return v.value
}

func (v *NullableV1PXEMetadata) Set(val *V1PXEMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableV1PXEMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableV1PXEMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1PXEMetadata(val *V1PXEMetadata) *NullableV1PXEMetadata {
	return &NullableV1PXEMetadata{value: val, isSet: true}
}

func (v NullableV1PXEMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1PXEMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


