/*
public/portworx/platform/template/apiv1/template.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package template

import (
	"encoding/json"
)

// checks if the Templatev1Status type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Templatev1Status{}

// Templatev1Status Status provides the current status of template.
type Templatev1Status struct {
	Phase *StatusPhase `json:"phase,omitempty"`
}

// NewTemplatev1Status instantiates a new Templatev1Status object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplatev1Status() *Templatev1Status {
	this := Templatev1Status{}
	var phase StatusPhase = STATUSPHASE_PHASE_UNSPECIFIED
	this.Phase = &phase
	return &this
}

// NewTemplatev1StatusWithDefaults instantiates a new Templatev1Status object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplatev1StatusWithDefaults() *Templatev1Status {
	this := Templatev1Status{}
	var phase StatusPhase = STATUSPHASE_PHASE_UNSPECIFIED
	this.Phase = &phase
	return &this
}

// GetPhase returns the Phase field value if set, zero value otherwise.
func (o *Templatev1Status) GetPhase() StatusPhase {
	if o == nil || IsNil(o.Phase) {
		var ret StatusPhase
		return ret
	}
	return *o.Phase
}

// GetPhaseOk returns a tuple with the Phase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Templatev1Status) GetPhaseOk() (*StatusPhase, bool) {
	if o == nil || IsNil(o.Phase) {
		return nil, false
	}
	return o.Phase, true
}

// HasPhase returns a boolean if a field has been set.
func (o *Templatev1Status) HasPhase() bool {
	if o != nil && !IsNil(o.Phase) {
		return true
	}

	return false
}

// SetPhase gets a reference to the given StatusPhase and assigns it to the Phase field.
func (o *Templatev1Status) SetPhase(v StatusPhase) {
	o.Phase = &v
}

func (o Templatev1Status) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Templatev1Status) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Phase) {
		toSerialize["phase"] = o.Phase
	}
	return toSerialize, nil
}

type NullableTemplatev1Status struct {
	value *Templatev1Status
	isSet bool
}

func (v NullableTemplatev1Status) Get() *Templatev1Status {
	return v.value
}

func (v *NullableTemplatev1Status) Set(val *Templatev1Status) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplatev1Status) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplatev1Status) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplatev1Status(val *Templatev1Status) *NullableTemplatev1Status {
	return &NullableTemplatev1Status{value: val, isSet: true}
}

func (v NullableTemplatev1Status) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplatev1Status) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


