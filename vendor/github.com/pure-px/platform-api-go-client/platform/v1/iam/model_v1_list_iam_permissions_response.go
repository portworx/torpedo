/*
public/portworx/platform/iam/apiv1/iam.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iam

import (
	"encoding/json"
)

// checks if the V1ListIAMPermissionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ListIAMPermissionsResponse{}

// V1ListIAMPermissionsResponse ListIAMPermissionsResponse is response which contains permission for actor.
type V1ListIAMPermissionsResponse struct {
	// permissions is list of permissions.
	Permissions []string `json:"permissions,omitempty"`
}

// NewV1ListIAMPermissionsResponse instantiates a new V1ListIAMPermissionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ListIAMPermissionsResponse() *V1ListIAMPermissionsResponse {
	this := V1ListIAMPermissionsResponse{}
	return &this
}

// NewV1ListIAMPermissionsResponseWithDefaults instantiates a new V1ListIAMPermissionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ListIAMPermissionsResponseWithDefaults() *V1ListIAMPermissionsResponse {
	this := V1ListIAMPermissionsResponse{}
	return &this
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *V1ListIAMPermissionsResponse) GetPermissions() []string {
	if o == nil || IsNil(o.Permissions) {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ListIAMPermissionsResponse) GetPermissionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *V1ListIAMPermissionsResponse) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *V1ListIAMPermissionsResponse) SetPermissions(v []string) {
	o.Permissions = v
}

func (o V1ListIAMPermissionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ListIAMPermissionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	return toSerialize, nil
}

type NullableV1ListIAMPermissionsResponse struct {
	value *V1ListIAMPermissionsResponse
	isSet bool
}

func (v NullableV1ListIAMPermissionsResponse) Get() *V1ListIAMPermissionsResponse {
	return v.value
}

func (v *NullableV1ListIAMPermissionsResponse) Set(val *V1ListIAMPermissionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ListIAMPermissionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ListIAMPermissionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ListIAMPermissionsResponse(val *V1ListIAMPermissionsResponse) *NullableV1ListIAMPermissionsResponse {
	return &NullableV1ListIAMPermissionsResponse{value: val, isSet: true}
}

func (v NullableV1ListIAMPermissionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ListIAMPermissionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


