/*
public/portworx/platform/project/apiv1/project.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package project

import (
	"encoding/json"
)

// checks if the ProjectServiceUpdateProjectBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectServiceUpdateProjectBody{}

// ProjectServiceUpdateProjectBody Request to update a project meta.
type ProjectServiceUpdateProjectBody struct {
	Meta *MetadataOfTheProject `json:"meta,omitempty"`
}

// NewProjectServiceUpdateProjectBody instantiates a new ProjectServiceUpdateProjectBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectServiceUpdateProjectBody() *ProjectServiceUpdateProjectBody {
	this := ProjectServiceUpdateProjectBody{}
	return &this
}

// NewProjectServiceUpdateProjectBodyWithDefaults instantiates a new ProjectServiceUpdateProjectBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectServiceUpdateProjectBodyWithDefaults() *ProjectServiceUpdateProjectBody {
	this := ProjectServiceUpdateProjectBody{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ProjectServiceUpdateProjectBody) GetMeta() MetadataOfTheProject {
	if o == nil || IsNil(o.Meta) {
		var ret MetadataOfTheProject
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectServiceUpdateProjectBody) GetMetaOk() (*MetadataOfTheProject, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ProjectServiceUpdateProjectBody) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetadataOfTheProject and assigns it to the Meta field.
func (o *ProjectServiceUpdateProjectBody) SetMeta(v MetadataOfTheProject) {
	o.Meta = &v
}

func (o ProjectServiceUpdateProjectBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectServiceUpdateProjectBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableProjectServiceUpdateProjectBody struct {
	value *ProjectServiceUpdateProjectBody
	isSet bool
}

func (v NullableProjectServiceUpdateProjectBody) Get() *ProjectServiceUpdateProjectBody {
	return v.value
}

func (v *NullableProjectServiceUpdateProjectBody) Set(val *ProjectServiceUpdateProjectBody) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectServiceUpdateProjectBody) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectServiceUpdateProjectBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectServiceUpdateProjectBody(val *ProjectServiceUpdateProjectBody) *NullableProjectServiceUpdateProjectBody {
	return &NullableProjectServiceUpdateProjectBody{value: val, isSet: true}
}

func (v NullableProjectServiceUpdateProjectBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectServiceUpdateProjectBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


