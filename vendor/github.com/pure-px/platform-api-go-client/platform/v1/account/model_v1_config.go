/*
public/portworx/platform/account/apiv1/account.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package account

import (
	"encoding/json"
)

// checks if the V1Config type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1Config{}

// V1Config Desired configuration of the account.
type V1Config struct {
	// email of the first account user.
	UserEmail *string `json:"userEmail,omitempty"`
	// Account DNS name.
	DnsName *string `json:"dnsName,omitempty"`
	// Display name of Account.
	DisplayName *string `json:"displayName,omitempty"`
	AccountType *V1AccountType `json:"accountType,omitempty"`
	PdsZuoraSubscription *V1ZuoraSubscriptionInfo `json:"pdsZuoraSubscription,omitempty"`
	PxeAwsSubscription *V1AwsSubscriptionInfo `json:"pxeAwsSubscription,omitempty"`
	PxeZuoraSubscription *V1ZuoraSubscriptionInfo `json:"pxeZuoraSubscription,omitempty"`
	BaasAwsSubscription *V1AwsSubscriptionInfo `json:"baasAwsSubscription,omitempty"`
	BaasZuoraSubscription *V1ZuoraSubscriptionInfo `json:"baasZuoraSubscription,omitempty"`
}

// NewV1Config instantiates a new V1Config object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1Config() *V1Config {
	this := V1Config{}
	var accountType V1AccountType = V1ACCOUNTTYPE_ACCOUNT_TYPE_UNSPECIFIED
	this.AccountType = &accountType
	return &this
}

// NewV1ConfigWithDefaults instantiates a new V1Config object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ConfigWithDefaults() *V1Config {
	this := V1Config{}
	var accountType V1AccountType = V1ACCOUNTTYPE_ACCOUNT_TYPE_UNSPECIFIED
	this.AccountType = &accountType
	return &this
}

// GetUserEmail returns the UserEmail field value if set, zero value otherwise.
func (o *V1Config) GetUserEmail() string {
	if o == nil || IsNil(o.UserEmail) {
		var ret string
		return ret
	}
	return *o.UserEmail
}

// GetUserEmailOk returns a tuple with the UserEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Config) GetUserEmailOk() (*string, bool) {
	if o == nil || IsNil(o.UserEmail) {
		return nil, false
	}
	return o.UserEmail, true
}

// HasUserEmail returns a boolean if a field has been set.
func (o *V1Config) HasUserEmail() bool {
	if o != nil && !IsNil(o.UserEmail) {
		return true
	}

	return false
}

// SetUserEmail gets a reference to the given string and assigns it to the UserEmail field.
func (o *V1Config) SetUserEmail(v string) {
	o.UserEmail = &v
}

// GetDnsName returns the DnsName field value if set, zero value otherwise.
func (o *V1Config) GetDnsName() string {
	if o == nil || IsNil(o.DnsName) {
		var ret string
		return ret
	}
	return *o.DnsName
}

// GetDnsNameOk returns a tuple with the DnsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Config) GetDnsNameOk() (*string, bool) {
	if o == nil || IsNil(o.DnsName) {
		return nil, false
	}
	return o.DnsName, true
}

// HasDnsName returns a boolean if a field has been set.
func (o *V1Config) HasDnsName() bool {
	if o != nil && !IsNil(o.DnsName) {
		return true
	}

	return false
}

// SetDnsName gets a reference to the given string and assigns it to the DnsName field.
func (o *V1Config) SetDnsName(v string) {
	o.DnsName = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *V1Config) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Config) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *V1Config) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *V1Config) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetAccountType returns the AccountType field value if set, zero value otherwise.
func (o *V1Config) GetAccountType() V1AccountType {
	if o == nil || IsNil(o.AccountType) {
		var ret V1AccountType
		return ret
	}
	return *o.AccountType
}

// GetAccountTypeOk returns a tuple with the AccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Config) GetAccountTypeOk() (*V1AccountType, bool) {
	if o == nil || IsNil(o.AccountType) {
		return nil, false
	}
	return o.AccountType, true
}

// HasAccountType returns a boolean if a field has been set.
func (o *V1Config) HasAccountType() bool {
	if o != nil && !IsNil(o.AccountType) {
		return true
	}

	return false
}

// SetAccountType gets a reference to the given V1AccountType and assigns it to the AccountType field.
func (o *V1Config) SetAccountType(v V1AccountType) {
	o.AccountType = &v
}

// GetPdsZuoraSubscription returns the PdsZuoraSubscription field value if set, zero value otherwise.
func (o *V1Config) GetPdsZuoraSubscription() V1ZuoraSubscriptionInfo {
	if o == nil || IsNil(o.PdsZuoraSubscription) {
		var ret V1ZuoraSubscriptionInfo
		return ret
	}
	return *o.PdsZuoraSubscription
}

// GetPdsZuoraSubscriptionOk returns a tuple with the PdsZuoraSubscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Config) GetPdsZuoraSubscriptionOk() (*V1ZuoraSubscriptionInfo, bool) {
	if o == nil || IsNil(o.PdsZuoraSubscription) {
		return nil, false
	}
	return o.PdsZuoraSubscription, true
}

// HasPdsZuoraSubscription returns a boolean if a field has been set.
func (o *V1Config) HasPdsZuoraSubscription() bool {
	if o != nil && !IsNil(o.PdsZuoraSubscription) {
		return true
	}

	return false
}

// SetPdsZuoraSubscription gets a reference to the given V1ZuoraSubscriptionInfo and assigns it to the PdsZuoraSubscription field.
func (o *V1Config) SetPdsZuoraSubscription(v V1ZuoraSubscriptionInfo) {
	o.PdsZuoraSubscription = &v
}

// GetPxeAwsSubscription returns the PxeAwsSubscription field value if set, zero value otherwise.
func (o *V1Config) GetPxeAwsSubscription() V1AwsSubscriptionInfo {
	if o == nil || IsNil(o.PxeAwsSubscription) {
		var ret V1AwsSubscriptionInfo
		return ret
	}
	return *o.PxeAwsSubscription
}

// GetPxeAwsSubscriptionOk returns a tuple with the PxeAwsSubscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Config) GetPxeAwsSubscriptionOk() (*V1AwsSubscriptionInfo, bool) {
	if o == nil || IsNil(o.PxeAwsSubscription) {
		return nil, false
	}
	return o.PxeAwsSubscription, true
}

// HasPxeAwsSubscription returns a boolean if a field has been set.
func (o *V1Config) HasPxeAwsSubscription() bool {
	if o != nil && !IsNil(o.PxeAwsSubscription) {
		return true
	}

	return false
}

// SetPxeAwsSubscription gets a reference to the given V1AwsSubscriptionInfo and assigns it to the PxeAwsSubscription field.
func (o *V1Config) SetPxeAwsSubscription(v V1AwsSubscriptionInfo) {
	o.PxeAwsSubscription = &v
}

// GetPxeZuoraSubscription returns the PxeZuoraSubscription field value if set, zero value otherwise.
func (o *V1Config) GetPxeZuoraSubscription() V1ZuoraSubscriptionInfo {
	if o == nil || IsNil(o.PxeZuoraSubscription) {
		var ret V1ZuoraSubscriptionInfo
		return ret
	}
	return *o.PxeZuoraSubscription
}

// GetPxeZuoraSubscriptionOk returns a tuple with the PxeZuoraSubscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Config) GetPxeZuoraSubscriptionOk() (*V1ZuoraSubscriptionInfo, bool) {
	if o == nil || IsNil(o.PxeZuoraSubscription) {
		return nil, false
	}
	return o.PxeZuoraSubscription, true
}

// HasPxeZuoraSubscription returns a boolean if a field has been set.
func (o *V1Config) HasPxeZuoraSubscription() bool {
	if o != nil && !IsNil(o.PxeZuoraSubscription) {
		return true
	}

	return false
}

// SetPxeZuoraSubscription gets a reference to the given V1ZuoraSubscriptionInfo and assigns it to the PxeZuoraSubscription field.
func (o *V1Config) SetPxeZuoraSubscription(v V1ZuoraSubscriptionInfo) {
	o.PxeZuoraSubscription = &v
}

// GetBaasAwsSubscription returns the BaasAwsSubscription field value if set, zero value otherwise.
func (o *V1Config) GetBaasAwsSubscription() V1AwsSubscriptionInfo {
	if o == nil || IsNil(o.BaasAwsSubscription) {
		var ret V1AwsSubscriptionInfo
		return ret
	}
	return *o.BaasAwsSubscription
}

// GetBaasAwsSubscriptionOk returns a tuple with the BaasAwsSubscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Config) GetBaasAwsSubscriptionOk() (*V1AwsSubscriptionInfo, bool) {
	if o == nil || IsNil(o.BaasAwsSubscription) {
		return nil, false
	}
	return o.BaasAwsSubscription, true
}

// HasBaasAwsSubscription returns a boolean if a field has been set.
func (o *V1Config) HasBaasAwsSubscription() bool {
	if o != nil && !IsNil(o.BaasAwsSubscription) {
		return true
	}

	return false
}

// SetBaasAwsSubscription gets a reference to the given V1AwsSubscriptionInfo and assigns it to the BaasAwsSubscription field.
func (o *V1Config) SetBaasAwsSubscription(v V1AwsSubscriptionInfo) {
	o.BaasAwsSubscription = &v
}

// GetBaasZuoraSubscription returns the BaasZuoraSubscription field value if set, zero value otherwise.
func (o *V1Config) GetBaasZuoraSubscription() V1ZuoraSubscriptionInfo {
	if o == nil || IsNil(o.BaasZuoraSubscription) {
		var ret V1ZuoraSubscriptionInfo
		return ret
	}
	return *o.BaasZuoraSubscription
}

// GetBaasZuoraSubscriptionOk returns a tuple with the BaasZuoraSubscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Config) GetBaasZuoraSubscriptionOk() (*V1ZuoraSubscriptionInfo, bool) {
	if o == nil || IsNil(o.BaasZuoraSubscription) {
		return nil, false
	}
	return o.BaasZuoraSubscription, true
}

// HasBaasZuoraSubscription returns a boolean if a field has been set.
func (o *V1Config) HasBaasZuoraSubscription() bool {
	if o != nil && !IsNil(o.BaasZuoraSubscription) {
		return true
	}

	return false
}

// SetBaasZuoraSubscription gets a reference to the given V1ZuoraSubscriptionInfo and assigns it to the BaasZuoraSubscription field.
func (o *V1Config) SetBaasZuoraSubscription(v V1ZuoraSubscriptionInfo) {
	o.BaasZuoraSubscription = &v
}

func (o V1Config) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1Config) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserEmail) {
		toSerialize["userEmail"] = o.UserEmail
	}
	if !IsNil(o.DnsName) {
		toSerialize["dnsName"] = o.DnsName
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.AccountType) {
		toSerialize["accountType"] = o.AccountType
	}
	if !IsNil(o.PdsZuoraSubscription) {
		toSerialize["pdsZuoraSubscription"] = o.PdsZuoraSubscription
	}
	if !IsNil(o.PxeAwsSubscription) {
		toSerialize["pxeAwsSubscription"] = o.PxeAwsSubscription
	}
	if !IsNil(o.PxeZuoraSubscription) {
		toSerialize["pxeZuoraSubscription"] = o.PxeZuoraSubscription
	}
	if !IsNil(o.BaasAwsSubscription) {
		toSerialize["baasAwsSubscription"] = o.BaasAwsSubscription
	}
	if !IsNil(o.BaasZuoraSubscription) {
		toSerialize["baasZuoraSubscription"] = o.BaasZuoraSubscription
	}
	return toSerialize, nil
}

type NullableV1Config struct {
	value *V1Config
	isSet bool
}

func (v NullableV1Config) Get() *V1Config {
	return v.value
}

func (v *NullableV1Config) Set(val *V1Config) {
	v.value = val
	v.isSet = true
}

func (v NullableV1Config) IsSet() bool {
	return v.isSet
}

func (v *NullableV1Config) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1Config(val *V1Config) *NullableV1Config {
	return &NullableV1Config{value: val, isSet: true}
}

func (v NullableV1Config) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1Config) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


