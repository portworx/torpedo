/*
public/portworx/platform/tenant/apiv1/tenant.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package platformclientv1

import (
	"encoding/json"
)

// checks if the Backuplocationv1Status type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Backuplocationv1Status{}

// Backuplocationv1Status struct for Backuplocationv1Status
type Backuplocationv1Status struct {
	Validity *StatusValidity `json:"validity,omitempty"`
}

// NewBackuplocationv1Status instantiates a new Backuplocationv1Status object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackuplocationv1Status() *Backuplocationv1Status {
	this := Backuplocationv1Status{}
	var validity StatusValidity = STATUSVALIDITY_VALIDITY_UNSPECIFIED
	this.Validity = &validity
	return &this
}

// NewBackuplocationv1StatusWithDefaults instantiates a new Backuplocationv1Status object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackuplocationv1StatusWithDefaults() *Backuplocationv1Status {
	this := Backuplocationv1Status{}
	var validity StatusValidity = STATUSVALIDITY_VALIDITY_UNSPECIFIED
	this.Validity = &validity
	return &this
}

// GetValidity returns the Validity field value if set, zero value otherwise.
func (o *Backuplocationv1Status) GetValidity() StatusValidity {
	if o == nil || IsNil(o.Validity) {
		var ret StatusValidity
		return ret
	}
	return *o.Validity
}

// GetValidityOk returns a tuple with the Validity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Backuplocationv1Status) GetValidityOk() (*StatusValidity, bool) {
	if o == nil || IsNil(o.Validity) {
		return nil, false
	}
	return o.Validity, true
}

// HasValidity returns a boolean if a field has been set.
func (o *Backuplocationv1Status) HasValidity() bool {
	if o != nil && !IsNil(o.Validity) {
		return true
	}

	return false
}

// SetValidity gets a reference to the given StatusValidity and assigns it to the Validity field.
func (o *Backuplocationv1Status) SetValidity(v StatusValidity) {
	o.Validity = &v
}

func (o Backuplocationv1Status) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Backuplocationv1Status) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Validity) {
		toSerialize["validity"] = o.Validity
	}
	return toSerialize, nil
}

type NullableBackuplocationv1Status struct {
	value *Backuplocationv1Status
	isSet bool
}

func (v NullableBackuplocationv1Status) Get() *Backuplocationv1Status {
	return v.value
}

func (v *NullableBackuplocationv1Status) Set(val *Backuplocationv1Status) {
	v.value = val
	v.isSet = true
}

func (v NullableBackuplocationv1Status) IsSet() bool {
	return v.isSet
}

func (v *NullableBackuplocationv1Status) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackuplocationv1Status(val *Backuplocationv1Status) *NullableBackuplocationv1Status {
	return &NullableBackuplocationv1Status{value: val, isSet: true}
}

func (v NullableBackuplocationv1Status) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackuplocationv1Status) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


