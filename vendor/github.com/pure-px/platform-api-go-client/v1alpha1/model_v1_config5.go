/*
public/portworx/platform/tenant/apiv1/tenant.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package platformclientv1

import (
	"encoding/json"
)

// checks if the V1Config5 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1Config5{}

// V1Config5 struct for V1Config5
type V1Config5 struct {
	CustomImageRegistryConfig *V1CustomImageRegistryConfig `json:"customImageRegistryConfig,omitempty"`
	ProxyConfig *V1ProxyConfig `json:"proxyConfig,omitempty"`
}

// NewV1Config5 instantiates a new V1Config5 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1Config5() *V1Config5 {
	this := V1Config5{}
	return &this
}

// NewV1Config5WithDefaults instantiates a new V1Config5 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1Config5WithDefaults() *V1Config5 {
	this := V1Config5{}
	return &this
}

// GetCustomImageRegistryConfig returns the CustomImageRegistryConfig field value if set, zero value otherwise.
func (o *V1Config5) GetCustomImageRegistryConfig() V1CustomImageRegistryConfig {
	if o == nil || IsNil(o.CustomImageRegistryConfig) {
		var ret V1CustomImageRegistryConfig
		return ret
	}
	return *o.CustomImageRegistryConfig
}

// GetCustomImageRegistryConfigOk returns a tuple with the CustomImageRegistryConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Config5) GetCustomImageRegistryConfigOk() (*V1CustomImageRegistryConfig, bool) {
	if o == nil || IsNil(o.CustomImageRegistryConfig) {
		return nil, false
	}
	return o.CustomImageRegistryConfig, true
}

// HasCustomImageRegistryConfig returns a boolean if a field has been set.
func (o *V1Config5) HasCustomImageRegistryConfig() bool {
	if o != nil && !IsNil(o.CustomImageRegistryConfig) {
		return true
	}

	return false
}

// SetCustomImageRegistryConfig gets a reference to the given V1CustomImageRegistryConfig and assigns it to the CustomImageRegistryConfig field.
func (o *V1Config5) SetCustomImageRegistryConfig(v V1CustomImageRegistryConfig) {
	o.CustomImageRegistryConfig = &v
}

// GetProxyConfig returns the ProxyConfig field value if set, zero value otherwise.
func (o *V1Config5) GetProxyConfig() V1ProxyConfig {
	if o == nil || IsNil(o.ProxyConfig) {
		var ret V1ProxyConfig
		return ret
	}
	return *o.ProxyConfig
}

// GetProxyConfigOk returns a tuple with the ProxyConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Config5) GetProxyConfigOk() (*V1ProxyConfig, bool) {
	if o == nil || IsNil(o.ProxyConfig) {
		return nil, false
	}
	return o.ProxyConfig, true
}

// HasProxyConfig returns a boolean if a field has been set.
func (o *V1Config5) HasProxyConfig() bool {
	if o != nil && !IsNil(o.ProxyConfig) {
		return true
	}

	return false
}

// SetProxyConfig gets a reference to the given V1ProxyConfig and assigns it to the ProxyConfig field.
func (o *V1Config5) SetProxyConfig(v V1ProxyConfig) {
	o.ProxyConfig = &v
}

func (o V1Config5) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1Config5) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomImageRegistryConfig) {
		toSerialize["customImageRegistryConfig"] = o.CustomImageRegistryConfig
	}
	if !IsNil(o.ProxyConfig) {
		toSerialize["proxyConfig"] = o.ProxyConfig
	}
	return toSerialize, nil
}

type NullableV1Config5 struct {
	value *V1Config5
	isSet bool
}

func (v NullableV1Config5) Get() *V1Config5 {
	return v.value
}

func (v *NullableV1Config5) Set(val *V1Config5) {
	v.value = val
	v.isSet = true
}

func (v NullableV1Config5) IsSet() bool {
	return v.isSet
}

func (v *NullableV1Config5) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1Config5(val *V1Config5) *NullableV1Config5 {
	return &NullableV1Config5{value: val, isSet: true}
}

func (v NullableV1Config5) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1Config5) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


