/*
public/portworx/platform/tenant/apiv1/tenant.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package platformclientv1

import (
	"encoding/json"
)

// checks if the V1Config2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1Config2{}

// V1Config2 Config clubs attributes represents in detail view for service account.
type V1Config2 struct {
	// Client id.
	ClientId *string `json:"clientId,omitempty"`
	// Client secret.
	ClientSecret *string `json:"clientSecret,omitempty"`
	// If sets to true then service account will be inactive, false by default.
	Disabled *bool `json:"disabled,omitempty"`
}

// NewV1Config2 instantiates a new V1Config2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1Config2() *V1Config2 {
	this := V1Config2{}
	return &this
}

// NewV1Config2WithDefaults instantiates a new V1Config2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1Config2WithDefaults() *V1Config2 {
	this := V1Config2{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *V1Config2) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Config2) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *V1Config2) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *V1Config2) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *V1Config2) GetClientSecret() string {
	if o == nil || IsNil(o.ClientSecret) {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Config2) GetClientSecretOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSecret) {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *V1Config2) HasClientSecret() bool {
	if o != nil && !IsNil(o.ClientSecret) {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *V1Config2) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *V1Config2) GetDisabled() bool {
	if o == nil || IsNil(o.Disabled) {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Config2) GetDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Disabled) {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *V1Config2) HasDisabled() bool {
	if o != nil && !IsNil(o.Disabled) {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *V1Config2) SetDisabled(v bool) {
	o.Disabled = &v
}

func (o V1Config2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1Config2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	if !IsNil(o.ClientSecret) {
		toSerialize["clientSecret"] = o.ClientSecret
	}
	if !IsNil(o.Disabled) {
		toSerialize["disabled"] = o.Disabled
	}
	return toSerialize, nil
}

type NullableV1Config2 struct {
	value *V1Config2
	isSet bool
}

func (v NullableV1Config2) Get() *V1Config2 {
	return v.value
}

func (v *NullableV1Config2) Set(val *V1Config2) {
	v.value = val
	v.isSet = true
}

func (v NullableV1Config2) IsSet() bool {
	return v.isSet
}

func (v *NullableV1Config2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1Config2(val *V1Config2) *NullableV1Config2 {
	return &NullableV1Config2{value: val, isSet: true}
}

func (v NullableV1Config2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1Config2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


