/*
public/portworx/platform/tenant/apiv1/tenant.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package platformclientv1

import (
	"encoding/json"
)

// checks if the AccountForWhichNameNeedsToBeUpdated type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountForWhichNameNeedsToBeUpdated{}

// AccountForWhichNameNeedsToBeUpdated struct for AccountForWhichNameNeedsToBeUpdated
type AccountForWhichNameNeedsToBeUpdated struct {
	Meta *MetadataOfTheAccount `json:"meta,omitempty"`
	Config *V1Config6 `json:"config,omitempty"`
}

// NewAccountForWhichNameNeedsToBeUpdated instantiates a new AccountForWhichNameNeedsToBeUpdated object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountForWhichNameNeedsToBeUpdated() *AccountForWhichNameNeedsToBeUpdated {
	this := AccountForWhichNameNeedsToBeUpdated{}
	return &this
}

// NewAccountForWhichNameNeedsToBeUpdatedWithDefaults instantiates a new AccountForWhichNameNeedsToBeUpdated object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountForWhichNameNeedsToBeUpdatedWithDefaults() *AccountForWhichNameNeedsToBeUpdated {
	this := AccountForWhichNameNeedsToBeUpdated{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *AccountForWhichNameNeedsToBeUpdated) GetMeta() MetadataOfTheAccount {
	if o == nil || IsNil(o.Meta) {
		var ret MetadataOfTheAccount
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountForWhichNameNeedsToBeUpdated) GetMetaOk() (*MetadataOfTheAccount, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *AccountForWhichNameNeedsToBeUpdated) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetadataOfTheAccount and assigns it to the Meta field.
func (o *AccountForWhichNameNeedsToBeUpdated) SetMeta(v MetadataOfTheAccount) {
	o.Meta = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *AccountForWhichNameNeedsToBeUpdated) GetConfig() V1Config6 {
	if o == nil || IsNil(o.Config) {
		var ret V1Config6
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountForWhichNameNeedsToBeUpdated) GetConfigOk() (*V1Config6, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *AccountForWhichNameNeedsToBeUpdated) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given V1Config6 and assigns it to the Config field.
func (o *AccountForWhichNameNeedsToBeUpdated) SetConfig(v V1Config6) {
	o.Config = &v
}

func (o AccountForWhichNameNeedsToBeUpdated) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountForWhichNameNeedsToBeUpdated) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	return toSerialize, nil
}

type NullableAccountForWhichNameNeedsToBeUpdated struct {
	value *AccountForWhichNameNeedsToBeUpdated
	isSet bool
}

func (v NullableAccountForWhichNameNeedsToBeUpdated) Get() *AccountForWhichNameNeedsToBeUpdated {
	return v.value
}

func (v *NullableAccountForWhichNameNeedsToBeUpdated) Set(val *AccountForWhichNameNeedsToBeUpdated) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountForWhichNameNeedsToBeUpdated) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountForWhichNameNeedsToBeUpdated) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountForWhichNameNeedsToBeUpdated(val *AccountForWhichNameNeedsToBeUpdated) *NullableAccountForWhichNameNeedsToBeUpdated {
	return &NullableAccountForWhichNameNeedsToBeUpdated{value: val, isSet: true}
}

func (v NullableAccountForWhichNameNeedsToBeUpdated) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountForWhichNameNeedsToBeUpdated) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


