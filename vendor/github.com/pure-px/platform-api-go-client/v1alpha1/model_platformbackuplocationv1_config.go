/*
public/portworx/platform/tenant/apiv1/tenant.proto

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: version not set
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package platformclientv1

import (
	"encoding/json"
)

// checks if the Platformbackuplocationv1Config type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Platformbackuplocationv1Config{}

// Platformbackuplocationv1Config struct for Platformbackuplocationv1Config
type Platformbackuplocationv1Config struct {
	Provider *V1Provider `json:"provider,omitempty"`
	CloudCredentialId *string `json:"cloudCredentialId,omitempty"`
	AzureStorage *V1AzureBlobStorage `json:"azureStorage,omitempty"`
	GoogleStorage *V1GoogleCloudStorage `json:"googleStorage,omitempty"`
	S3Storage *V1S3ObjectStorage `json:"s3Storage,omitempty"`
}

// NewPlatformbackuplocationv1Config instantiates a new Platformbackuplocationv1Config object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlatformbackuplocationv1Config() *Platformbackuplocationv1Config {
	this := Platformbackuplocationv1Config{}
	return &this
}

// NewPlatformbackuplocationv1ConfigWithDefaults instantiates a new Platformbackuplocationv1Config object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlatformbackuplocationv1ConfigWithDefaults() *Platformbackuplocationv1Config {
	this := Platformbackuplocationv1Config{}
	return &this
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *Platformbackuplocationv1Config) GetProvider() V1Provider {
	if o == nil || IsNil(o.Provider) {
		var ret V1Provider
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Platformbackuplocationv1Config) GetProviderOk() (*V1Provider, bool) {
	if o == nil || IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *Platformbackuplocationv1Config) HasProvider() bool {
	if o != nil && !IsNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given V1Provider and assigns it to the Provider field.
func (o *Platformbackuplocationv1Config) SetProvider(v V1Provider) {
	o.Provider = &v
}

// GetCloudCredentialId returns the CloudCredentialId field value if set, zero value otherwise.
func (o *Platformbackuplocationv1Config) GetCloudCredentialId() string {
	if o == nil || IsNil(o.CloudCredentialId) {
		var ret string
		return ret
	}
	return *o.CloudCredentialId
}

// GetCloudCredentialIdOk returns a tuple with the CloudCredentialId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Platformbackuplocationv1Config) GetCloudCredentialIdOk() (*string, bool) {
	if o == nil || IsNil(o.CloudCredentialId) {
		return nil, false
	}
	return o.CloudCredentialId, true
}

// HasCloudCredentialId returns a boolean if a field has been set.
func (o *Platformbackuplocationv1Config) HasCloudCredentialId() bool {
	if o != nil && !IsNil(o.CloudCredentialId) {
		return true
	}

	return false
}

// SetCloudCredentialId gets a reference to the given string and assigns it to the CloudCredentialId field.
func (o *Platformbackuplocationv1Config) SetCloudCredentialId(v string) {
	o.CloudCredentialId = &v
}

// GetAzureStorage returns the AzureStorage field value if set, zero value otherwise.
func (o *Platformbackuplocationv1Config) GetAzureStorage() V1AzureBlobStorage {
	if o == nil || IsNil(o.AzureStorage) {
		var ret V1AzureBlobStorage
		return ret
	}
	return *o.AzureStorage
}

// GetAzureStorageOk returns a tuple with the AzureStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Platformbackuplocationv1Config) GetAzureStorageOk() (*V1AzureBlobStorage, bool) {
	if o == nil || IsNil(o.AzureStorage) {
		return nil, false
	}
	return o.AzureStorage, true
}

// HasAzureStorage returns a boolean if a field has been set.
func (o *Platformbackuplocationv1Config) HasAzureStorage() bool {
	if o != nil && !IsNil(o.AzureStorage) {
		return true
	}

	return false
}

// SetAzureStorage gets a reference to the given V1AzureBlobStorage and assigns it to the AzureStorage field.
func (o *Platformbackuplocationv1Config) SetAzureStorage(v V1AzureBlobStorage) {
	o.AzureStorage = &v
}

// GetGoogleStorage returns the GoogleStorage field value if set, zero value otherwise.
func (o *Platformbackuplocationv1Config) GetGoogleStorage() V1GoogleCloudStorage {
	if o == nil || IsNil(o.GoogleStorage) {
		var ret V1GoogleCloudStorage
		return ret
	}
	return *o.GoogleStorage
}

// GetGoogleStorageOk returns a tuple with the GoogleStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Platformbackuplocationv1Config) GetGoogleStorageOk() (*V1GoogleCloudStorage, bool) {
	if o == nil || IsNil(o.GoogleStorage) {
		return nil, false
	}
	return o.GoogleStorage, true
}

// HasGoogleStorage returns a boolean if a field has been set.
func (o *Platformbackuplocationv1Config) HasGoogleStorage() bool {
	if o != nil && !IsNil(o.GoogleStorage) {
		return true
	}

	return false
}

// SetGoogleStorage gets a reference to the given V1GoogleCloudStorage and assigns it to the GoogleStorage field.
func (o *Platformbackuplocationv1Config) SetGoogleStorage(v V1GoogleCloudStorage) {
	o.GoogleStorage = &v
}

// GetS3Storage returns the S3Storage field value if set, zero value otherwise.
func (o *Platformbackuplocationv1Config) GetS3Storage() V1S3ObjectStorage {
	if o == nil || IsNil(o.S3Storage) {
		var ret V1S3ObjectStorage
		return ret
	}
	return *o.S3Storage
}

// GetS3StorageOk returns a tuple with the S3Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Platformbackuplocationv1Config) GetS3StorageOk() (*V1S3ObjectStorage, bool) {
	if o == nil || IsNil(o.S3Storage) {
		return nil, false
	}
	return o.S3Storage, true
}

// HasS3Storage returns a boolean if a field has been set.
func (o *Platformbackuplocationv1Config) HasS3Storage() bool {
	if o != nil && !IsNil(o.S3Storage) {
		return true
	}

	return false
}

// SetS3Storage gets a reference to the given V1S3ObjectStorage and assigns it to the S3Storage field.
func (o *Platformbackuplocationv1Config) SetS3Storage(v V1S3ObjectStorage) {
	o.S3Storage = &v
}

func (o Platformbackuplocationv1Config) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Platformbackuplocationv1Config) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !IsNil(o.CloudCredentialId) {
		toSerialize["cloudCredentialId"] = o.CloudCredentialId
	}
	if !IsNil(o.AzureStorage) {
		toSerialize["azureStorage"] = o.AzureStorage
	}
	if !IsNil(o.GoogleStorage) {
		toSerialize["googleStorage"] = o.GoogleStorage
	}
	if !IsNil(o.S3Storage) {
		toSerialize["s3Storage"] = o.S3Storage
	}
	return toSerialize, nil
}

type NullablePlatformbackuplocationv1Config struct {
	value *Platformbackuplocationv1Config
	isSet bool
}

func (v NullablePlatformbackuplocationv1Config) Get() *Platformbackuplocationv1Config {
	return v.value
}

func (v *NullablePlatformbackuplocationv1Config) Set(val *Platformbackuplocationv1Config) {
	v.value = val
	v.isSet = true
}

func (v NullablePlatformbackuplocationv1Config) IsSet() bool {
	return v.isSet
}

func (v *NullablePlatformbackuplocationv1Config) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlatformbackuplocationv1Config(val *Platformbackuplocationv1Config) *NullablePlatformbackuplocationv1Config {
	return &NullablePlatformbackuplocationv1Config{value: val, isSet: true}
}

func (v NullablePlatformbackuplocationv1Config) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlatformbackuplocationv1Config) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


