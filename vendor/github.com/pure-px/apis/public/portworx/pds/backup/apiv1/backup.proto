// Please use the following editor setup for this file:
// Tab size=2; Tabs as spaces; Clean up trailing whitepsace
//
// In vim add: au FileType proto setl sw=2 ts=2 expandtab list
//
// In vscode install vscode-proto3 extension and add this to your settings.json:
//    "[proto3]": {
//        "editor.tabSize": 2,
//        "editor.insertSpaces": true,
//        "editor.rulers": [80],
//        "editor.detectIndentation": true,
//        "files.trimTrailingWhitespace": true
//    }
//

syntax = "proto3";

package public.portworx.pds.backup.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "public/portworx/common/apiv1/meta.proto";
import "public/portworx/common/apiv1/pagination.proto";
import "public/portworx/common/apiv1/sort.proto";


option go_package = "github.com/pure-px/apis/public/portworx/pds/backup/apiv1;backup";
option java_multiple_files = true;
option java_package = "com.public.portworx.pds.backup.v1";
option java_outer_classname = "BackupProto";


// BackupService serves Backup resource APIs.
service BackupService {
  // GetBackup API returns the Backup resource.
  rpc GetBackup(GetBackupRequest)
      returns (Backup) {
    option(google.api.http) = {
      get: "/pds/v1/backups/{id}"
    };
  }

  // DeleteBackup API deletes the Backup resource.
  rpc DeleteBackup(DeleteBackupRequest)
      returns (google.protobuf.Empty) {
    option(google.api.http) = {
      delete: "/pds/v1/backups/{id}"
    };
  }

  // ListBackups API lists the Backup resources.
  rpc ListBackups(ListBackupsRequest)
      returns (ListBackupsResponse) {
    option(google.api.http) = {
      get: "/pds/v1/backups"
    };
  }
}


// Resource representing a Data Service Backup.
message Backup {
  // Metadata of the resource.
  public.portworx.common.v1.Meta meta = 1;

  // Desired configuration of the Backup.
  Config config = 2;

  // Current status of the Backup.
  Status status = 3;
}

// Desired configuration of the Backup.
message Config {
  // References to other objects.
  References references = 1;

  // BackupCapability of the deployment target when the snapshot was created.
  string backup_capability = 2;
}

// References to other resources.
message References {
  // UID of the image of the data service which will needs to be backup .
  string image_id = 1;
}

// Status of the Backup.
message Status {
  // CloudSnapID snapshot of the backup volume.
   string cloud_snap_id = 1;

  // Start time of the backup.
  google.protobuf.Timestamp start_time = 2;

  // Completion time of the backup.
  google.protobuf.Timestamp completion_time =3;

  // Enum for Phase of the Deployment.
  enum Phase {
    // Phase is unspecified.
    PHASE_UNSPECIFIED = 0;

    // Backup is Queued.
    QUEUED = 1;

    // Backup is completed.
    COMPLETED= 2;

    // Backup is failed.
    FAILED = 3;
  }

  // Phase of the Backup.
  Phase phase = 4;

  // ErrorCode if CompletionStatus is "Failed".
  string error_code = 5;

  // ErrorMessage associated with the ErrorCode.
  string error_message = 6;

  // FileSize of the CloudSnap image.
  int64 file_size  = 7;
}

// Request to get the Backup resource.
message GetBackupRequest {
  // UID of the Backup.
  string id = 1;
}

// Request to delete the Backup resource.
message DeleteBackupRequest {
  // UID of the Backup.
  string id = 1;
}

// Request to list the Backup resources.
message ListBackupsRequest {
  // Specifies a filter to list the Backups.
  oneof list_by {
    // Deployment ID for which the backups will be listed.
    string deployment_id = 1;

    // Cluster ID for which the backups will be listed.
    string target_cluster_id = 2;

    // Namespace ID for which the backups will be listed.
    string namespace_id = 3;

    // Backup Configuration ID for which the backups will be listed.
    string backup_config_id = 4;
  }

  // Pagination parameters for listing backups.
  public.portworx.common.v1.PageBasedPaginationRequest pagination = 5 [(google.api.field_behavior) = OPTIONAL];

  // Sorting details using which requested list of backups to be sorted.
  public.portworx.common.v1.Sort sort = 6;
}

// Response to list Backup request.
message ListBackupsResponse {
  // List of backup resources.
  repeated Backup backups = 1;

  // Pagination metadata for this response.
  // (-- api-linter: core::0132::response-unknown-fields=disabled
  //     aip.dev/not-precedent: We need this field for pagination. --)
  public.portworx.common.v1.PageBasedPaginationResponse pagination = 2;
}

