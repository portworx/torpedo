// Please use the following editor setup for this file:
// Tab size=2; Tabs as spaces; Clean up trailing whitepsace
//
// In vim add: au FileType proto setl sw=2 ts=2 expandtab list
//
// In vscode install vscode-proto3 extension and add this to your settings.json:
//    "[proto3]": {
//        "editor.tabSize": 2,
//        "editor.insertSpaces": true,
//        "editor.rulers": [80],
//        "editor.detectIndentation": true,
//        "files.trimTrailingWhitespace": true
//    }
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.3
// source: public/portworx/pds/dataservicedeploymenttopology/apiv1/dataservicedeploymenttopology.proto

package dataservicedeploymenttopology

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for Health of the data service topology.
type DataServiceDeploymentTopologyStatus_Health int32

const (
	// Health is unknown.
	DataServiceDeploymentTopologyStatus_UNKNOWN DataServiceDeploymentTopologyStatus_Health = 0
	// DataServiceDeployment Topology is Unavailable.
	DataServiceDeploymentTopologyStatus_UNAVAILABLE DataServiceDeploymentTopologyStatus_Health = 1
	// DataServiceDeployment Topology is Partially available.
	DataServiceDeploymentTopologyStatus_PARTIALLY_AVAILABLE DataServiceDeploymentTopologyStatus_Health = 2
	// DataServiceDeployment Topology is available.
	DataServiceDeploymentTopologyStatus_AVAILABLE DataServiceDeploymentTopologyStatus_Health = 3
)

// Enum value maps for DataServiceDeploymentTopologyStatus_Health.
var (
	DataServiceDeploymentTopologyStatus_Health_name = map[int32]string{
		0: "UNKNOWN",
		1: "UNAVAILABLE",
		2: "PARTIALLY_AVAILABLE",
		3: "AVAILABLE",
	}
	DataServiceDeploymentTopologyStatus_Health_value = map[string]int32{
		"UNKNOWN":             0,
		"UNAVAILABLE":         1,
		"PARTIALLY_AVAILABLE": 2,
		"AVAILABLE":           3,
	}
)

func (x DataServiceDeploymentTopologyStatus_Health) Enum() *DataServiceDeploymentTopologyStatus_Health {
	p := new(DataServiceDeploymentTopologyStatus_Health)
	*p = x
	return p
}

func (x DataServiceDeploymentTopologyStatus_Health) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataServiceDeploymentTopologyStatus_Health) Descriptor() protoreflect.EnumDescriptor {
	return file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_enumTypes[0].Descriptor()
}

func (DataServiceDeploymentTopologyStatus_Health) Type() protoreflect.EnumType {
	return &file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_enumTypes[0]
}

func (x DataServiceDeploymentTopologyStatus_Health) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataServiceDeploymentTopologyStatus_Health.Descriptor instead.
func (DataServiceDeploymentTopologyStatus_Health) EnumDescriptor() ([]byte, []int) {
	return file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_rawDescGZIP(), []int{2, 0}
}

// Enum for Phase of the DataServiceDeployment Topology.
type DataServiceDeploymentTopologyStatus_Phase int32

const (
	// Unspecified status.
	DataServiceDeploymentTopologyStatus_PHASE_UNSPECIFIED DataServiceDeploymentTopologyStatus_Phase = 0
	// In progress Status.
	DataServiceDeploymentTopologyStatus_IN_PROGRESS DataServiceDeploymentTopologyStatus_Phase = 1
	// Partial Success Status.
	DataServiceDeploymentTopologyStatus_PARTIAL_SUCCESS DataServiceDeploymentTopologyStatus_Phase = 2
	// Successful Status.
	DataServiceDeploymentTopologyStatus_SUCCESS DataServiceDeploymentTopologyStatus_Phase = 3
	// Delete is pending Status.
	DataServiceDeploymentTopologyStatus_DELETE_PENDING DataServiceDeploymentTopologyStatus_Phase = 4
	// Delete in progress Status.
	DataServiceDeploymentTopologyStatus_DELETING DataServiceDeploymentTopologyStatus_Phase = 5
	// Failed Status.
	DataServiceDeploymentTopologyStatus_FAILED DataServiceDeploymentTopologyStatus_Phase = 6
	// Timed Out Status.
	DataServiceDeploymentTopologyStatus_TIMED_OUT DataServiceDeploymentTopologyStatus_Phase = 7
)

// Enum value maps for DataServiceDeploymentTopologyStatus_Phase.
var (
	DataServiceDeploymentTopologyStatus_Phase_name = map[int32]string{
		0: "PHASE_UNSPECIFIED",
		1: "IN_PROGRESS",
		2: "PARTIAL_SUCCESS",
		3: "SUCCESS",
		4: "DELETE_PENDING",
		5: "DELETING",
		6: "FAILED",
		7: "TIMED_OUT",
	}
	DataServiceDeploymentTopologyStatus_Phase_value = map[string]int32{
		"PHASE_UNSPECIFIED": 0,
		"IN_PROGRESS":       1,
		"PARTIAL_SUCCESS":   2,
		"SUCCESS":           3,
		"DELETE_PENDING":    4,
		"DELETING":          5,
		"FAILED":            6,
		"TIMED_OUT":         7,
	}
)

func (x DataServiceDeploymentTopologyStatus_Phase) Enum() *DataServiceDeploymentTopologyStatus_Phase {
	p := new(DataServiceDeploymentTopologyStatus_Phase)
	*p = x
	return p
}

func (x DataServiceDeploymentTopologyStatus_Phase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataServiceDeploymentTopologyStatus_Phase) Descriptor() protoreflect.EnumDescriptor {
	return file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_enumTypes[1].Descriptor()
}

func (DataServiceDeploymentTopologyStatus_Phase) Type() protoreflect.EnumType {
	return &file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_enumTypes[1]
}

func (x DataServiceDeploymentTopologyStatus_Phase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataServiceDeploymentTopologyStatus_Phase.Descriptor instead.
func (DataServiceDeploymentTopologyStatus_Phase) EnumDescriptor() ([]byte, []int) {
	return file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_rawDescGZIP(), []int{2, 1}
}

// A DataService topology contains a number of nodes that have various attributes as a collective group.
// This is consumed in a DataService Deployment and the functionality is being controlled by the CRUD APIs of DataService Deployment.
type DataServiceDeploymentTopology struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the DataServiceDeployment topology.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the DataServiceDeployment topology.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Number of instances of data services.
	Instances int64 `protobuf:"varint,3,opt,name=instances,proto3" json:"instances,omitempty"`
	// Service type are standard Kubernetes service types such as clusterIP, NodePort, load balancers, etc.
	ServiceType string `protobuf:"bytes,4,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	// Service name is the name of service as provided by user.
	ServiceName string `protobuf:"bytes,5,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Source IP ranges to use for the deployed Load Balancer.
	LoadBalancerSourceRanges []string `protobuf:"bytes,6,rep,name=load_balancer_source_ranges,json=loadBalancerSourceRanges,proto3" json:"load_balancer_source_ranges,omitempty"`
	// Resource Settings Template.
	ResourceSettings *Template `protobuf:"bytes,7,opt,name=resource_settings,json=resourceSettings,proto3" json:"resource_settings,omitempty"`
	// Service Configurations Template.
	ServiceConfigurations *Template `protobuf:"bytes,8,opt,name=service_configurations,json=serviceConfigurations,proto3" json:"service_configurations,omitempty"`
	// Storage Options Template.
	StorageOptions *Template `protobuf:"bytes,9,opt,name=storage_options,json=storageOptions,proto3" json:"storage_options,omitempty"`
}

func (x *DataServiceDeploymentTopology) Reset() {
	*x = DataServiceDeploymentTopology{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataServiceDeploymentTopology) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataServiceDeploymentTopology) ProtoMessage() {}

func (x *DataServiceDeploymentTopology) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataServiceDeploymentTopology.ProtoReflect.Descriptor instead.
func (*DataServiceDeploymentTopology) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_rawDescGZIP(), []int{0}
}

func (x *DataServiceDeploymentTopology) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataServiceDeploymentTopology) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DataServiceDeploymentTopology) GetInstances() int64 {
	if x != nil {
		return x.Instances
	}
	return 0
}

func (x *DataServiceDeploymentTopology) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

func (x *DataServiceDeploymentTopology) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *DataServiceDeploymentTopology) GetLoadBalancerSourceRanges() []string {
	if x != nil {
		return x.LoadBalancerSourceRanges
	}
	return nil
}

func (x *DataServiceDeploymentTopology) GetResourceSettings() *Template {
	if x != nil {
		return x.ResourceSettings
	}
	return nil
}

func (x *DataServiceDeploymentTopology) GetServiceConfigurations() *Template {
	if x != nil {
		return x.ServiceConfigurations
	}
	return nil
}

func (x *DataServiceDeploymentTopology) GetStorageOptions() *Template {
	if x != nil {
		return x.StorageOptions
	}
	return nil
}

// Template.
type Template struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UID of the Template.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Resource version of the template.
	ResourceVersion string `protobuf:"bytes,2,opt,name=resource_version,json=resourceVersion,proto3" json:"resource_version,omitempty"`
	// Values required for template.
	Values map[string]string `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Template) Reset() {
	*x = Template{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Template) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Template) ProtoMessage() {}

func (x *Template) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Template.ProtoReflect.Descriptor instead.
func (*Template) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_rawDescGZIP(), []int{1}
}

func (x *Template) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Template) GetResourceVersion() string {
	if x != nil {
		return x.ResourceVersion
	}
	return ""
}

func (x *Template) GetValues() map[string]string {
	if x != nil {
		return x.Values
	}
	return nil
}

// Status of the data service topology. It is consumed in DataServiceDeployment.
type DataServiceDeploymentTopologyStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Health of the data service deployment topology.
	Health DataServiceDeploymentTopologyStatus_Health `protobuf:"varint,1,opt,name=health,proto3,enum=public.portworx.pds.dataservicedeploymenttopology.v1.DataServiceDeploymentTopologyStatus_Health" json:"health,omitempty"`
	// Phase of the DataServiceDeployment Topology.
	Phase DataServiceDeploymentTopologyStatus_Phase `protobuf:"varint,2,opt,name=phase,proto3,enum=public.portworx.pds.dataservicedeploymenttopology.v1.DataServiceDeploymentTopologyStatus_Phase" json:"phase,omitempty"`
	// Number of ready replicas reported by Target Cluster that are up and running.
	ReadyInstances int64 `protobuf:"varint,3,opt,name=ready_instances,json=readyInstances,proto3" json:"ready_instances,omitempty"`
	// Connection Information for the DataServiceDeployment Topology.
	ConnectionInfo *ConnectionInfo `protobuf:"bytes,4,opt,name=connection_info,json=connectionInfo,proto3" json:"connection_info,omitempty"`
}

func (x *DataServiceDeploymentTopologyStatus) Reset() {
	*x = DataServiceDeploymentTopologyStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataServiceDeploymentTopologyStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataServiceDeploymentTopologyStatus) ProtoMessage() {}

func (x *DataServiceDeploymentTopologyStatus) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataServiceDeploymentTopologyStatus.ProtoReflect.Descriptor instead.
func (*DataServiceDeploymentTopologyStatus) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_rawDescGZIP(), []int{2}
}

func (x *DataServiceDeploymentTopologyStatus) GetHealth() DataServiceDeploymentTopologyStatus_Health {
	if x != nil {
		return x.Health
	}
	return DataServiceDeploymentTopologyStatus_UNKNOWN
}

func (x *DataServiceDeploymentTopologyStatus) GetPhase() DataServiceDeploymentTopologyStatus_Phase {
	if x != nil {
		return x.Phase
	}
	return DataServiceDeploymentTopologyStatus_PHASE_UNSPECIFIED
}

func (x *DataServiceDeploymentTopologyStatus) GetReadyInstances() int64 {
	if x != nil {
		return x.ReadyInstances
	}
	return 0
}

func (x *DataServiceDeploymentTopologyStatus) GetConnectionInfo() *ConnectionInfo {
	if x != nil {
		return x.ConnectionInfo
	}
	return nil
}

// Connection Information for the DataServiceDeployment Topology.
type ConnectionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Ready instances.
	ReadyInstances []*InstanceInfo `protobuf:"bytes,1,rep,name=ready_instances,json=readyInstances,proto3" json:"ready_instances,omitempty"`
	// Instances that are not ready.
	NotReadyInstances []*InstanceInfo `protobuf:"bytes,2,rep,name=not_ready_instances,json=notReadyInstances,proto3" json:"not_ready_instances,omitempty"`
	// ConnectionDetails of data service deployment.
	ConnectionDetails *ConnectionDetails `protobuf:"bytes,3,opt,name=connection_details,json=connectionDetails,proto3" json:"connection_details,omitempty"`
	// Stores details about the cluster.
	ClusterDetails *structpb.Struct `protobuf:"bytes,4,opt,name=cluster_details,json=clusterDetails,proto3" json:"cluster_details,omitempty"`
}

func (x *ConnectionInfo) Reset() {
	*x = ConnectionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionInfo) ProtoMessage() {}

func (x *ConnectionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionInfo.ProtoReflect.Descriptor instead.
func (*ConnectionInfo) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_rawDescGZIP(), []int{3}
}

func (x *ConnectionInfo) GetReadyInstances() []*InstanceInfo {
	if x != nil {
		return x.ReadyInstances
	}
	return nil
}

func (x *ConnectionInfo) GetNotReadyInstances() []*InstanceInfo {
	if x != nil {
		return x.NotReadyInstances
	}
	return nil
}

func (x *ConnectionInfo) GetConnectionDetails() *ConnectionDetails {
	if x != nil {
		return x.ConnectionDetails
	}
	return nil
}

func (x *ConnectionInfo) GetClusterDetails() *structpb.Struct {
	if x != nil {
		return x.ClusterDetails
	}
	return nil
}

// InstanceInfo contains information about a instance.
type InstanceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The IP of a instance.
	Ip string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	// Name is the Hostname of a instance.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Node that hosts a particular instance.
	WorkerNode string `protobuf:"bytes,3,opt,name=worker_node,json=workerNode,proto3" json:"worker_node,omitempty"`
}

func (x *InstanceInfo) Reset() {
	*x = InstanceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstanceInfo) ProtoMessage() {}

func (x *InstanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstanceInfo.ProtoReflect.Descriptor instead.
func (*InstanceInfo) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_rawDescGZIP(), []int{4}
}

func (x *InstanceInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *InstanceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InstanceInfo) GetWorkerNode() string {
	if x != nil {
		return x.WorkerNode
	}
	return ""
}

// ConnectionDetails of data service.
type ConnectionDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Instances of the data service deployment.
	Instances []string `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty"`
	// Ports provided by the data service deployment (name and number).
	Ports map[string]int32 `protobuf:"bytes,2,rep,name=ports,proto3" json:"ports,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ConnectionDetails) Reset() {
	*x = ConnectionDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionDetails) ProtoMessage() {}

func (x *ConnectionDetails) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionDetails.ProtoReflect.Descriptor instead.
func (*ConnectionDetails) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_rawDescGZIP(), []int{5}
}

func (x *ConnectionDetails) GetInstances() []string {
	if x != nil {
		return x.Instances
	}
	return nil
}

func (x *ConnectionDetails) GetPorts() map[string]int32 {
	if x != nil {
		return x.Ports
	}
	return nil
}

var File_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto protoreflect.FileDescriptor

var file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_rawDesc = []byte{
	0x0a, 0x5b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72,
	0x78, 0x2f, 0x70, 0x64, 0x73, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x70, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x74,
	0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x34, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70,
	0x64, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79,
	0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xcf, 0x04, 0x0a, 0x1d, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0c, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x1b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x72, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x18, 0x6c,
	0x6f, 0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x6b, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74,
	0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x74, 0x6f,
	0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x75, 0x0a, 0x16, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f,
	0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x15, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x67, 0x0a, 0x0f, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f,
	0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0xe9, 0x01, 0x0a, 0x08, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x2e, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03,
	0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x62, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x4a, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77,
	0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x70,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x8f, 0x05, 0x0a, 0x23, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x78, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x60, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x06, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x12, 0x75, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x5f, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77,
	0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x70,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x50, 0x68, 0x61,
	0x73, 0x65, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x12, 0x6d, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64,
	0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x4e, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x41, 0x56,
	0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x41, 0x52,
	0x54, 0x49, 0x41, 0x4c, 0x4c, 0x59, 0x5f, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45,
	0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10,
	0x03, 0x22, 0x8e, 0x01, 0x0a, 0x05, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x50,
	0x48, 0x41, 0x53, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53,
	0x53, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x41, 0x52, 0x54, 0x49, 0x41, 0x4c, 0x5f, 0x53,
	0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f,
	0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x06, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x49, 0x4d, 0x45, 0x44, 0x5f, 0x4f, 0x55, 0x54,
	0x10, 0x07, 0x22, 0xab, 0x03, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x6b, 0x0a, 0x0f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x42,
	0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78,
	0x2e, 0x70, 0x64, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x12, 0x72, 0x0a, 0x13, 0x6e, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x42, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72,
	0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x70, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x11, 0x6e, 0x6f, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x76, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x47, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74,
	0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x74, 0x6f,
	0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x11, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x40,
	0x0a, 0x0f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x0e, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x53, 0x0a, 0x0c, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x6e,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0xd5, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x68, 0x0a, 0x05, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x52, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x50, 0x6f, 0x72, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0xcf, 0x01,
	0x0a, 0x38, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72,
	0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x74,
	0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2e, 0x76, 0x31, 0x42, 0x22, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x6d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x75, 0x72,
	0x65, 0x2d, 0x70, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x2f, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2f, 0x70, 0x64, 0x73, 0x2f, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x76,
	0x31, 0x3b, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_rawDescOnce sync.Once
	file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_rawDescData = file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_rawDesc
)

func file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_rawDescGZIP() []byte {
	file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_rawDescOnce.Do(func() {
		file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_rawDescData = protoimpl.X.CompressGZIP(file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_rawDescData)
	})
	return file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_rawDescData
}

var file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_goTypes = []interface{}{
	(DataServiceDeploymentTopologyStatus_Health)(0), // 0: public.portworx.pds.dataservicedeploymenttopology.v1.DataServiceDeploymentTopologyStatus.Health
	(DataServiceDeploymentTopologyStatus_Phase)(0),  // 1: public.portworx.pds.dataservicedeploymenttopology.v1.DataServiceDeploymentTopologyStatus.Phase
	(*DataServiceDeploymentTopology)(nil),           // 2: public.portworx.pds.dataservicedeploymenttopology.v1.DataServiceDeploymentTopology
	(*Template)(nil),                                // 3: public.portworx.pds.dataservicedeploymenttopology.v1.Template
	(*DataServiceDeploymentTopologyStatus)(nil),     // 4: public.portworx.pds.dataservicedeploymenttopology.v1.DataServiceDeploymentTopologyStatus
	(*ConnectionInfo)(nil),                          // 5: public.portworx.pds.dataservicedeploymenttopology.v1.ConnectionInfo
	(*InstanceInfo)(nil),                            // 6: public.portworx.pds.dataservicedeploymenttopology.v1.InstanceInfo
	(*ConnectionDetails)(nil),                       // 7: public.portworx.pds.dataservicedeploymenttopology.v1.ConnectionDetails
	nil,                                             // 8: public.portworx.pds.dataservicedeploymenttopology.v1.Template.ValuesEntry
	nil,                                             // 9: public.portworx.pds.dataservicedeploymenttopology.v1.ConnectionDetails.PortsEntry
	(*structpb.Struct)(nil),                         // 10: google.protobuf.Struct
}
var file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_depIdxs = []int32{
	3,  // 0: public.portworx.pds.dataservicedeploymenttopology.v1.DataServiceDeploymentTopology.resource_settings:type_name -> public.portworx.pds.dataservicedeploymenttopology.v1.Template
	3,  // 1: public.portworx.pds.dataservicedeploymenttopology.v1.DataServiceDeploymentTopology.service_configurations:type_name -> public.portworx.pds.dataservicedeploymenttopology.v1.Template
	3,  // 2: public.portworx.pds.dataservicedeploymenttopology.v1.DataServiceDeploymentTopology.storage_options:type_name -> public.portworx.pds.dataservicedeploymenttopology.v1.Template
	8,  // 3: public.portworx.pds.dataservicedeploymenttopology.v1.Template.values:type_name -> public.portworx.pds.dataservicedeploymenttopology.v1.Template.ValuesEntry
	0,  // 4: public.portworx.pds.dataservicedeploymenttopology.v1.DataServiceDeploymentTopologyStatus.health:type_name -> public.portworx.pds.dataservicedeploymenttopology.v1.DataServiceDeploymentTopologyStatus.Health
	1,  // 5: public.portworx.pds.dataservicedeploymenttopology.v1.DataServiceDeploymentTopologyStatus.phase:type_name -> public.portworx.pds.dataservicedeploymenttopology.v1.DataServiceDeploymentTopologyStatus.Phase
	5,  // 6: public.portworx.pds.dataservicedeploymenttopology.v1.DataServiceDeploymentTopologyStatus.connection_info:type_name -> public.portworx.pds.dataservicedeploymenttopology.v1.ConnectionInfo
	6,  // 7: public.portworx.pds.dataservicedeploymenttopology.v1.ConnectionInfo.ready_instances:type_name -> public.portworx.pds.dataservicedeploymenttopology.v1.InstanceInfo
	6,  // 8: public.portworx.pds.dataservicedeploymenttopology.v1.ConnectionInfo.not_ready_instances:type_name -> public.portworx.pds.dataservicedeploymenttopology.v1.InstanceInfo
	7,  // 9: public.portworx.pds.dataservicedeploymenttopology.v1.ConnectionInfo.connection_details:type_name -> public.portworx.pds.dataservicedeploymenttopology.v1.ConnectionDetails
	10, // 10: public.portworx.pds.dataservicedeploymenttopology.v1.ConnectionInfo.cluster_details:type_name -> google.protobuf.Struct
	9,  // 11: public.portworx.pds.dataservicedeploymenttopology.v1.ConnectionDetails.ports:type_name -> public.portworx.pds.dataservicedeploymenttopology.v1.ConnectionDetails.PortsEntry
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() {
	file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_init()
}
func file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_init() {
	if File_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataServiceDeploymentTopology); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Template); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataServiceDeploymentTopologyStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstanceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_goTypes,
		DependencyIndexes: file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_depIdxs,
		EnumInfos:         file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_enumTypes,
		MessageInfos:      file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_msgTypes,
	}.Build()
	File_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto = out.File
	file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_rawDesc = nil
	file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_goTypes = nil
	file_public_portworx_pds_dataservicedeploymenttopology_apiv1_dataservicedeploymenttopology_proto_depIdxs = nil
}
