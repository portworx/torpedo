// Please use the following editor setup for this file:
// Tab size=2; Tabs as spaces; Clean up trailing whitepsace
//
// In vim add: au FileType proto setl sw=2 ts=2 expandtab list
//
// In vscode install vscode-proto3 extension and add this to your settings.json:
//    "[proto3]": {
//        "editor.tabSize": 2,
//        "editor.insertSpaces": true,
//        "editor.rulers": [80],
//        "editor.detectIndentation": true,
//        "files.trimTrailingWhitespace": true
//    }
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.3
// source: public/portworx/pds/restore/apiv1/restore.proto

package restore

import (
	apiv1 "github.com/pure-px/apis/public/portworx/common/apiv1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for phase of the restore.
type Phase int32

const (
	// Phase is unspecified.
	Phase_PHASE_UNSPECIFIED Phase = 0
	// Restore is initializing.
	Phase_INITIALIZING Phase = 1
	// Restore has not yet started.
	Phase_PENDING Phase = 2
	// Waiting for the cloud snap restore to complete.
	Phase_RESTORING_CLOUDSNAP Phase = 3
	// PV and PVC resources are ready and we're waiting to get the data service manifest from the backup.
	Phase_RESTORING_DATA_SERVICE_CR Phase = 4
	// New data service has been created and we're waiting for the restore process to complete.
	Phase_RESTORING_DEPLOYMENT Phase = 5
	// Restore process in data service has succeeded and we're waiting until it becomes healthy in normal mode.
	Phase_DEPLOYMENT_ENTERING_NORMAL_MODE Phase = 6
	// Restore successful.
	Phase_SUCCESSFUL Phase = 7
	// Restore failed.
	Phase_FAILED Phase = 8
)

// Enum value maps for Phase.
var (
	Phase_name = map[int32]string{
		0: "PHASE_UNSPECIFIED",
		1: "INITIALIZING",
		2: "PENDING",
		3: "RESTORING_CLOUDSNAP",
		4: "RESTORING_DATA_SERVICE_CR",
		5: "RESTORING_DEPLOYMENT",
		6: "DEPLOYMENT_ENTERING_NORMAL_MODE",
		7: "SUCCESSFUL",
		8: "FAILED",
	}
	Phase_value = map[string]int32{
		"PHASE_UNSPECIFIED":               0,
		"INITIALIZING":                    1,
		"PENDING":                         2,
		"RESTORING_CLOUDSNAP":             3,
		"RESTORING_DATA_SERVICE_CR":       4,
		"RESTORING_DEPLOYMENT":            5,
		"DEPLOYMENT_ENTERING_NORMAL_MODE": 6,
		"SUCCESSFUL":                      7,
		"FAILED":                          8,
	}
)

func (x Phase) Enum() *Phase {
	p := new(Phase)
	*p = x
	return p
}

func (x Phase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Phase) Descriptor() protoreflect.EnumDescriptor {
	return file_public_portworx_pds_restore_apiv1_restore_proto_enumTypes[0].Descriptor()
}

func (Phase) Type() protoreflect.EnumType {
	return &file_public_portworx_pds_restore_apiv1_restore_proto_enumTypes[0]
}

func (x Phase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Phase.Descriptor instead.
func (Phase) EnumDescriptor() ([]byte, []int) {
	return file_public_portworx_pds_restore_apiv1_restore_proto_rawDescGZIP(), []int{0}
}

// Enums for error codes for restore on the target cluster.
type ErrorCode int32

const (
	// Error code not specified.
	ErrorCode_ERROR_CODE_UNSPECIFIED ErrorCode = 0
	// Cloud credentials specified in Restore spec were not found by Portworx.
	ErrorCode_PX_CLOUD_CREDENTIALS_NOT_FOUND ErrorCode = 1
	// Problem triggering the cloudsnap restore in PX.
	ErrorCode_PX_CLOUD_SNAP_RESTORE_TRIGGER_FAILED ErrorCode = 2
	// Problem with finishing the cloudsnap restore in PX.
	ErrorCode_PX_CLOUD_SNAP_RESTORE_FAILED ErrorCode = 3
	// Problem with getting the cloudsnap restore status from PX.
	ErrorCode_PX_GET_CLOUD_SNAP_STATUS_FAILED ErrorCode = 4
	// Problem with getting the volume from PX.
	ErrorCode_PX_GET_VOLUME_FAILED ErrorCode = 5
	// Problem with reading the data service manifest from the busybox pod.
	ErrorCode_READ_DATA_SERVICE_MANIFEST_FAILED ErrorCode = 6
	// Problem with unmarshalling the JSON with data service manifest.
	ErrorCode_UNMARSHAL_DATA_SERVICE_JSON ErrorCode = 7
	// Deployment name already used in the namespace.
	ErrorCode_DEPLOYMENT_NAME_ALREADY_EXIST ErrorCode = 8
	// Timeout while waiting for the BusyBox pod to enter the running state.
	ErrorCode_TIMEOUT_BUSYBOX_POD_RUNNING ErrorCode = 9
	// Busybox pod has failed.
	ErrorCode_BUSYBOX_POD_FAILED ErrorCode = 10
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:  "ERROR_CODE_UNSPECIFIED",
		1:  "PX_CLOUD_CREDENTIALS_NOT_FOUND",
		2:  "PX_CLOUD_SNAP_RESTORE_TRIGGER_FAILED",
		3:  "PX_CLOUD_SNAP_RESTORE_FAILED",
		4:  "PX_GET_CLOUD_SNAP_STATUS_FAILED",
		5:  "PX_GET_VOLUME_FAILED",
		6:  "READ_DATA_SERVICE_MANIFEST_FAILED",
		7:  "UNMARSHAL_DATA_SERVICE_JSON",
		8:  "DEPLOYMENT_NAME_ALREADY_EXIST",
		9:  "TIMEOUT_BUSYBOX_POD_RUNNING",
		10: "BUSYBOX_POD_FAILED",
	}
	ErrorCode_value = map[string]int32{
		"ERROR_CODE_UNSPECIFIED":               0,
		"PX_CLOUD_CREDENTIALS_NOT_FOUND":       1,
		"PX_CLOUD_SNAP_RESTORE_TRIGGER_FAILED": 2,
		"PX_CLOUD_SNAP_RESTORE_FAILED":         3,
		"PX_GET_CLOUD_SNAP_STATUS_FAILED":      4,
		"PX_GET_VOLUME_FAILED":                 5,
		"READ_DATA_SERVICE_MANIFEST_FAILED":    6,
		"UNMARSHAL_DATA_SERVICE_JSON":          7,
		"DEPLOYMENT_NAME_ALREADY_EXIST":        8,
		"TIMEOUT_BUSYBOX_POD_RUNNING":          9,
		"BUSYBOX_POD_FAILED":                   10,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_public_portworx_pds_restore_apiv1_restore_proto_enumTypes[1].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_public_portworx_pds_restore_apiv1_restore_proto_enumTypes[1]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_public_portworx_pds_restore_apiv1_restore_proto_rawDescGZIP(), []int{1}
}

// Request to create a restore.
type CreateRestoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UID of the namespace where restore will be created.
	// (-- api-linter: core::0133::request-unknown-fields=disabled
	//
	//	aip.dev/not-precedent: We really need this field because namespace is the parent of the restore. --)
	//
	// (-- api-linter: core::0133::request-required-fields=disabled
	//
	//	aip.dev/not-precedent: We really need this field to be required
	//	to support creation of the resource in the deployment context.. --)
	NamespaceId string `protobuf:"bytes,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	// UID of the project associated with the restore.
	// (-- api-linter: core::0133::request-unknown-fields=disabled
	//
	//	aip.dev/not-precedent: We need this field for to know the project with which the restore is associated with. --)
	//
	// (-- api-linter: core::0133::request-required-fields=disabled
	//
	//	aip.dev/not-precedent: We really need this field to be required
	//	to support creation of the resource in the deployment context.. --)
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// Restore resource.
	Restore *Restore `protobuf:"bytes,3,opt,name=restore,proto3" json:"restore,omitempty"`
}

func (x *CreateRestoreRequest) Reset() {
	*x = CreateRestoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRestoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRestoreRequest) ProtoMessage() {}

func (x *CreateRestoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRestoreRequest.ProtoReflect.Descriptor instead.
func (*CreateRestoreRequest) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_restore_apiv1_restore_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRestoreRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

func (x *CreateRestoreRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateRestoreRequest) GetRestore() *Restore {
	if x != nil {
		return x.Restore
	}
	return nil
}

// Request to get a restore.
type GetRestoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UID of the restore.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetRestoreRequest) Reset() {
	*x = GetRestoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRestoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRestoreRequest) ProtoMessage() {}

func (x *GetRestoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRestoreRequest.ProtoReflect.Descriptor instead.
func (*GetRestoreRequest) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_restore_apiv1_restore_proto_rawDescGZIP(), []int{1}
}

func (x *GetRestoreRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request to list the restores.
type ListRestoresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specifies a filter to list restores.
	//
	// Types that are assignable to ListBy:
	//
	//	*ListRestoresRequest_AccountId
	//	*ListRestoresRequest_TenantId
	//	*ListRestoresRequest_ProjectId
	//	*ListRestoresRequest_DeploymentId
	//	*ListRestoresRequest_BackupId
	ListBy isListRestoresRequest_ListBy `protobuf_oneof:"list_by"`
	// Sorting details using which requested list to be sorted.
	Sort *apiv1.Sort `protobuf:"bytes,6,opt,name=sort,proto3" json:"sort,omitempty"`
	// Pagination metadata for this response.
	Pagination *apiv1.PageBasedPaginationRequest `protobuf:"bytes,7,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListRestoresRequest) Reset() {
	*x = ListRestoresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRestoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRestoresRequest) ProtoMessage() {}

func (x *ListRestoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRestoresRequest.ProtoReflect.Descriptor instead.
func (*ListRestoresRequest) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_restore_apiv1_restore_proto_rawDescGZIP(), []int{2}
}

func (m *ListRestoresRequest) GetListBy() isListRestoresRequest_ListBy {
	if m != nil {
		return m.ListBy
	}
	return nil
}

func (x *ListRestoresRequest) GetAccountId() string {
	if x, ok := x.GetListBy().(*ListRestoresRequest_AccountId); ok {
		return x.AccountId
	}
	return ""
}

func (x *ListRestoresRequest) GetTenantId() string {
	if x, ok := x.GetListBy().(*ListRestoresRequest_TenantId); ok {
		return x.TenantId
	}
	return ""
}

func (x *ListRestoresRequest) GetProjectId() string {
	if x, ok := x.GetListBy().(*ListRestoresRequest_ProjectId); ok {
		return x.ProjectId
	}
	return ""
}

func (x *ListRestoresRequest) GetDeploymentId() string {
	if x, ok := x.GetListBy().(*ListRestoresRequest_DeploymentId); ok {
		return x.DeploymentId
	}
	return ""
}

func (x *ListRestoresRequest) GetBackupId() string {
	if x, ok := x.GetListBy().(*ListRestoresRequest_BackupId); ok {
		return x.BackupId
	}
	return ""
}

func (x *ListRestoresRequest) GetSort() *apiv1.Sort {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *ListRestoresRequest) GetPagination() *apiv1.PageBasedPaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type isListRestoresRequest_ListBy interface {
	isListRestoresRequest_ListBy()
}

type ListRestoresRequest_AccountId struct {
	// Account ID for which the restore will be listed.
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3,oneof"`
}

type ListRestoresRequest_TenantId struct {
	// Tenant ID for which the restore will be listed.
	TenantId string `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3,oneof"`
}

type ListRestoresRequest_ProjectId struct {
	// Project ID for which the restore will be listed.
	ProjectId string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3,oneof"`
}

type ListRestoresRequest_DeploymentId struct {
	// Deployment ID for which the restore will be listed.
	DeploymentId string `protobuf:"bytes,4,opt,name=deployment_id,json=deploymentId,proto3,oneof"`
}

type ListRestoresRequest_BackupId struct {
	// Backup ID for which the restore will be listed.
	BackupId string `protobuf:"bytes,5,opt,name=backup_id,json=backupId,proto3,oneof"`
}

func (*ListRestoresRequest_AccountId) isListRestoresRequest_ListBy() {}

func (*ListRestoresRequest_TenantId) isListRestoresRequest_ListBy() {}

func (*ListRestoresRequest_ProjectId) isListRestoresRequest_ListBy() {}

func (*ListRestoresRequest_DeploymentId) isListRestoresRequest_ListBy() {}

func (*ListRestoresRequest_BackupId) isListRestoresRequest_ListBy() {}

// ListRestoresResponse represents list restores response.
type ListRestoresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of restores.
	Restores []*Restore `protobuf:"bytes,1,rep,name=restores,proto3" json:"restores,omitempty"`
	// Pagination metadata for this response.
	// (-- api-linter: core::0132::response-unknown-fields=disabled
	//
	//	aip.dev/not-precedent: We need this field for pagination. --)
	Pagination *apiv1.PageBasedPaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListRestoresResponse) Reset() {
	*x = ListRestoresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRestoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRestoresResponse) ProtoMessage() {}

func (x *ListRestoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRestoresResponse.ProtoReflect.Descriptor instead.
func (*ListRestoresResponse) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_restore_apiv1_restore_proto_rawDescGZIP(), []int{3}
}

func (x *ListRestoresResponse) GetRestores() []*Restore {
	if x != nil {
		return x.Restores
	}
	return nil
}

func (x *ListRestoresResponse) GetPagination() *apiv1.PageBasedPaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// Request to delete a restore.
type DeleteRestoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UID of the Restore.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteRestoreRequest) Reset() {
	*x = DeleteRestoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRestoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRestoreRequest) ProtoMessage() {}

func (x *DeleteRestoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRestoreRequest.ProtoReflect.Descriptor instead.
func (*DeleteRestoreRequest) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_restore_apiv1_restore_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteRestoreRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request to recreate a restore.
type RecreateRestoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UID of the existing restore.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Name of the restore.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// UID of the project associated with the restore.
	ProjectId string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// UID of namespace where restore will be created.
	NamespaceId string `protobuf:"bytes,4,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
}

func (x *RecreateRestoreRequest) Reset() {
	*x = RecreateRestoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecreateRestoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecreateRestoreRequest) ProtoMessage() {}

func (x *RecreateRestoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecreateRestoreRequest.ProtoReflect.Descriptor instead.
func (*RecreateRestoreRequest) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_restore_apiv1_restore_proto_rawDescGZIP(), []int{5}
}

func (x *RecreateRestoreRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RecreateRestoreRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RecreateRestoreRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *RecreateRestoreRequest) GetNamespaceId() string {
	if x != nil {
		return x.NamespaceId
	}
	return ""
}

// Restore represents a data service restore.
type Restore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Metadata of the resource.
	Meta *apiv1.Meta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// Desired configuration of the Restore.
	Config *Config `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	// Current status of the Restore.
	Status *Status `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Restore) Reset() {
	*x = Restore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Restore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Restore) ProtoMessage() {}

func (x *Restore) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Restore.ProtoReflect.Descriptor instead.
func (*Restore) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_restore_apiv1_restore_proto_rawDescGZIP(), []int{6}
}

func (x *Restore) GetMeta() *apiv1.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Restore) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Restore) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

// Desired configuration of the restore.
type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// SourceReferences for the restore.
	SourceReferences *SourceReferences `protobuf:"bytes,1,opt,name=source_references,json=sourceReferences,proto3" json:"source_references,omitempty"`
	// Destination references for the restore.
	DestinationReferences *DestinationReferences `protobuf:"bytes,2,opt,name=destination_references,json=destinationReferences,proto3" json:"destination_references,omitempty"`
	// K8s resource name for restore, built from ["restore-" + name + short-id].
	CustomResourceName string `protobuf:"bytes,3,opt,name=custom_resource_name,json=customResourceName,proto3" json:"custom_resource_name,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_restore_apiv1_restore_proto_rawDescGZIP(), []int{7}
}

func (x *Config) GetSourceReferences() *SourceReferences {
	if x != nil {
		return x.SourceReferences
	}
	return nil
}

func (x *Config) GetDestinationReferences() *DestinationReferences {
	if x != nil {
		return x.DestinationReferences
	}
	return nil
}

func (x *Config) GetCustomResourceName() string {
	if x != nil {
		return x.CustomResourceName
	}
	return ""
}

// SourceReferences for the restore.
type SourceReferences struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UID of the deployment which was backed up.
	DeploymentId string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	// UID of the backup.
	BackupId string `protobuf:"bytes,2,opt,name=backup_id,json=backupId,proto3" json:"backup_id,omitempty"`
	// UID of the backup location.
	BackupLocationId string `protobuf:"bytes,3,opt,name=backup_location_id,json=backupLocationId,proto3" json:"backup_location_id,omitempty"`
	// UID of the cloud snapshot of the backup volume used for restore.
	CloudsnapId string `protobuf:"bytes,4,opt,name=cloudsnap_id,json=cloudsnapId,proto3" json:"cloudsnap_id,omitempty"`
}

func (x *SourceReferences) Reset() {
	*x = SourceReferences{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SourceReferences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceReferences) ProtoMessage() {}

func (x *SourceReferences) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceReferences.ProtoReflect.Descriptor instead.
func (*SourceReferences) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_restore_apiv1_restore_proto_rawDescGZIP(), []int{8}
}

func (x *SourceReferences) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *SourceReferences) GetBackupId() string {
	if x != nil {
		return x.BackupId
	}
	return ""
}

func (x *SourceReferences) GetBackupLocationId() string {
	if x != nil {
		return x.BackupLocationId
	}
	return ""
}

func (x *SourceReferences) GetCloudsnapId() string {
	if x != nil {
		return x.CloudsnapId
	}
	return ""
}

// Destination references for the restore.
type DestinationReferences struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UID of the target cluster where restore will be created.
	TargetClusterId string `protobuf:"bytes,1,opt,name=target_cluster_id,json=targetClusterId,proto3" json:"target_cluster_id,omitempty"`
	// UID of the deployment created by the restore.
	DeploymentId string `protobuf:"bytes,2,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	// UID of the project.
	ProjectId string `protobuf:"bytes,3,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *DestinationReferences) Reset() {
	*x = DestinationReferences{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestinationReferences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestinationReferences) ProtoMessage() {}

func (x *DestinationReferences) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestinationReferences.ProtoReflect.Descriptor instead.
func (*DestinationReferences) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_restore_apiv1_restore_proto_rawDescGZIP(), []int{9}
}

func (x *DestinationReferences) GetTargetClusterId() string {
	if x != nil {
		return x.TargetClusterId
	}
	return ""
}

func (x *DestinationReferences) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *DestinationReferences) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

// Status of the restore.
type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// (-- api-linter: core::0142::time-field-names=disabled
	//
	//	aip.dev/not-precedent: We need to do this because we need different name for the field. --)
	//
	// Time when restore was started.
	StartedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// (-- api-linter: core::0142::time-field-names=disabled
	//
	//	aip.dev/not-precedent: We need to do this because we need different name for the field. --)
	//
	// Time when restore was completed.
	CompletedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	// Error code of the restore from Target Cluster.
	ErrorCode ErrorCode `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3,enum=public.portworx.pds.restore.v1.ErrorCode" json:"error_code,omitempty"`
	// Error message is description of the error in restore.
	ErrorMessage string `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Phase of the restore.
	Phase Phase `protobuf:"varint,5,opt,name=phase,proto3,enum=public.portworx.pds.restore.v1.Phase" json:"phase,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_restore_apiv1_restore_proto_rawDescGZIP(), []int{10}
}

func (x *Status) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *Status) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *Status) GetErrorCode() ErrorCode {
	if x != nil {
		return x.ErrorCode
	}
	return ErrorCode_ERROR_CODE_UNSPECIFIED
}

func (x *Status) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *Status) GetPhase() Phase {
	if x != nil {
		return x.Phase
	}
	return Phase_PHASE_UNSPECIFIED
}

// RestorabilityMatrix represents the compatibility matrix for restore.
type RestorabilityMatrix struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Restore compatibility conditions for each dataservice.
	Conditions map[string]*RestoreCompatibilityConditionList `protobuf:"bytes,1,rep,name=conditions,proto3" json:"conditions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RestorabilityMatrix) Reset() {
	*x = RestorabilityMatrix{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestorabilityMatrix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestorabilityMatrix) ProtoMessage() {}

func (x *RestorabilityMatrix) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestorabilityMatrix.ProtoReflect.Descriptor instead.
func (*RestorabilityMatrix) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_restore_apiv1_restore_proto_rawDescGZIP(), []int{11}
}

func (x *RestorabilityMatrix) GetConditions() map[string]*RestoreCompatibilityConditionList {
	if x != nil {
		return x.Conditions
	}
	return nil
}

// List of restore compatibility conditions.
type RestoreCompatibilityConditionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of restore compatibility conditions.
	Conditions []*RestoreCompatibilityCondition `protobuf:"bytes,1,rep,name=conditions,proto3" json:"conditions,omitempty"`
}

func (x *RestoreCompatibilityConditionList) Reset() {
	*x = RestoreCompatibilityConditionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreCompatibilityConditionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreCompatibilityConditionList) ProtoMessage() {}

func (x *RestoreCompatibilityConditionList) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreCompatibilityConditionList.ProtoReflect.Descriptor instead.
func (*RestoreCompatibilityConditionList) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_restore_apiv1_restore_proto_rawDescGZIP(), []int{12}
}

func (x *RestoreCompatibilityConditionList) GetConditions() []*RestoreCompatibilityCondition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

// Restore compatibility condition.
type RestoreCompatibilityCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Restore compatibility condition for backup.
	// key represents backup capability and value represents the version of the capability.
	// e.g. {"backup": "v2"}
	Backup map[string]string `protobuf:"bytes,1,rep,name=backup,proto3" json:"backup,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Restore compatibility condition for image.
	// key represents image capability and value represents the version of the capability.
	// e.g. {"pds_restore": "v1"}
	Image map[string]string `protobuf:"bytes,2,rep,name=image,proto3" json:"image,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RestoreCompatibilityCondition) Reset() {
	*x = RestoreCompatibilityCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestoreCompatibilityCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreCompatibilityCondition) ProtoMessage() {}

func (x *RestoreCompatibilityCondition) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreCompatibilityCondition.ProtoReflect.Descriptor instead.
func (*RestoreCompatibilityCondition) Descriptor() ([]byte, []int) {
	return file_public_portworx_pds_restore_apiv1_restore_proto_rawDescGZIP(), []int{13}
}

func (x *RestoreCompatibilityCondition) GetBackup() map[string]string {
	if x != nil {
		return x.Backup
	}
	return nil
}

func (x *RestoreCompatibilityCondition) GetImage() map[string]string {
	if x != nil {
		return x.Image
	}
	return nil
}

var File_public_portworx_pds_restore_apiv1_restore_proto protoreflect.FileDescriptor

var file_public_portworx_pds_restore_apiv1_restore_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72,
	0x78, 0x2f, 0x70, 0x64, 0x73, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f,
	0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f,
	0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x61, 0x70, 0x69, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x70, 0x6f, 0x72,
	0x74, 0x77, 0x6f, 0x72, 0x78, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69,
	0x76, 0x31, 0x2f, 0x73, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xaa, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70,
	0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x07, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0x23, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xd3, 0x02, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0d, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x33, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x55, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x64, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x62, 0x79, 0x22, 0xb3, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x43, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74,
	0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x64, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x26, 0x0a,
	0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0xbe, 0x01, 0x0a, 0x07, 0x52,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f,
	0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64,
	0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3e, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64,
	0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8c, 0x02, 0x0a, 0x06,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x5d, 0x0a, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x30, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77,
	0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x52, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x6c, 0x0a, 0x16, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70,
	0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x15, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x14, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x10, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x28, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x09, 0x62, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x12, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x10, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x73, 0x6e, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0b, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x73, 0x6e, 0x61, 0x70, 0x49, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x12, 0x2f, 0x0a, 0x11, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03,
	0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0c, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22,
	0xae, 0x02, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x48, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x72,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x25, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74,
	0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65,
	0x22, 0xfd, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x12, 0x63, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70,
	0x64, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x74, 0x72, 0x69,
	0x78, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x80, 0x01,
	0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x57, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x41, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74,
	0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x74, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x82, 0x01, 0x0a, 0x21, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x74, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73,
	0x2e, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xd7, 0x02, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x61, 0x0a, 0x06, 0x62, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x72, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x5e, 0x0a, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x48, 0x2e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e,
	0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x74, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x38, 0x0a, 0x0a, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a,
	0xd0, 0x01, 0x0a, 0x05, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x48, 0x41,
	0x53, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x49, 0x4e, 0x47,
	0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12,
	0x17, 0x0a, 0x13, 0x52, 0x45, 0x53, 0x54, 0x4f, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x4c, 0x4f,
	0x55, 0x44, 0x53, 0x4e, 0x41, 0x50, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x53, 0x54,
	0x4f, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49,
	0x43, 0x45, 0x5f, 0x43, 0x52, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x53, 0x54, 0x4f,
	0x52, 0x49, 0x4e, 0x47, 0x5f, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x10,
	0x05, 0x12, 0x23, 0x0a, 0x1f, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x45, 0x4e, 0x54, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x5f,
	0x4d, 0x4f, 0x44, 0x45, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x46, 0x55, 0x4c, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x08, 0x2a, 0xfa, 0x02, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x16, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e,
	0x50, 0x58, 0x5f, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x45, 0x4e, 0x54,
	0x49, 0x41, 0x4c, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01,
	0x12, 0x28, 0x0a, 0x24, 0x50, 0x58, 0x5f, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x5f, 0x53, 0x4e, 0x41,
	0x50, 0x5f, 0x52, 0x45, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x5f, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45,
	0x52, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x58,
	0x5f, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x5f, 0x53, 0x4e, 0x41, 0x50, 0x5f, 0x52, 0x45, 0x53, 0x54,
	0x4f, 0x52, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x23, 0x0a, 0x1f,
	0x50, 0x58, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x5f, 0x53, 0x4e, 0x41,
	0x50, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x04, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x58, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x56, 0x4f, 0x4c, 0x55,
	0x4d, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x12, 0x25, 0x0a, 0x21, 0x52,
	0x45, 0x41, 0x44, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45,
	0x5f, 0x4d, 0x41, 0x4e, 0x49, 0x46, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x06, 0x12, 0x1f, 0x0a, 0x1b, 0x55, 0x4e, 0x4d, 0x41, 0x52, 0x53, 0x48, 0x41, 0x4c, 0x5f,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x4a, 0x53, 0x4f,
	0x4e, 0x10, 0x07, 0x12, 0x21, 0x0a, 0x1d, 0x44, 0x45, 0x50, 0x4c, 0x4f, 0x59, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45,
	0x58, 0x49, 0x53, 0x54, 0x10, 0x08, 0x12, 0x1f, 0x0a, 0x1b, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55,
	0x54, 0x5f, 0x42, 0x55, 0x53, 0x59, 0x42, 0x4f, 0x58, 0x5f, 0x50, 0x4f, 0x44, 0x5f, 0x52, 0x55,
	0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x09, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x55, 0x53, 0x59, 0x42,
	0x4f, 0x58, 0x5f, 0x50, 0x4f, 0x44, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x0a, 0x32,
	0x8c, 0x07, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0xa5, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x12, 0x34, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f,
	0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73,
	0x2e, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x3a, 0x01, 0x2a, 0x22, 0x2a,
	0x2f, 0x70, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x87, 0x01, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x31, 0x2e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e,
	0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70,
	0x64, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f,
	0x70, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x93, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x33, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70,
	0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73,
	0x2e, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x70, 0x64, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x7c, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x34, 0x2e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64,
	0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x17, 0x2a, 0x15, 0x2f, 0x70, 0x64, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x9d, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x36, 0x2e, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70,
	0x64, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f,
	0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0x29, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x70, 0x64, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a,
	0x72, 0x65, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x74,
	0x72, 0x69, 0x78, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x33, 0x2e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64,
	0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78,
	0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x70, 0x64, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x3a, 0x72, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x42, 0x77,
	0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72,
	0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x64, 0x73, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x70, 0x75, 0x72, 0x65, 0x2d, 0x70, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2f, 0x70, 0x64,
	0x73, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x3b,
	0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_public_portworx_pds_restore_apiv1_restore_proto_rawDescOnce sync.Once
	file_public_portworx_pds_restore_apiv1_restore_proto_rawDescData = file_public_portworx_pds_restore_apiv1_restore_proto_rawDesc
)

func file_public_portworx_pds_restore_apiv1_restore_proto_rawDescGZIP() []byte {
	file_public_portworx_pds_restore_apiv1_restore_proto_rawDescOnce.Do(func() {
		file_public_portworx_pds_restore_apiv1_restore_proto_rawDescData = protoimpl.X.CompressGZIP(file_public_portworx_pds_restore_apiv1_restore_proto_rawDescData)
	})
	return file_public_portworx_pds_restore_apiv1_restore_proto_rawDescData
}

var file_public_portworx_pds_restore_apiv1_restore_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_public_portworx_pds_restore_apiv1_restore_proto_goTypes = []interface{}{
	(Phase)(0),                                // 0: public.portworx.pds.restore.v1.Phase
	(ErrorCode)(0),                            // 1: public.portworx.pds.restore.v1.ErrorCode
	(*CreateRestoreRequest)(nil),              // 2: public.portworx.pds.restore.v1.CreateRestoreRequest
	(*GetRestoreRequest)(nil),                 // 3: public.portworx.pds.restore.v1.GetRestoreRequest
	(*ListRestoresRequest)(nil),               // 4: public.portworx.pds.restore.v1.ListRestoresRequest
	(*ListRestoresResponse)(nil),              // 5: public.portworx.pds.restore.v1.ListRestoresResponse
	(*DeleteRestoreRequest)(nil),              // 6: public.portworx.pds.restore.v1.DeleteRestoreRequest
	(*RecreateRestoreRequest)(nil),            // 7: public.portworx.pds.restore.v1.RecreateRestoreRequest
	(*Restore)(nil),                           // 8: public.portworx.pds.restore.v1.Restore
	(*Config)(nil),                            // 9: public.portworx.pds.restore.v1.Config
	(*SourceReferences)(nil),                  // 10: public.portworx.pds.restore.v1.SourceReferences
	(*DestinationReferences)(nil),             // 11: public.portworx.pds.restore.v1.DestinationReferences
	(*Status)(nil),                            // 12: public.portworx.pds.restore.v1.Status
	(*RestorabilityMatrix)(nil),               // 13: public.portworx.pds.restore.v1.RestorabilityMatrix
	(*RestoreCompatibilityConditionList)(nil), // 14: public.portworx.pds.restore.v1.RestoreCompatibilityConditionList
	(*RestoreCompatibilityCondition)(nil),     // 15: public.portworx.pds.restore.v1.RestoreCompatibilityCondition
	nil,                                       // 16: public.portworx.pds.restore.v1.RestorabilityMatrix.ConditionsEntry
	nil,                                       // 17: public.portworx.pds.restore.v1.RestoreCompatibilityCondition.BackupEntry
	nil,                                       // 18: public.portworx.pds.restore.v1.RestoreCompatibilityCondition.ImageEntry
	(*apiv1.Sort)(nil),                        // 19: public.portworx.common.v1.Sort
	(*apiv1.PageBasedPaginationRequest)(nil),  // 20: public.portworx.common.v1.PageBasedPaginationRequest
	(*apiv1.PageBasedPaginationResponse)(nil), // 21: public.portworx.common.v1.PageBasedPaginationResponse
	(*apiv1.Meta)(nil),                        // 22: public.portworx.common.v1.Meta
	(*timestamppb.Timestamp)(nil),             // 23: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                     // 24: google.protobuf.Empty
}
var file_public_portworx_pds_restore_apiv1_restore_proto_depIdxs = []int32{
	8,  // 0: public.portworx.pds.restore.v1.CreateRestoreRequest.restore:type_name -> public.portworx.pds.restore.v1.Restore
	19, // 1: public.portworx.pds.restore.v1.ListRestoresRequest.sort:type_name -> public.portworx.common.v1.Sort
	20, // 2: public.portworx.pds.restore.v1.ListRestoresRequest.pagination:type_name -> public.portworx.common.v1.PageBasedPaginationRequest
	8,  // 3: public.portworx.pds.restore.v1.ListRestoresResponse.restores:type_name -> public.portworx.pds.restore.v1.Restore
	21, // 4: public.portworx.pds.restore.v1.ListRestoresResponse.pagination:type_name -> public.portworx.common.v1.PageBasedPaginationResponse
	22, // 5: public.portworx.pds.restore.v1.Restore.meta:type_name -> public.portworx.common.v1.Meta
	9,  // 6: public.portworx.pds.restore.v1.Restore.config:type_name -> public.portworx.pds.restore.v1.Config
	12, // 7: public.portworx.pds.restore.v1.Restore.status:type_name -> public.portworx.pds.restore.v1.Status
	10, // 8: public.portworx.pds.restore.v1.Config.source_references:type_name -> public.portworx.pds.restore.v1.SourceReferences
	11, // 9: public.portworx.pds.restore.v1.Config.destination_references:type_name -> public.portworx.pds.restore.v1.DestinationReferences
	23, // 10: public.portworx.pds.restore.v1.Status.started_at:type_name -> google.protobuf.Timestamp
	23, // 11: public.portworx.pds.restore.v1.Status.completed_at:type_name -> google.protobuf.Timestamp
	1,  // 12: public.portworx.pds.restore.v1.Status.error_code:type_name -> public.portworx.pds.restore.v1.ErrorCode
	0,  // 13: public.portworx.pds.restore.v1.Status.phase:type_name -> public.portworx.pds.restore.v1.Phase
	16, // 14: public.portworx.pds.restore.v1.RestorabilityMatrix.conditions:type_name -> public.portworx.pds.restore.v1.RestorabilityMatrix.ConditionsEntry
	15, // 15: public.portworx.pds.restore.v1.RestoreCompatibilityConditionList.conditions:type_name -> public.portworx.pds.restore.v1.RestoreCompatibilityCondition
	17, // 16: public.portworx.pds.restore.v1.RestoreCompatibilityCondition.backup:type_name -> public.portworx.pds.restore.v1.RestoreCompatibilityCondition.BackupEntry
	18, // 17: public.portworx.pds.restore.v1.RestoreCompatibilityCondition.image:type_name -> public.portworx.pds.restore.v1.RestoreCompatibilityCondition.ImageEntry
	14, // 18: public.portworx.pds.restore.v1.RestorabilityMatrix.ConditionsEntry.value:type_name -> public.portworx.pds.restore.v1.RestoreCompatibilityConditionList
	2,  // 19: public.portworx.pds.restore.v1.RestoreService.CreateRestore:input_type -> public.portworx.pds.restore.v1.CreateRestoreRequest
	3,  // 20: public.portworx.pds.restore.v1.RestoreService.GetRestore:input_type -> public.portworx.pds.restore.v1.GetRestoreRequest
	4,  // 21: public.portworx.pds.restore.v1.RestoreService.ListRestores:input_type -> public.portworx.pds.restore.v1.ListRestoresRequest
	6,  // 22: public.portworx.pds.restore.v1.RestoreService.DeleteRestore:input_type -> public.portworx.pds.restore.v1.DeleteRestoreRequest
	7,  // 23: public.portworx.pds.restore.v1.RestoreService.RecreateRestore:input_type -> public.portworx.pds.restore.v1.RecreateRestoreRequest
	24, // 24: public.portworx.pds.restore.v1.RestoreService.GetRestorabilityMatrix:input_type -> google.protobuf.Empty
	8,  // 25: public.portworx.pds.restore.v1.RestoreService.CreateRestore:output_type -> public.portworx.pds.restore.v1.Restore
	8,  // 26: public.portworx.pds.restore.v1.RestoreService.GetRestore:output_type -> public.portworx.pds.restore.v1.Restore
	5,  // 27: public.portworx.pds.restore.v1.RestoreService.ListRestores:output_type -> public.portworx.pds.restore.v1.ListRestoresResponse
	24, // 28: public.portworx.pds.restore.v1.RestoreService.DeleteRestore:output_type -> google.protobuf.Empty
	8,  // 29: public.portworx.pds.restore.v1.RestoreService.RecreateRestore:output_type -> public.portworx.pds.restore.v1.Restore
	13, // 30: public.portworx.pds.restore.v1.RestoreService.GetRestorabilityMatrix:output_type -> public.portworx.pds.restore.v1.RestorabilityMatrix
	25, // [25:31] is the sub-list for method output_type
	19, // [19:25] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_public_portworx_pds_restore_apiv1_restore_proto_init() }
func file_public_portworx_pds_restore_apiv1_restore_proto_init() {
	if File_public_portworx_pds_restore_apiv1_restore_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRestoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRestoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRestoresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRestoresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRestoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecreateRestoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Restore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SourceReferences); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestinationReferences); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestorabilityMatrix); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreCompatibilityConditionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestoreCompatibilityCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ListRestoresRequest_AccountId)(nil),
		(*ListRestoresRequest_TenantId)(nil),
		(*ListRestoresRequest_ProjectId)(nil),
		(*ListRestoresRequest_DeploymentId)(nil),
		(*ListRestoresRequest_BackupId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_public_portworx_pds_restore_apiv1_restore_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_public_portworx_pds_restore_apiv1_restore_proto_goTypes,
		DependencyIndexes: file_public_portworx_pds_restore_apiv1_restore_proto_depIdxs,
		EnumInfos:         file_public_portworx_pds_restore_apiv1_restore_proto_enumTypes,
		MessageInfos:      file_public_portworx_pds_restore_apiv1_restore_proto_msgTypes,
	}.Build()
	File_public_portworx_pds_restore_apiv1_restore_proto = out.File
	file_public_portworx_pds_restore_apiv1_restore_proto_rawDesc = nil
	file_public_portworx_pds_restore_apiv1_restore_proto_goTypes = nil
	file_public_portworx_pds_restore_apiv1_restore_proto_depIdxs = nil
}
