// Please use the following editor setup for this file:
// Tab size=2; Tabs as spaces; Clean up trailing whitepsace
//
// In vim add: au FileType proto setl sw=2 ts=2 expandtab list
//
// In vscode install vscode-proto3 extension and add this to your settings.json:
//    "[proto3]": {
//        "editor.tabSize": 2,
//        "editor.insertSpaces": true,
//        "editor.rulers": [80],
//        "editor.detectIndentation": true,
//        "files.trimTrailingWhitespace": true
//    }
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.1
// source: public/portworx/platform/onboard/apiv1/onboard.proto

package onboard

import (
	apiv1 "github.com/pure-px/apis/public/portworx/common/apiv1"
	apiv11 "github.com/pure-px/apis/public/portworx/platform/account/apiv1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateRegistrationRequest to create account.
type CreateAccountRegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// account to be created and onboarded
	AccountRegistration *AccountRegistration `protobuf:"bytes,1,opt,name=account_registration,json=accountRegistration,proto3" json:"account_registration,omitempty"`
}

func (x *CreateAccountRegistrationRequest) Reset() {
	*x = CreateAccountRegistrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_platform_onboard_apiv1_onboard_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccountRegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccountRegistrationRequest) ProtoMessage() {}

func (x *CreateAccountRegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_platform_onboard_apiv1_onboard_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccountRegistrationRequest.ProtoReflect.Descriptor instead.
func (*CreateAccountRegistrationRequest) Descriptor() ([]byte, []int) {
	return file_public_portworx_platform_onboard_apiv1_onboard_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAccountRegistrationRequest) GetAccountRegistration() *AccountRegistration {
	if x != nil {
		return x.AccountRegistration
	}
	return nil
}

// UpdateRegistrationRequest currently supports only name update.
type UpdateAccountRegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// account for which subscription info needs to be updated
	AccountRegistration *AccountRegistration `protobuf:"bytes,1,opt,name=account_registration,json=accountRegistration,proto3" json:"account_registration,omitempty"`
}

func (x *UpdateAccountRegistrationRequest) Reset() {
	*x = UpdateAccountRegistrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_platform_onboard_apiv1_onboard_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAccountRegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAccountRegistrationRequest) ProtoMessage() {}

func (x *UpdateAccountRegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_platform_onboard_apiv1_onboard_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAccountRegistrationRequest.ProtoReflect.Descriptor instead.
func (*UpdateAccountRegistrationRequest) Descriptor() ([]byte, []int) {
	return file_public_portworx_platform_onboard_apiv1_onboard_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateAccountRegistrationRequest) GetAccountRegistration() *AccountRegistration {
	if x != nil {
		return x.AccountRegistration
	}
	return nil
}

// AccountRegistration has all details about the acccount and its subscriptions
type AccountRegistration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Metadata of the account.
	Meta *apiv1.Meta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// Configuration info used for registering the account
	Config *AccountConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *AccountRegistration) Reset() {
	*x = AccountRegistration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_platform_onboard_apiv1_onboard_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountRegistration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountRegistration) ProtoMessage() {}

func (x *AccountRegistration) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_platform_onboard_apiv1_onboard_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountRegistration.ProtoReflect.Descriptor instead.
func (*AccountRegistration) Descriptor() ([]byte, []int) {
	return file_public_portworx_platform_onboard_apiv1_onboard_proto_rawDescGZIP(), []int{2}
}

func (x *AccountRegistration) GetMeta() *apiv1.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *AccountRegistration) GetConfig() *AccountConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// Account Configuration Info used for Registration
type AccountConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Desired configuration of the Account
	AccountConfig *apiv11.Config `protobuf:"bytes,1,opt,name=account_config,json=accountConfig,proto3" json:"account_config,omitempty"`
	// Product subscription info
	//
	// Types that are assignable to PdsSubscriptionInfo:
	//
	//	*AccountConfig_PdsAwsRegistrationToken
	//	*AccountConfig_PdsZuoraSubscription
	PdsSubscriptionInfo isAccountConfig_PdsSubscriptionInfo `protobuf_oneof:"pds_subscription_info"`
	// Types that are assignable to PxeSubscriptionInfo:
	//
	//	*AccountConfig_PxeAwsRegistrationToken
	//	*AccountConfig_PxeZuoraSubscription
	PxeSubscriptionInfo isAccountConfig_PxeSubscriptionInfo `protobuf_oneof:"pxe_subscription_info"`
	// Types that are assignable to BaasSubscriptionInfo:
	//
	//	*AccountConfig_BaasAwsRegistrationToken
	//	*AccountConfig_BaasZuoraSubscription
	BaasSubscriptionInfo isAccountConfig_BaasSubscriptionInfo `protobuf_oneof:"baas_subscription_info"`
}

func (x *AccountConfig) Reset() {
	*x = AccountConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_platform_onboard_apiv1_onboard_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountConfig) ProtoMessage() {}

func (x *AccountConfig) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_platform_onboard_apiv1_onboard_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountConfig.ProtoReflect.Descriptor instead.
func (*AccountConfig) Descriptor() ([]byte, []int) {
	return file_public_portworx_platform_onboard_apiv1_onboard_proto_rawDescGZIP(), []int{3}
}

func (x *AccountConfig) GetAccountConfig() *apiv11.Config {
	if x != nil {
		return x.AccountConfig
	}
	return nil
}

func (m *AccountConfig) GetPdsSubscriptionInfo() isAccountConfig_PdsSubscriptionInfo {
	if m != nil {
		return m.PdsSubscriptionInfo
	}
	return nil
}

func (x *AccountConfig) GetPdsAwsRegistrationToken() string {
	if x, ok := x.GetPdsSubscriptionInfo().(*AccountConfig_PdsAwsRegistrationToken); ok {
		return x.PdsAwsRegistrationToken
	}
	return ""
}

func (x *AccountConfig) GetPdsZuoraSubscription() *apiv11.ZuoraSubscriptionInfo {
	if x, ok := x.GetPdsSubscriptionInfo().(*AccountConfig_PdsZuoraSubscription); ok {
		return x.PdsZuoraSubscription
	}
	return nil
}

func (m *AccountConfig) GetPxeSubscriptionInfo() isAccountConfig_PxeSubscriptionInfo {
	if m != nil {
		return m.PxeSubscriptionInfo
	}
	return nil
}

func (x *AccountConfig) GetPxeAwsRegistrationToken() string {
	if x, ok := x.GetPxeSubscriptionInfo().(*AccountConfig_PxeAwsRegistrationToken); ok {
		return x.PxeAwsRegistrationToken
	}
	return ""
}

func (x *AccountConfig) GetPxeZuoraSubscription() *apiv11.ZuoraSubscriptionInfo {
	if x, ok := x.GetPxeSubscriptionInfo().(*AccountConfig_PxeZuoraSubscription); ok {
		return x.PxeZuoraSubscription
	}
	return nil
}

func (m *AccountConfig) GetBaasSubscriptionInfo() isAccountConfig_BaasSubscriptionInfo {
	if m != nil {
		return m.BaasSubscriptionInfo
	}
	return nil
}

func (x *AccountConfig) GetBaasAwsRegistrationToken() string {
	if x, ok := x.GetBaasSubscriptionInfo().(*AccountConfig_BaasAwsRegistrationToken); ok {
		return x.BaasAwsRegistrationToken
	}
	return ""
}

func (x *AccountConfig) GetBaasZuoraSubscription() *apiv11.ZuoraSubscriptionInfo {
	if x, ok := x.GetBaasSubscriptionInfo().(*AccountConfig_BaasZuoraSubscription); ok {
		return x.BaasZuoraSubscription
	}
	return nil
}

type isAccountConfig_PdsSubscriptionInfo interface {
	isAccountConfig_PdsSubscriptionInfo()
}

type AccountConfig_PdsAwsRegistrationToken struct {
	// AWS registration token
	PdsAwsRegistrationToken string `protobuf:"bytes,100,opt,name=pds_aws_registration_token,json=pdsAwsRegistrationToken,proto3,oneof"`
}

type AccountConfig_PdsZuoraSubscription struct {
	// Zuora subscription info
	PdsZuoraSubscription *apiv11.ZuoraSubscriptionInfo `protobuf:"bytes,101,opt,name=pds_zuora_subscription,json=pdsZuoraSubscription,proto3,oneof"`
}

func (*AccountConfig_PdsAwsRegistrationToken) isAccountConfig_PdsSubscriptionInfo() {}

func (*AccountConfig_PdsZuoraSubscription) isAccountConfig_PdsSubscriptionInfo() {}

type isAccountConfig_PxeSubscriptionInfo interface {
	isAccountConfig_PxeSubscriptionInfo()
}

type AccountConfig_PxeAwsRegistrationToken struct {
	// AWS registration token
	PxeAwsRegistrationToken string `protobuf:"bytes,200,opt,name=pxe_aws_registration_token,json=pxeAwsRegistrationToken,proto3,oneof"`
}

type AccountConfig_PxeZuoraSubscription struct {
	// Zuora subscription info
	PxeZuoraSubscription *apiv11.ZuoraSubscriptionInfo `protobuf:"bytes,201,opt,name=pxe_zuora_subscription,json=pxeZuoraSubscription,proto3,oneof"`
}

func (*AccountConfig_PxeAwsRegistrationToken) isAccountConfig_PxeSubscriptionInfo() {}

func (*AccountConfig_PxeZuoraSubscription) isAccountConfig_PxeSubscriptionInfo() {}

type isAccountConfig_BaasSubscriptionInfo interface {
	isAccountConfig_BaasSubscriptionInfo()
}

type AccountConfig_BaasAwsRegistrationToken struct {
	// AWS registration token
	BaasAwsRegistrationToken string `protobuf:"bytes,300,opt,name=baas_aws_registration_token,json=baasAwsRegistrationToken,proto3,oneof"`
}

type AccountConfig_BaasZuoraSubscription struct {
	// Zuora subscription info
	BaasZuoraSubscription *apiv11.ZuoraSubscriptionInfo `protobuf:"bytes,301,opt,name=baas_zuora_subscription,json=baasZuoraSubscription,proto3,oneof"`
}

func (*AccountConfig_BaasAwsRegistrationToken) isAccountConfig_BaasSubscriptionInfo() {}

func (*AccountConfig_BaasZuoraSubscription) isAccountConfig_BaasSubscriptionInfo() {}

var File_public_portworx_platform_onboard_apiv1_onboard_proto protoreflect.FileDescriptor

var file_public_portworx_platform_onboard_apiv1_onboard_proto_rawDesc = []byte{
	0x0a, 0x34, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72,
	0x78, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6f, 0x6e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2f, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70,
	0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x34, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x77,
	0x6f, 0x72, 0x78, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x01, 0x0a, 0x20, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6b, 0x0a,
	0x14, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8f, 0x01, 0x0a, 0x20, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x6b, 0x0a, 0x14, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x96, 0x01, 0x0a,
	0x13, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74,
	0x77, 0x6f, 0x72, 0x78, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x4a, 0x0a, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xd0, 0x05, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x52, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72,
	0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3d, 0x0a, 0x1a, 0x70,
	0x64, 0x73, 0x5f, 0x61, 0x77, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x17, 0x70, 0x64, 0x73, 0x41, 0x77, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x72, 0x0a, 0x16, 0x70, 0x64,
	0x73, 0x5f, 0x7a, 0x75, 0x6f, 0x72, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x5a, 0x75, 0x6f, 0x72, 0x61, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x14, 0x70, 0x64, 0x73, 0x5a, 0x75, 0x6f,
	0x72, 0x61, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e,
	0x0a, 0x1a, 0x70, 0x78, 0x65, 0x5f, 0x61, 0x77, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0xc8, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x17, 0x70, 0x78, 0x65, 0x41, 0x77, 0x73, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x73,
	0x0a, 0x16, 0x70, 0x78, 0x65, 0x5f, 0x7a, 0x75, 0x6f, 0x72, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x3a, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72,
	0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x5a, 0x75, 0x6f, 0x72, 0x61, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x01, 0x52, 0x14, 0x70,
	0x78, 0x65, 0x5a, 0x75, 0x6f, 0x72, 0x61, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x1b, 0x62, 0x61, 0x61, 0x73, 0x5f, 0x61, 0x77, 0x73, 0x5f,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0xac, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x18, 0x62, 0x61, 0x61,
	0x73, 0x41, 0x77, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x75, 0x0a, 0x17, 0x62, 0x61, 0x61, 0x73, 0x5f, 0x7a, 0x75,
	0x6f, 0x72, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0xad, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x5a, 0x75,
	0x6f, 0x72, 0x61, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x48, 0x02, 0x52, 0x15, 0x62, 0x61, 0x61, 0x73, 0x5a, 0x75, 0x6f, 0x72, 0x61,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x17, 0x0a, 0x15,
	0x70, 0x64, 0x73, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x17, 0x0a, 0x15, 0x70, 0x78, 0x65, 0x5f, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x18,
	0x0a, 0x16, 0x62, 0x61, 0x61, 0x73, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x32, 0xce, 0x03, 0x0a, 0x0e, 0x4f, 0x6e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xcc, 0x01, 0x0a, 0x19,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x2e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x38, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f,
	0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x28, 0x3a, 0x14, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xec, 0x01, 0x0a, 0x19, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x38, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72,
	0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x48, 0x3a, 0x14, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x30, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x7b, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x75, 0x69, 0x64, 0x7d, 0x42, 0x81, 0x01, 0x0a, 0x27, 0x63, 0x6f,
	0x6d, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72,
	0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x70, 0x75, 0x72, 0x65, 0x2d, 0x70, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2f, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f,
	0x61, 0x70, 0x69, 0x76, 0x31, 0x3b, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_public_portworx_platform_onboard_apiv1_onboard_proto_rawDescOnce sync.Once
	file_public_portworx_platform_onboard_apiv1_onboard_proto_rawDescData = file_public_portworx_platform_onboard_apiv1_onboard_proto_rawDesc
)

func file_public_portworx_platform_onboard_apiv1_onboard_proto_rawDescGZIP() []byte {
	file_public_portworx_platform_onboard_apiv1_onboard_proto_rawDescOnce.Do(func() {
		file_public_portworx_platform_onboard_apiv1_onboard_proto_rawDescData = protoimpl.X.CompressGZIP(file_public_portworx_platform_onboard_apiv1_onboard_proto_rawDescData)
	})
	return file_public_portworx_platform_onboard_apiv1_onboard_proto_rawDescData
}

var file_public_portworx_platform_onboard_apiv1_onboard_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_public_portworx_platform_onboard_apiv1_onboard_proto_goTypes = []interface{}{
	(*CreateAccountRegistrationRequest)(nil), // 0: public.portworx.platform.onboard.v1.CreateAccountRegistrationRequest
	(*UpdateAccountRegistrationRequest)(nil), // 1: public.portworx.platform.onboard.v1.UpdateAccountRegistrationRequest
	(*AccountRegistration)(nil),              // 2: public.portworx.platform.onboard.v1.AccountRegistration
	(*AccountConfig)(nil),                    // 3: public.portworx.platform.onboard.v1.AccountConfig
	(*apiv1.Meta)(nil),                       // 4: public.portworx.common.v1.Meta
	(*apiv11.Config)(nil),                    // 5: public.portworx.platform.account.v1.Config
	(*apiv11.ZuoraSubscriptionInfo)(nil),     // 6: public.portworx.platform.account.v1.ZuoraSubscriptionInfo
}
var file_public_portworx_platform_onboard_apiv1_onboard_proto_depIdxs = []int32{
	2,  // 0: public.portworx.platform.onboard.v1.CreateAccountRegistrationRequest.account_registration:type_name -> public.portworx.platform.onboard.v1.AccountRegistration
	2,  // 1: public.portworx.platform.onboard.v1.UpdateAccountRegistrationRequest.account_registration:type_name -> public.portworx.platform.onboard.v1.AccountRegistration
	4,  // 2: public.portworx.platform.onboard.v1.AccountRegistration.meta:type_name -> public.portworx.common.v1.Meta
	3,  // 3: public.portworx.platform.onboard.v1.AccountRegistration.config:type_name -> public.portworx.platform.onboard.v1.AccountConfig
	5,  // 4: public.portworx.platform.onboard.v1.AccountConfig.account_config:type_name -> public.portworx.platform.account.v1.Config
	6,  // 5: public.portworx.platform.onboard.v1.AccountConfig.pds_zuora_subscription:type_name -> public.portworx.platform.account.v1.ZuoraSubscriptionInfo
	6,  // 6: public.portworx.platform.onboard.v1.AccountConfig.pxe_zuora_subscription:type_name -> public.portworx.platform.account.v1.ZuoraSubscriptionInfo
	6,  // 7: public.portworx.platform.onboard.v1.AccountConfig.baas_zuora_subscription:type_name -> public.portworx.platform.account.v1.ZuoraSubscriptionInfo
	0,  // 8: public.portworx.platform.onboard.v1.OnboardService.CreateAccountRegistration:input_type -> public.portworx.platform.onboard.v1.CreateAccountRegistrationRequest
	1,  // 9: public.portworx.platform.onboard.v1.OnboardService.UpdateAccountRegistration:input_type -> public.portworx.platform.onboard.v1.UpdateAccountRegistrationRequest
	2,  // 10: public.portworx.platform.onboard.v1.OnboardService.CreateAccountRegistration:output_type -> public.portworx.platform.onboard.v1.AccountRegistration
	2,  // 11: public.portworx.platform.onboard.v1.OnboardService.UpdateAccountRegistration:output_type -> public.portworx.platform.onboard.v1.AccountRegistration
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_public_portworx_platform_onboard_apiv1_onboard_proto_init() }
func file_public_portworx_platform_onboard_apiv1_onboard_proto_init() {
	if File_public_portworx_platform_onboard_apiv1_onboard_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_public_portworx_platform_onboard_apiv1_onboard_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccountRegistrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_platform_onboard_apiv1_onboard_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAccountRegistrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_platform_onboard_apiv1_onboard_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountRegistration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_platform_onboard_apiv1_onboard_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_public_portworx_platform_onboard_apiv1_onboard_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*AccountConfig_PdsAwsRegistrationToken)(nil),
		(*AccountConfig_PdsZuoraSubscription)(nil),
		(*AccountConfig_PxeAwsRegistrationToken)(nil),
		(*AccountConfig_PxeZuoraSubscription)(nil),
		(*AccountConfig_BaasAwsRegistrationToken)(nil),
		(*AccountConfig_BaasZuoraSubscription)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_public_portworx_platform_onboard_apiv1_onboard_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_public_portworx_platform_onboard_apiv1_onboard_proto_goTypes,
		DependencyIndexes: file_public_portworx_platform_onboard_apiv1_onboard_proto_depIdxs,
		MessageInfos:      file_public_portworx_platform_onboard_apiv1_onboard_proto_msgTypes,
	}.Build()
	File_public_portworx_platform_onboard_apiv1_onboard_proto = out.File
	file_public_portworx_platform_onboard_apiv1_onboard_proto_rawDesc = nil
	file_public_portworx_platform_onboard_apiv1_onboard_proto_goTypes = nil
	file_public_portworx_platform_onboard_apiv1_onboard_proto_depIdxs = nil
}
