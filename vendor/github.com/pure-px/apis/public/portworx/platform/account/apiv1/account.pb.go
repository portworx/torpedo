// Please use the following editor setup for this file:
// Tab size=2; Tabs as spaces; Clean up trailing whitepsace
//
// In vim add: au FileType proto setl sw=2 ts=2 expandtab list
//
// In vscode install vscode-proto3 extension and add this to your settings.json:
//    "[proto3]": {
//        "editor.tabSize": 2,
//        "editor.insertSpaces": true,
//        "editor.rulers": [80],
//        "editor.detectIndentation": true,
//        "files.trimTrailingWhitespace": true
//    }
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.1
// source: public/portworx/platform/account/apiv1/account.proto

package account

import (
	apiv1 "github.com/pure-px/apis/public/portworx/common/apiv1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Accepted status types for various cloud providers
type StatusType int32

const (
	// Unspecified, do not use
	StatusType_STATUS_TYPE_UNSPECIFIED StatusType = 0
	// A successfully freemium account setup
	StatusType_FREEMIUM_SUCCESS StatusType = 1
	// Customer has subscribed product on aws marketplace
	StatusType_AWS_SUBSCRIBE_SUCCESS StatusType = 2
	// Customer has subscribed product on aws marketplace but aws encountered failure during account setup
	StatusType_AWS_SUBSCRIBE_FAIL StatusType = 3
	// Customer has unsubscribed from marketplace and now we have 1 hour to report final billing
	// and perform other deboarding processes
	StatusType_AWS_UNSUBSCRIBE_PENDING StatusType = 4
	// Customer successfully unsubscribed and we can't report billing to aws for this account anymore
	StatusType_AWS_UNSUBSCRIBE_SUCCESS StatusType = 5
	// Customer successfully subscribed to Zuora
	StatusType_ZUORA_SUBSCRIBE StatusType = 6
	// Customer has unsubscribed from Zuora
	StatusType_ZUORA_UNSUBSCRIBE StatusType = 7
)

// Enum value maps for StatusType.
var (
	StatusType_name = map[int32]string{
		0: "STATUS_TYPE_UNSPECIFIED",
		1: "FREEMIUM_SUCCESS",
		2: "AWS_SUBSCRIBE_SUCCESS",
		3: "AWS_SUBSCRIBE_FAIL",
		4: "AWS_UNSUBSCRIBE_PENDING",
		5: "AWS_UNSUBSCRIBE_SUCCESS",
		6: "ZUORA_SUBSCRIBE",
		7: "ZUORA_UNSUBSCRIBE",
	}
	StatusType_value = map[string]int32{
		"STATUS_TYPE_UNSPECIFIED": 0,
		"FREEMIUM_SUCCESS":        1,
		"AWS_SUBSCRIBE_SUCCESS":   2,
		"AWS_SUBSCRIBE_FAIL":      3,
		"AWS_UNSUBSCRIBE_PENDING": 4,
		"AWS_UNSUBSCRIBE_SUCCESS": 5,
		"ZUORA_SUBSCRIBE":         6,
		"ZUORA_UNSUBSCRIBE":       7,
	}
)

func (x StatusType) Enum() *StatusType {
	p := new(StatusType)
	*p = x
	return p
}

func (x StatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_public_portworx_platform_account_apiv1_account_proto_enumTypes[0].Descriptor()
}

func (StatusType) Type() protoreflect.EnumType {
	return &file_public_portworx_platform_account_apiv1_account_proto_enumTypes[0]
}

func (x StatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusType.Descriptor instead.
func (StatusType) EnumDescriptor() ([]byte, []int) {
	return file_public_portworx_platform_account_apiv1_account_proto_rawDescGZIP(), []int{0}
}

// Accepted account types
type AccountType int32

const (
	// Unspecified, do not use
	AccountType_ACCOUNT_TYPE_UNSPECIFIED AccountType = 0
	// Account is of freemium type for all three Portworx Service
	AccountType_FREEMIUM AccountType = 1
	// Account has a active subscription for atleast one of the Portworx Services
	AccountType_ENTERPRISE AccountType = 2
)

// Enum value maps for AccountType.
var (
	AccountType_name = map[int32]string{
		0: "ACCOUNT_TYPE_UNSPECIFIED",
		1: "FREEMIUM",
		2: "ENTERPRISE",
	}
	AccountType_value = map[string]int32{
		"ACCOUNT_TYPE_UNSPECIFIED": 0,
		"FREEMIUM":                 1,
		"ENTERPRISE":               2,
	}
)

func (x AccountType) Enum() *AccountType {
	p := new(AccountType)
	*p = x
	return p
}

func (x AccountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountType) Descriptor() protoreflect.EnumDescriptor {
	return file_public_portworx_platform_account_apiv1_account_proto_enumTypes[1].Descriptor()
}

func (AccountType) Type() protoreflect.EnumType {
	return &file_public_portworx_platform_account_apiv1_account_proto_enumTypes[1]
}

func (x AccountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountType.Descriptor instead.
func (AccountType) EnumDescriptor() ([]byte, []int) {
	return file_public_portworx_platform_account_apiv1_account_proto_rawDescGZIP(), []int{1}
}

// GetAccountRequest is the request message to GetAccount API
type GetAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// account id for which account details need to be fetched
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *GetAccountRequest) Reset() {
	*x = GetAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_platform_account_apiv1_account_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountRequest) ProtoMessage() {}

func (x *GetAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_platform_account_apiv1_account_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountRequest.ProtoReflect.Descriptor instead.
func (*GetAccountRequest) Descriptor() ([]byte, []int) {
	return file_public_portworx_platform_account_apiv1_account_proto_rawDescGZIP(), []int{0}
}

func (x *GetAccountRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

// Account is a high level entity that represents one large company(e.g. a Pure). An account has multiple tenants
type Account struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Metadata of the account.
	Meta *apiv1.Meta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// Desired configuration of the Account
	Config *Config `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	// Subscription Status for Portworx Services
	Status *Status `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *Account) Reset() {
	*x = Account{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_platform_account_apiv1_account_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_platform_account_apiv1_account_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_public_portworx_platform_account_apiv1_account_proto_rawDescGZIP(), []int{1}
}

func (x *Account) GetMeta() *apiv1.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Account) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Account) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

// Desired configuration of the account
type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// email of the first account user
	UserEmail string `protobuf:"bytes,1,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`
	// Account DNS name
	DnsName string `protobuf:"bytes,2,opt,name=dns_name,json=dnsName,proto3" json:"dns_name,omitempty"`
	// Display name of Account
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Describes whether it is a Freemium or an Enterprise account
	AccountType AccountType `protobuf:"varint,4,opt,name=account_type,json=accountType,proto3,enum=public.portworx.platform.account.v1.AccountType" json:"account_type,omitempty"`
	// Product subscription info
	//
	// Types that are assignable to PdsSubscription:
	//
	//	*Config_PdsZuoraSubscription
	PdsSubscription isConfig_PdsSubscription `protobuf_oneof:"pds_subscription"`
	// Types that are assignable to PxeSubscription:
	//
	//	*Config_PxeAwsSubscription
	//	*Config_PxeZuoraSubscription
	PxeSubscription isConfig_PxeSubscription `protobuf_oneof:"pxe_subscription"`
	// Types that are assignable to BaasSubscription:
	//
	//	*Config_BaasAwsSubscription
	//	*Config_BaasZuoraSubscription
	BaasSubscription isConfig_BaasSubscription `protobuf_oneof:"baas_subscription"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_platform_account_apiv1_account_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_platform_account_apiv1_account_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_public_portworx_platform_account_apiv1_account_proto_rawDescGZIP(), []int{2}
}

func (x *Config) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

func (x *Config) GetDnsName() string {
	if x != nil {
		return x.DnsName
	}
	return ""
}

func (x *Config) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Config) GetAccountType() AccountType {
	if x != nil {
		return x.AccountType
	}
	return AccountType_ACCOUNT_TYPE_UNSPECIFIED
}

func (m *Config) GetPdsSubscription() isConfig_PdsSubscription {
	if m != nil {
		return m.PdsSubscription
	}
	return nil
}

func (x *Config) GetPdsZuoraSubscription() *ZuoraSubscriptionInfo {
	if x, ok := x.GetPdsSubscription().(*Config_PdsZuoraSubscription); ok {
		return x.PdsZuoraSubscription
	}
	return nil
}

func (m *Config) GetPxeSubscription() isConfig_PxeSubscription {
	if m != nil {
		return m.PxeSubscription
	}
	return nil
}

func (x *Config) GetPxeAwsSubscription() *AwsSubscriptionInfo {
	if x, ok := x.GetPxeSubscription().(*Config_PxeAwsSubscription); ok {
		return x.PxeAwsSubscription
	}
	return nil
}

func (x *Config) GetPxeZuoraSubscription() *ZuoraSubscriptionInfo {
	if x, ok := x.GetPxeSubscription().(*Config_PxeZuoraSubscription); ok {
		return x.PxeZuoraSubscription
	}
	return nil
}

func (m *Config) GetBaasSubscription() isConfig_BaasSubscription {
	if m != nil {
		return m.BaasSubscription
	}
	return nil
}

func (x *Config) GetBaasAwsSubscription() *AwsSubscriptionInfo {
	if x, ok := x.GetBaasSubscription().(*Config_BaasAwsSubscription); ok {
		return x.BaasAwsSubscription
	}
	return nil
}

func (x *Config) GetBaasZuoraSubscription() *ZuoraSubscriptionInfo {
	if x, ok := x.GetBaasSubscription().(*Config_BaasZuoraSubscription); ok {
		return x.BaasZuoraSubscription
	}
	return nil
}

type isConfig_PdsSubscription interface {
	isConfig_PdsSubscription()
}

type Config_PdsZuoraSubscription struct {
	// Zuora subscription info
	PdsZuoraSubscription *ZuoraSubscriptionInfo `protobuf:"bytes,101,opt,name=pds_zuora_subscription,json=pdsZuoraSubscription,proto3,oneof"`
}

func (*Config_PdsZuoraSubscription) isConfig_PdsSubscription() {}

type isConfig_PxeSubscription interface {
	isConfig_PxeSubscription()
}

type Config_PxeAwsSubscription struct {
	// AWS registration token
	PxeAwsSubscription *AwsSubscriptionInfo `protobuf:"bytes,200,opt,name=pxe_aws_subscription,json=pxeAwsSubscription,proto3,oneof"`
}

type Config_PxeZuoraSubscription struct {
	// Zuora subscription info
	PxeZuoraSubscription *ZuoraSubscriptionInfo `protobuf:"bytes,201,opt,name=pxe_zuora_subscription,json=pxeZuoraSubscription,proto3,oneof"`
}

func (*Config_PxeAwsSubscription) isConfig_PxeSubscription() {}

func (*Config_PxeZuoraSubscription) isConfig_PxeSubscription() {}

type isConfig_BaasSubscription interface {
	isConfig_BaasSubscription()
}

type Config_BaasAwsSubscription struct {
	// AWS registration token
	BaasAwsSubscription *AwsSubscriptionInfo `protobuf:"bytes,300,opt,name=baas_aws_subscription,json=baasAwsSubscription,proto3,oneof"`
}

type Config_BaasZuoraSubscription struct {
	// Zuora subscription info
	BaasZuoraSubscription *ZuoraSubscriptionInfo `protobuf:"bytes,301,opt,name=baas_zuora_subscription,json=baasZuoraSubscription,proto3,oneof"`
}

func (*Config_BaasAwsSubscription) isConfig_BaasSubscription() {}

func (*Config_BaasZuoraSubscription) isConfig_BaasSubscription() {}

// AWS subscription info for one product
type AwsSubscriptionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Aws client id associated with the installed product
	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// Aws product id of the installed product
	ProductId string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// Aws account id associated with the installed product
	AccountId string `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *AwsSubscriptionInfo) Reset() {
	*x = AwsSubscriptionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_platform_account_apiv1_account_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwsSubscriptionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsSubscriptionInfo) ProtoMessage() {}

func (x *AwsSubscriptionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_platform_account_apiv1_account_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsSubscriptionInfo.ProtoReflect.Descriptor instead.
func (*AwsSubscriptionInfo) Descriptor() ([]byte, []int) {
	return file_public_portworx_platform_account_apiv1_account_proto_rawDescGZIP(), []int{3}
}

func (x *AwsSubscriptionInfo) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AwsSubscriptionInfo) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *AwsSubscriptionInfo) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

// Zuora Subscription info for a particular installed product
type ZuoraSubscriptionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id associated installed product
	SubscriptionId string `protobuf:"bytes,1,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	// id associated with the customer account
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *ZuoraSubscriptionInfo) Reset() {
	*x = ZuoraSubscriptionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_platform_account_apiv1_account_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZuoraSubscriptionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZuoraSubscriptionInfo) ProtoMessage() {}

func (x *ZuoraSubscriptionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_platform_account_apiv1_account_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZuoraSubscriptionInfo.ProtoReflect.Descriptor instead.
func (*ZuoraSubscriptionInfo) Descriptor() ([]byte, []int) {
	return file_public_portworx_platform_account_apiv1_account_proto_rawDescGZIP(), []int{4}
}

func (x *ZuoraSubscriptionInfo) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *ZuoraSubscriptionInfo) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

// Subscription Status for Portworx Services
type Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Subscription status of Portworx Enterprise
	Pxe StatusType `protobuf:"varint,1,opt,name=pxe,proto3,enum=public.portworx.platform.account.v1.StatusType" json:"pxe,omitempty"`
	// Subscription status of Portworx DataServices
	Pds StatusType `protobuf:"varint,2,opt,name=pds,proto3,enum=public.portworx.platform.account.v1.StatusType" json:"pds,omitempty"`
	// Subscription status of Portworx Backup
	Baas StatusType `protobuf:"varint,3,opt,name=baas,proto3,enum=public.portworx.platform.account.v1.StatusType" json:"baas,omitempty"`
}

func (x *Status) Reset() {
	*x = Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_platform_account_apiv1_account_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_platform_account_apiv1_account_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_public_portworx_platform_account_apiv1_account_proto_rawDescGZIP(), []int{5}
}

func (x *Status) GetPxe() StatusType {
	if x != nil {
		return x.Pxe
	}
	return StatusType_STATUS_TYPE_UNSPECIFIED
}

func (x *Status) GetPds() StatusType {
	if x != nil {
		return x.Pds
	}
	return StatusType_STATUS_TYPE_UNSPECIFIED
}

func (x *Status) GetBaas() StatusType {
	if x != nil {
		return x.Baas
	}
	return StatusType_STATUS_TYPE_UNSPECIFIED
}

var File_public_portworx_platform_account_apiv1_account_proto protoreflect.FileDescriptor

var file_public_portworx_platform_account_apiv1_account_proto_rawDesc = []byte{
	0x0a, 0x34, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72,
	0x78, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70,
	0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x70, 0x6f, 0x72, 0x74,
	0x77, 0x6f, 0x72, 0x78, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x76,
	0x31, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x32, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xcd, 0x01, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f,
	0x72, 0x78, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x43, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x48, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc1, 0x06, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1e, 0x0a, 0x08, 0x64, 0x6e, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x07, 0x64, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x01, 0x52, 0x0b, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x53, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x30,
	0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x72, 0x0a,
	0x16, 0x70, 0x64, 0x73, 0x5f, 0x7a, 0x75, 0x6f, 0x72, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x5a, 0x75, 0x6f, 0x72, 0x61, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x14, 0x70, 0x64, 0x73,
	0x5a, 0x75, 0x6f, 0x72, 0x61, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x6d, 0x0a, 0x14, 0x70, 0x78, 0x65, 0x5f, 0x61, 0x77, 0x73, 0x5f, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f,
	0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x77, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x01, 0x52, 0x12, 0x70, 0x78,
	0x65, 0x41, 0x77, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x73, 0x0a, 0x16, 0x70, 0x78, 0x65, 0x5f, 0x7a, 0x75, 0x6f, 0x72, 0x61, 0x5f, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x3a, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77,
	0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x5a, 0x75, 0x6f, 0x72, 0x61, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x01, 0x52,
	0x14, 0x70, 0x78, 0x65, 0x5a, 0x75, 0x6f, 0x72, 0x61, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6f, 0x0a, 0x15, 0x62, 0x61, 0x61, 0x73, 0x5f, 0x61, 0x77,
	0x73, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xac,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70,
	0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x77, 0x73, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x48,
	0x02, 0x52, 0x13, 0x62, 0x61, 0x61, 0x73, 0x41, 0x77, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x75, 0x0a, 0x17, 0x62, 0x61, 0x61, 0x73, 0x5f, 0x7a,
	0x75, 0x6f, 0x72, 0x61, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0xad, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x5a,
	0x75, 0x6f, 0x72, 0x61, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x48, 0x02, 0x52, 0x15, 0x62, 0x61, 0x61, 0x73, 0x5a, 0x75, 0x6f, 0x72,
	0x61, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x12, 0x0a,
	0x10, 0x70, 0x64, 0x73, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x12, 0x0a, 0x10, 0x70, 0x78, 0x65, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x13, 0x0a, 0x11, 0x62, 0x61, 0x61, 0x73, 0x5f, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x70, 0x0a, 0x13, 0x41, 0x77,
	0x73, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x15,
	0x5a, 0x75, 0x6f, 0x72, 0x61, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xd3, 0x01,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x41, 0x0a, 0x03, 0x70, 0x78, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70,
	0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x03, 0x70, 0x78, 0x65, 0x12, 0x41, 0x0a, 0x03, 0x70,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x03, 0x70, 0x64, 0x73, 0x12, 0x43,
	0x0a, 0x04, 0x62, 0x61, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x62,
	0x61, 0x61, 0x73, 0x2a, 0xd8, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x14, 0x0a, 0x10, 0x46, 0x52, 0x45, 0x45, 0x4d, 0x49, 0x55, 0x4d, 0x5f, 0x53, 0x55, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x57, 0x53, 0x5f, 0x53, 0x55, 0x42,
	0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x02,
	0x12, 0x16, 0x0a, 0x12, 0x41, 0x57, 0x53, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42,
	0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x57, 0x53, 0x5f,
	0x55, 0x4e, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x5f, 0x50, 0x45, 0x4e, 0x44,
	0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x57, 0x53, 0x5f, 0x55, 0x4e, 0x53,
	0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x5a, 0x55, 0x4f, 0x52, 0x41, 0x5f, 0x53, 0x55, 0x42, 0x53,
	0x43, 0x52, 0x49, 0x42, 0x45, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x5a, 0x55, 0x4f, 0x52, 0x41,
	0x5f, 0x55, 0x4e, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x10, 0x07, 0x2a, 0x49,
	0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a,
	0x18, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x46,
	0x52, 0x45, 0x45, 0x4d, 0x49, 0x55, 0x4d, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x4e, 0x54,
	0x45, 0x52, 0x50, 0x52, 0x49, 0x53, 0x45, 0x10, 0x02, 0x32, 0xa8, 0x01, 0x0a, 0x0e, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x95, 0x01, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x2e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72,
	0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x7d, 0x42, 0x81, 0x01, 0x0a, 0x27, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x42, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x75, 0x72,
	0x65, 0x2d, 0x70, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x2f, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31,
	0x3b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_public_portworx_platform_account_apiv1_account_proto_rawDescOnce sync.Once
	file_public_portworx_platform_account_apiv1_account_proto_rawDescData = file_public_portworx_platform_account_apiv1_account_proto_rawDesc
)

func file_public_portworx_platform_account_apiv1_account_proto_rawDescGZIP() []byte {
	file_public_portworx_platform_account_apiv1_account_proto_rawDescOnce.Do(func() {
		file_public_portworx_platform_account_apiv1_account_proto_rawDescData = protoimpl.X.CompressGZIP(file_public_portworx_platform_account_apiv1_account_proto_rawDescData)
	})
	return file_public_portworx_platform_account_apiv1_account_proto_rawDescData
}

var file_public_portworx_platform_account_apiv1_account_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_public_portworx_platform_account_apiv1_account_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_public_portworx_platform_account_apiv1_account_proto_goTypes = []interface{}{
	(StatusType)(0),               // 0: public.portworx.platform.account.v1.StatusType
	(AccountType)(0),              // 1: public.portworx.platform.account.v1.AccountType
	(*GetAccountRequest)(nil),     // 2: public.portworx.platform.account.v1.GetAccountRequest
	(*Account)(nil),               // 3: public.portworx.platform.account.v1.Account
	(*Config)(nil),                // 4: public.portworx.platform.account.v1.Config
	(*AwsSubscriptionInfo)(nil),   // 5: public.portworx.platform.account.v1.AwsSubscriptionInfo
	(*ZuoraSubscriptionInfo)(nil), // 6: public.portworx.platform.account.v1.ZuoraSubscriptionInfo
	(*Status)(nil),                // 7: public.portworx.platform.account.v1.Status
	(*apiv1.Meta)(nil),            // 8: public.portworx.common.v1.Meta
}
var file_public_portworx_platform_account_apiv1_account_proto_depIdxs = []int32{
	8,  // 0: public.portworx.platform.account.v1.Account.meta:type_name -> public.portworx.common.v1.Meta
	4,  // 1: public.portworx.platform.account.v1.Account.config:type_name -> public.portworx.platform.account.v1.Config
	7,  // 2: public.portworx.platform.account.v1.Account.status:type_name -> public.portworx.platform.account.v1.Status
	1,  // 3: public.portworx.platform.account.v1.Config.account_type:type_name -> public.portworx.platform.account.v1.AccountType
	6,  // 4: public.portworx.platform.account.v1.Config.pds_zuora_subscription:type_name -> public.portworx.platform.account.v1.ZuoraSubscriptionInfo
	5,  // 5: public.portworx.platform.account.v1.Config.pxe_aws_subscription:type_name -> public.portworx.platform.account.v1.AwsSubscriptionInfo
	6,  // 6: public.portworx.platform.account.v1.Config.pxe_zuora_subscription:type_name -> public.portworx.platform.account.v1.ZuoraSubscriptionInfo
	5,  // 7: public.portworx.platform.account.v1.Config.baas_aws_subscription:type_name -> public.portworx.platform.account.v1.AwsSubscriptionInfo
	6,  // 8: public.portworx.platform.account.v1.Config.baas_zuora_subscription:type_name -> public.portworx.platform.account.v1.ZuoraSubscriptionInfo
	0,  // 9: public.portworx.platform.account.v1.Status.pxe:type_name -> public.portworx.platform.account.v1.StatusType
	0,  // 10: public.portworx.platform.account.v1.Status.pds:type_name -> public.portworx.platform.account.v1.StatusType
	0,  // 11: public.portworx.platform.account.v1.Status.baas:type_name -> public.portworx.platform.account.v1.StatusType
	2,  // 12: public.portworx.platform.account.v1.AccountService.GetAccount:input_type -> public.portworx.platform.account.v1.GetAccountRequest
	3,  // 13: public.portworx.platform.account.v1.AccountService.GetAccount:output_type -> public.portworx.platform.account.v1.Account
	13, // [13:14] is the sub-list for method output_type
	12, // [12:13] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_public_portworx_platform_account_apiv1_account_proto_init() }
func file_public_portworx_platform_account_apiv1_account_proto_init() {
	if File_public_portworx_platform_account_apiv1_account_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_public_portworx_platform_account_apiv1_account_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_platform_account_apiv1_account_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Account); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_platform_account_apiv1_account_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_platform_account_apiv1_account_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwsSubscriptionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_platform_account_apiv1_account_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZuoraSubscriptionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_platform_account_apiv1_account_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_public_portworx_platform_account_apiv1_account_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Config_PdsZuoraSubscription)(nil),
		(*Config_PxeAwsSubscription)(nil),
		(*Config_PxeZuoraSubscription)(nil),
		(*Config_BaasAwsSubscription)(nil),
		(*Config_BaasZuoraSubscription)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_public_portworx_platform_account_apiv1_account_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_public_portworx_platform_account_apiv1_account_proto_goTypes,
		DependencyIndexes: file_public_portworx_platform_account_apiv1_account_proto_depIdxs,
		EnumInfos:         file_public_portworx_platform_account_apiv1_account_proto_enumTypes,
		MessageInfos:      file_public_portworx_platform_account_apiv1_account_proto_msgTypes,
	}.Build()
	File_public_portworx_platform_account_apiv1_account_proto = out.File
	file_public_portworx_platform_account_apiv1_account_proto_rawDesc = nil
	file_public_portworx_platform_account_apiv1_account_proto_goTypes = nil
	file_public_portworx_platform_account_apiv1_account_proto_depIdxs = nil
}
