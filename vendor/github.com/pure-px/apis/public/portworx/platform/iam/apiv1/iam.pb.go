// Please use the following editor setup for this file:
// Tab size=2; Tabs as spaces; Clean up trailing whitepsace
//
// In vim add: au FileType proto setl sw=2 ts=2 expandtab list
//
// In vscode install vscode-proto3 extension and add this to your settings.json:
//    "[proto3]": {
//        "editor.tabSize": 2,
//        "editor.insertSpaces": true,
//        "editor.rulers": [80],
//        "editor.detectIndentation": true,
//        "files.trimTrailingWhitespace": true
//    }
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.1
// source: public/portworx/platform/iam/apiv1/iam.proto

package iam

import (
	apiv1 "github.com/pure-px/apis/public/portworx/common/apiv1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CreateIAMRequest to create a role binding
type CreateIAMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IAM to be created
	Iam *IAM `protobuf:"bytes,1,opt,name=iam,proto3" json:"iam,omitempty"`
}

func (x *CreateIAMRequest) Reset() {
	*x = CreateIAMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIAMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIAMRequest) ProtoMessage() {}

func (x *CreateIAMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIAMRequest.ProtoReflect.Descriptor instead.
func (*CreateIAMRequest) Descriptor() ([]byte, []int) {
	return file_public_portworx_platform_iam_apiv1_iam_proto_rawDescGZIP(), []int{0}
}

func (x *CreateIAMRequest) GetIam() *IAM {
	if x != nil {
		return x.Iam
	}
	return nil
}

// GrantIAMRequest to grant/add a new role binding at tenant, project or account
type GrantIAMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specifies the resource ID under which a new role binding needs to be added.
	// Choose one of the following identifiers: account_id, tenant_id, or project_id.
	//
	// Types that are assignable to ResourceId:
	//
	//	*GrantIAMRequest_AccountId
	//	*GrantIAMRequest_TenantId
	//	*GrantIAMRequest_ProjectId
	ResourceId isGrantIAMRequest_ResourceId `protobuf_oneof:"resource_id"`
	// Specifies the IAM role binding that needs to be added or granted for the user.
	Iam *IAM `protobuf:"bytes,1,opt,name=iam,proto3" json:"iam,omitempty"`
}

func (x *GrantIAMRequest) Reset() {
	*x = GrantIAMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantIAMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantIAMRequest) ProtoMessage() {}

func (x *GrantIAMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantIAMRequest.ProtoReflect.Descriptor instead.
func (*GrantIAMRequest) Descriptor() ([]byte, []int) {
	return file_public_portworx_platform_iam_apiv1_iam_proto_rawDescGZIP(), []int{1}
}

func (m *GrantIAMRequest) GetResourceId() isGrantIAMRequest_ResourceId {
	if m != nil {
		return m.ResourceId
	}
	return nil
}

func (x *GrantIAMRequest) GetAccountId() string {
	if x, ok := x.GetResourceId().(*GrantIAMRequest_AccountId); ok {
		return x.AccountId
	}
	return ""
}

func (x *GrantIAMRequest) GetTenantId() string {
	if x, ok := x.GetResourceId().(*GrantIAMRequest_TenantId); ok {
		return x.TenantId
	}
	return ""
}

func (x *GrantIAMRequest) GetProjectId() string {
	if x, ok := x.GetResourceId().(*GrantIAMRequest_ProjectId); ok {
		return x.ProjectId
	}
	return ""
}

func (x *GrantIAMRequest) GetIam() *IAM {
	if x != nil {
		return x.Iam
	}
	return nil
}

type isGrantIAMRequest_ResourceId interface {
	isGrantIAMRequest_ResourceId()
}

type GrantIAMRequest_AccountId struct {
	// Account UID under which user wants to add role binding
	AccountId string `protobuf:"bytes,101,opt,name=account_id,json=accountId,proto3,oneof"`
}

type GrantIAMRequest_TenantId struct {
	// Tenant UID  under which user wants to add role binding
	TenantId string `protobuf:"bytes,102,opt,name=tenant_id,json=tenantId,proto3,oneof"`
}

type GrantIAMRequest_ProjectId struct {
	// Project UID under which user wants to add role binding
	ProjectId string `protobuf:"bytes,103,opt,name=project_id,json=projectId,proto3,oneof"`
}

func (*GrantIAMRequest_AccountId) isGrantIAMRequest_ResourceId() {}

func (*GrantIAMRequest_TenantId) isGrantIAMRequest_ResourceId() {}

func (*GrantIAMRequest_ProjectId) isGrantIAMRequest_ResourceId() {}

// GrantIAMResponse is response for GrantIAM API
type GrantIAMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Any error or success message to show for GrantIAM response
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GrantIAMResponse) Reset() {
	*x = GrantIAMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantIAMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantIAMResponse) ProtoMessage() {}

func (x *GrantIAMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantIAMResponse.ProtoReflect.Descriptor instead.
func (*GrantIAMResponse) Descriptor() ([]byte, []int) {
	return file_public_portworx_platform_iam_apiv1_iam_proto_rawDescGZIP(), []int{2}
}

func (x *GrantIAMResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// RevokeIAMRequest to revoke/delete a role binding at tenant, project or account
type RevokeIAMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specifies the resource ID from which role binding needs to be deleted/revoke.
	// Choose one of the following identifiers: account_id, tenant_id, or project_id.
	//
	// Types that are assignable to ResourceId:
	//
	//	*RevokeIAMRequest_AccountId
	//	*RevokeIAMRequest_TenantId
	//	*RevokeIAMRequest_ProjectId
	ResourceId isRevokeIAMRequest_ResourceId `protobuf_oneof:"resource_id"`
	// Specifies the IAM role binding that needs to be deleted/revoked for the user.
	Iam *IAM `protobuf:"bytes,1,opt,name=iam,proto3" json:"iam,omitempty"`
}

func (x *RevokeIAMRequest) Reset() {
	*x = RevokeIAMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeIAMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeIAMRequest) ProtoMessage() {}

func (x *RevokeIAMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeIAMRequest.ProtoReflect.Descriptor instead.
func (*RevokeIAMRequest) Descriptor() ([]byte, []int) {
	return file_public_portworx_platform_iam_apiv1_iam_proto_rawDescGZIP(), []int{3}
}

func (m *RevokeIAMRequest) GetResourceId() isRevokeIAMRequest_ResourceId {
	if m != nil {
		return m.ResourceId
	}
	return nil
}

func (x *RevokeIAMRequest) GetAccountId() string {
	if x, ok := x.GetResourceId().(*RevokeIAMRequest_AccountId); ok {
		return x.AccountId
	}
	return ""
}

func (x *RevokeIAMRequest) GetTenantId() string {
	if x, ok := x.GetResourceId().(*RevokeIAMRequest_TenantId); ok {
		return x.TenantId
	}
	return ""
}

func (x *RevokeIAMRequest) GetProjectId() string {
	if x, ok := x.GetResourceId().(*RevokeIAMRequest_ProjectId); ok {
		return x.ProjectId
	}
	return ""
}

func (x *RevokeIAMRequest) GetIam() *IAM {
	if x != nil {
		return x.Iam
	}
	return nil
}

type isRevokeIAMRequest_ResourceId interface {
	isRevokeIAMRequest_ResourceId()
}

type RevokeIAMRequest_AccountId struct {
	// Account UID under which user wants to delete role binding
	AccountId string `protobuf:"bytes,101,opt,name=account_id,json=accountId,proto3,oneof"`
}

type RevokeIAMRequest_TenantId struct {
	// Tenant UID  under which user wants to delete role binding
	TenantId string `protobuf:"bytes,102,opt,name=tenant_id,json=tenantId,proto3,oneof"`
}

type RevokeIAMRequest_ProjectId struct {
	// Project UID under which user wants to delete role binding
	ProjectId string `protobuf:"bytes,103,opt,name=project_id,json=projectId,proto3,oneof"`
}

func (*RevokeIAMRequest_AccountId) isRevokeIAMRequest_ResourceId() {}

func (*RevokeIAMRequest_TenantId) isRevokeIAMRequest_ResourceId() {}

func (*RevokeIAMRequest_ProjectId) isRevokeIAMRequest_ResourceId() {}

// GrantIAMResponse is response for GrantIAM API
type RevokeIAMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Any error or success message to show for GrantIAM response
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *RevokeIAMResponse) Reset() {
	*x = RevokeIAMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeIAMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeIAMResponse) ProtoMessage() {}

func (x *RevokeIAMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeIAMResponse.ProtoReflect.Descriptor instead.
func (*RevokeIAMResponse) Descriptor() ([]byte, []int) {
	return file_public_portworx_platform_iam_apiv1_iam_proto_rawDescGZIP(), []int{4}
}

func (x *RevokeIAMResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// GetIAMRequest is the request message to GetIAM API
type GetIAMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Actor ID for which the details need to be fetched
	ActorId string `protobuf:"bytes,2,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
}

func (x *GetIAMRequest) Reset() {
	*x = GetIAMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIAMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIAMRequest) ProtoMessage() {}

func (x *GetIAMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIAMRequest.ProtoReflect.Descriptor instead.
func (*GetIAMRequest) Descriptor() ([]byte, []int) {
	return file_public_portworx_platform_iam_apiv1_iam_proto_rawDescGZIP(), []int{5}
}

func (x *GetIAMRequest) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

// UpdateIAMRequest replaces the existing role binding.
type UpdateIAMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// IAM to be updated
	Iam *IAM `protobuf:"bytes,1,opt,name=iam,proto3" json:"iam,omitempty"`
}

func (x *UpdateIAMRequest) Reset() {
	*x = UpdateIAMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIAMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIAMRequest) ProtoMessage() {}

func (x *UpdateIAMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIAMRequest.ProtoReflect.Descriptor instead.
func (*UpdateIAMRequest) Descriptor() ([]byte, []int) {
	return file_public_portworx_platform_iam_apiv1_iam_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateIAMRequest) GetIam() *IAM {
	if x != nil {
		return x.Iam
	}
	return nil
}

// DeleteIAMRequest is the request message to DeleteIAM API
type DeleteIAMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Actor ID for which the IAM should be deleted.
	ActorId string `protobuf:"bytes,2,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
}

func (x *DeleteIAMRequest) Reset() {
	*x = DeleteIAMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIAMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIAMRequest) ProtoMessage() {}

func (x *DeleteIAMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIAMRequest.ProtoReflect.Descriptor instead.
func (*DeleteIAMRequest) Descriptor() ([]byte, []int) {
	return file_public_portworx_platform_iam_apiv1_iam_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteIAMRequest) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

// ListIAMRequest is an empty request to the ListIAM API
type ListIAMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Actor ID for which the IAM should be listed
	ActorId string `protobuf:"bytes,1,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	// Types that are assignable to ResourceId:
	//
	//	*ListIAMRequest_AccountId
	//	*ListIAMRequest_TenantId
	//	*ListIAMRequest_ProjectId
	ResourceId isListIAMRequest_ResourceId `protobuf_oneof:"resource_id"`
	// Pagination parameters for listing IAM.
	Pagination *apiv1.PageBasedPaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListIAMRequest) Reset() {
	*x = ListIAMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIAMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIAMRequest) ProtoMessage() {}

func (x *ListIAMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIAMRequest.ProtoReflect.Descriptor instead.
func (*ListIAMRequest) Descriptor() ([]byte, []int) {
	return file_public_portworx_platform_iam_apiv1_iam_proto_rawDescGZIP(), []int{8}
}

func (x *ListIAMRequest) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (m *ListIAMRequest) GetResourceId() isListIAMRequest_ResourceId {
	if m != nil {
		return m.ResourceId
	}
	return nil
}

func (x *ListIAMRequest) GetAccountId() string {
	if x, ok := x.GetResourceId().(*ListIAMRequest_AccountId); ok {
		return x.AccountId
	}
	return ""
}

func (x *ListIAMRequest) GetTenantId() string {
	if x, ok := x.GetResourceId().(*ListIAMRequest_TenantId); ok {
		return x.TenantId
	}
	return ""
}

func (x *ListIAMRequest) GetProjectId() string {
	if x, ok := x.GetResourceId().(*ListIAMRequest_ProjectId); ok {
		return x.ProjectId
	}
	return ""
}

func (x *ListIAMRequest) GetPagination() *apiv1.PageBasedPaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type isListIAMRequest_ResourceId interface {
	isListIAMRequest_ResourceId()
}

type ListIAMRequest_AccountId struct {
	// Account UID for which the IAM should be listed
	AccountId string `protobuf:"bytes,101,opt,name=account_id,json=accountId,proto3,oneof"`
}

type ListIAMRequest_TenantId struct {
	// Tenant UID for which the IAM should be listed
	TenantId string `protobuf:"bytes,102,opt,name=tenant_id,json=tenantId,proto3,oneof"`
}

type ListIAMRequest_ProjectId struct {
	// Project UID for which the IAM should be listed
	ProjectId string `protobuf:"bytes,103,opt,name=project_id,json=projectId,proto3,oneof"`
}

func (*ListIAMRequest_AccountId) isListIAMRequest_ResourceId() {}

func (*ListIAMRequest_TenantId) isListIAMRequest_ResourceId() {}

func (*ListIAMRequest_ProjectId) isListIAMRequest_ResourceId() {}

// ListIAMResponse is the response to the ListIAM API and contains the list of IAMs visible to the caller
type ListIAMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the list of IAMs
	Iam []*IAM `protobuf:"bytes,1,rep,name=iam,proto3" json:"iam,omitempty"`
	// (-- api-linter: core::0132::response-unknown-fields=disabled
	//
	//	aip.dev/not-precedent: We need this field for pagination. --)
	//
	// Pagination metadata for this response.
	Pagination *apiv1.PageBasedPaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListIAMResponse) Reset() {
	*x = ListIAMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIAMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIAMResponse) ProtoMessage() {}

func (x *ListIAMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIAMResponse.ProtoReflect.Descriptor instead.
func (*ListIAMResponse) Descriptor() ([]byte, []int) {
	return file_public_portworx_platform_iam_apiv1_iam_proto_rawDescGZIP(), []int{9}
}

func (x *ListIAMResponse) GetIam() []*IAM {
	if x != nil {
		return x.Iam
	}
	return nil
}

func (x *ListIAMResponse) GetPagination() *apiv1.PageBasedPaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// IAM returns the created IAM for given data
type IAM struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Metadata for IAM
	Meta *apiv1.Meta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// Desired configuration of the IAM
	Config *Config `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *IAM) Reset() {
	*x = IAM{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IAM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IAM) ProtoMessage() {}

func (x *IAM) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IAM.ProtoReflect.Descriptor instead.
func (*IAM) Descriptor() ([]byte, []int) {
	return file_public_portworx_platform_iam_apiv1_iam_proto_rawDescGZIP(), []int{10}
}

func (x *IAM) GetMeta() *apiv1.Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *IAM) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

// Config represents the details of the data for IAM across different levels
type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Actor ID for the associated actor
	ActorId string `protobuf:"bytes,1,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	// Actor Type gives the actor type for the concerned actor_id
	ActorType string `protobuf:"bytes,2,opt,name=actor_type,json=actorType,proto3" json:"actor_type,omitempty"`
	// Created/updated IAM
	AccessPolicy *AccessPolicy `protobuf:"bytes,3,opt,name=access_policy,json=accessPolicy,proto3" json:"access_policy,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_public_portworx_platform_iam_apiv1_iam_proto_rawDescGZIP(), []int{11}
}

func (x *Config) GetActorId() string {
	if x != nil {
		return x.ActorId
	}
	return ""
}

func (x *Config) GetActorType() string {
	if x != nil {
		return x.ActorType
	}
	return ""
}

func (x *Config) GetAccessPolicy() *AccessPolicy {
	if x != nil {
		return x.AccessPolicy
	}
	return nil
}

// Access Policy controls access to control plane resources. With IAM, one can centrally manage permissions that control which resources users can access.
type AccessPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Global scope represents the global role names
	GlobalScope []string `protobuf:"bytes,1,rep,name=global_scope,json=globalScope,proto3" json:"global_scope,omitempty"`
	// Account represents the account role names
	Account []string `protobuf:"bytes,2,rep,name=account,proto3" json:"account,omitempty"`
	// Tenant represents the tenant level role bindings and resource IDs
	Tenant []*RoleBinding `protobuf:"bytes,3,rep,name=tenant,proto3" json:"tenant,omitempty"`
	// Project represents the project level role bindings and resource IDS
	Project []*RoleBinding `protobuf:"bytes,4,rep,name=project,proto3" json:"project,omitempty"`
	// Namespace represents the namespace level role bindings and resource IDS
	Namespace []*RoleBinding `protobuf:"bytes,5,rep,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *AccessPolicy) Reset() {
	*x = AccessPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessPolicy) ProtoMessage() {}

func (x *AccessPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessPolicy.ProtoReflect.Descriptor instead.
func (*AccessPolicy) Descriptor() ([]byte, []int) {
	return file_public_portworx_platform_iam_apiv1_iam_proto_rawDescGZIP(), []int{12}
}

func (x *AccessPolicy) GetGlobalScope() []string {
	if x != nil {
		return x.GlobalScope
	}
	return nil
}

func (x *AccessPolicy) GetAccount() []string {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *AccessPolicy) GetTenant() []*RoleBinding {
	if x != nil {
		return x.Tenant
	}
	return nil
}

func (x *AccessPolicy) GetProject() []*RoleBinding {
	if x != nil {
		return x.Project
	}
	return nil
}

func (x *AccessPolicy) GetNamespace() []*RoleBinding {
	if x != nil {
		return x.Namespace
	}
	return nil
}

// RoleBinding represents the tenant/project/namespace level role bindings and resource IDS.
type RoleBinding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Role name represents the role for a tenant/project/namespace.
	RoleName string `protobuf:"bytes,1,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	// Resource IDs represent the IDs bounded for the given role.
	ResourceIds []string `protobuf:"bytes,2,rep,name=resource_ids,json=resourceIds,proto3" json:"resource_ids,omitempty"`
}

func (x *RoleBinding) Reset() {
	*x = RoleBinding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleBinding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleBinding) ProtoMessage() {}

func (x *RoleBinding) ProtoReflect() protoreflect.Message {
	mi := &file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleBinding.ProtoReflect.Descriptor instead.
func (*RoleBinding) Descriptor() ([]byte, []int) {
	return file_public_portworx_platform_iam_apiv1_iam_proto_rawDescGZIP(), []int{13}
}

func (x *RoleBinding) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *RoleBinding) GetResourceIds() []string {
	if x != nil {
		return x.ResourceIds
	}
	return nil
}

var File_public_portworx_platform_iam_apiv1_iam_proto protoreflect.FileDescriptor

var file_public_portworx_platform_iam_apiv1_iam_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72,
	0x78, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x61,
	0x70, 0x69, 0x76, 0x31, 0x2f, 0x69, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2f, 0x70, 0x6f, 0x72,
	0x74, 0x77, 0x6f, 0x72, 0x78, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69,
	0x76, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x4a, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x41, 0x4d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x03, 0x69, 0x61, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f,
	0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x41, 0x4d, 0x52, 0x03, 0x69, 0x61, 0x6d, 0x22,
	0xb9, 0x01, 0x0a, 0x0f, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x41, 0x4d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x03, 0x69, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77,
	0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x41, 0x4d, 0x52, 0x03, 0x69, 0x61, 0x6d, 0x42, 0x0d, 0x0a, 0x0b,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x31, 0x0a, 0x10, 0x47,
	0x72, 0x61, 0x6e, 0x74, 0x49, 0x41, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xba,
	0x01, 0x0a, 0x10, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x49, 0x41, 0x4d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x03, 0x69, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77,
	0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x41, 0x4d, 0x52, 0x03, 0x69, 0x61, 0x6d, 0x42, 0x0d, 0x0a, 0x0b,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x11, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x49, 0x41, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x2a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x49, 0x41, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x10, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x41, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x36, 0x0a, 0x03, 0x69, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x41, 0x4d, 0x52, 0x03, 0x69, 0x61, 0x6d, 0x22, 0x2d, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x49, 0x41, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x22, 0xf2, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x41, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x55, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x64, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x0f,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x41, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x36, 0x0a, 0x03, 0x69, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x41, 0x4d, 0x52, 0x03, 0x69, 0x61, 0x6d, 0x12, 0x56, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65,
	0x64, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x7b, 0x0a, 0x03, 0x49, 0x41, 0x4d, 0x12, 0x33, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f,
	0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x9b, 0x01, 0x0a,
	0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0c, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0xa5, 0x02, 0x0a, 0x0c, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x44, 0x0a, 0x06, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x42,
	0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x12, 0x46,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72,
	0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x4a, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x22, 0x4d, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x73, 0x32, 0xcb, 0x07, 0x0a, 0x0a, 0x49, 0x41, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x7a, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x41, 0x4d, 0x12, 0x31, 0x2e,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e,
	0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x41, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f,
	0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x41, 0x4d, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x3a, 0x03,
	0x69, 0x61, 0x6d, 0x22, 0x07, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x61, 0x6d, 0x12, 0x9f, 0x01, 0x0a,
	0x08, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x49, 0x41, 0x4d, 0x12, 0x30, 0x2e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x49, 0x41, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x49, 0x41, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a, 0x22, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x69,
	0x61, 0x6d, 0x2f, 0x7b, 0x69, 0x61, 0x6d, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x12, 0xa3,
	0x01, 0x0a, 0x09, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x49, 0x41, 0x4d, 0x12, 0x31, 0x2e, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x76, 0x6f, 0x6b, 0x65, 0x49, 0x41, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x32, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72,
	0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x49, 0x41, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a, 0x22, 0x24,
	0x2f, 0x76, 0x31, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x7b, 0x69, 0x61, 0x6d, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x72, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x12, 0x7a, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x49, 0x41, 0x4d, 0x12, 0x2e,
	0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x49, 0x41, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x41, 0x4d, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x76,
	0x31, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x7b, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x7d,
	0x12, 0x89, 0x01, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x41, 0x4d, 0x12, 0x31,
	0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78,
	0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x41, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77,
	0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x41, 0x4d, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a,
	0x03, 0x69, 0x61, 0x6d, 0x1a, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x7b, 0x69,
	0x61, 0x6d, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x75, 0x69, 0x64, 0x7d, 0x12, 0x72, 0x0a, 0x09,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x41, 0x4d, 0x12, 0x31, 0x2e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x49, 0x41, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x2a, 0x12, 0x2f, 0x76,
	0x31, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x7b, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x7d,
	0x12, 0x7d, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x41, 0x4d, 0x12, 0x2f, 0x2e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x41, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x41, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x09, 0x12, 0x07, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x61, 0x6d, 0x42,
	0x71, 0x0a, 0x23, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x6f,
	0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x69, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x42, 0x08, 0x49, 0x41, 0x4d, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70,
	0x75, 0x72, 0x65, 0x2d, 0x70, 0x78, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x77, 0x6f, 0x72, 0x78, 0x2f, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x69, 0x61, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x76, 0x31, 0x3b, 0x69,
	0x61, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_public_portworx_platform_iam_apiv1_iam_proto_rawDescOnce sync.Once
	file_public_portworx_platform_iam_apiv1_iam_proto_rawDescData = file_public_portworx_platform_iam_apiv1_iam_proto_rawDesc
)

func file_public_portworx_platform_iam_apiv1_iam_proto_rawDescGZIP() []byte {
	file_public_portworx_platform_iam_apiv1_iam_proto_rawDescOnce.Do(func() {
		file_public_portworx_platform_iam_apiv1_iam_proto_rawDescData = protoimpl.X.CompressGZIP(file_public_portworx_platform_iam_apiv1_iam_proto_rawDescData)
	})
	return file_public_portworx_platform_iam_apiv1_iam_proto_rawDescData
}

var file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_public_portworx_platform_iam_apiv1_iam_proto_goTypes = []interface{}{
	(*CreateIAMRequest)(nil),                  // 0: public.portworx.platform.iam.v1.CreateIAMRequest
	(*GrantIAMRequest)(nil),                   // 1: public.portworx.platform.iam.v1.GrantIAMRequest
	(*GrantIAMResponse)(nil),                  // 2: public.portworx.platform.iam.v1.GrantIAMResponse
	(*RevokeIAMRequest)(nil),                  // 3: public.portworx.platform.iam.v1.RevokeIAMRequest
	(*RevokeIAMResponse)(nil),                 // 4: public.portworx.platform.iam.v1.RevokeIAMResponse
	(*GetIAMRequest)(nil),                     // 5: public.portworx.platform.iam.v1.GetIAMRequest
	(*UpdateIAMRequest)(nil),                  // 6: public.portworx.platform.iam.v1.UpdateIAMRequest
	(*DeleteIAMRequest)(nil),                  // 7: public.portworx.platform.iam.v1.DeleteIAMRequest
	(*ListIAMRequest)(nil),                    // 8: public.portworx.platform.iam.v1.ListIAMRequest
	(*ListIAMResponse)(nil),                   // 9: public.portworx.platform.iam.v1.ListIAMResponse
	(*IAM)(nil),                               // 10: public.portworx.platform.iam.v1.IAM
	(*Config)(nil),                            // 11: public.portworx.platform.iam.v1.Config
	(*AccessPolicy)(nil),                      // 12: public.portworx.platform.iam.v1.AccessPolicy
	(*RoleBinding)(nil),                       // 13: public.portworx.platform.iam.v1.RoleBinding
	(*apiv1.PageBasedPaginationRequest)(nil),  // 14: public.portworx.common.v1.PageBasedPaginationRequest
	(*apiv1.PageBasedPaginationResponse)(nil), // 15: public.portworx.common.v1.PageBasedPaginationResponse
	(*apiv1.Meta)(nil),                        // 16: public.portworx.common.v1.Meta
	(*emptypb.Empty)(nil),                     // 17: google.protobuf.Empty
}
var file_public_portworx_platform_iam_apiv1_iam_proto_depIdxs = []int32{
	10, // 0: public.portworx.platform.iam.v1.CreateIAMRequest.iam:type_name -> public.portworx.platform.iam.v1.IAM
	10, // 1: public.portworx.platform.iam.v1.GrantIAMRequest.iam:type_name -> public.portworx.platform.iam.v1.IAM
	10, // 2: public.portworx.platform.iam.v1.RevokeIAMRequest.iam:type_name -> public.portworx.platform.iam.v1.IAM
	10, // 3: public.portworx.platform.iam.v1.UpdateIAMRequest.iam:type_name -> public.portworx.platform.iam.v1.IAM
	14, // 4: public.portworx.platform.iam.v1.ListIAMRequest.pagination:type_name -> public.portworx.common.v1.PageBasedPaginationRequest
	10, // 5: public.portworx.platform.iam.v1.ListIAMResponse.iam:type_name -> public.portworx.platform.iam.v1.IAM
	15, // 6: public.portworx.platform.iam.v1.ListIAMResponse.pagination:type_name -> public.portworx.common.v1.PageBasedPaginationResponse
	16, // 7: public.portworx.platform.iam.v1.IAM.meta:type_name -> public.portworx.common.v1.Meta
	11, // 8: public.portworx.platform.iam.v1.IAM.config:type_name -> public.portworx.platform.iam.v1.Config
	12, // 9: public.portworx.platform.iam.v1.Config.access_policy:type_name -> public.portworx.platform.iam.v1.AccessPolicy
	13, // 10: public.portworx.platform.iam.v1.AccessPolicy.tenant:type_name -> public.portworx.platform.iam.v1.RoleBinding
	13, // 11: public.portworx.platform.iam.v1.AccessPolicy.project:type_name -> public.portworx.platform.iam.v1.RoleBinding
	13, // 12: public.portworx.platform.iam.v1.AccessPolicy.namespace:type_name -> public.portworx.platform.iam.v1.RoleBinding
	0,  // 13: public.portworx.platform.iam.v1.IAMService.CreateIAM:input_type -> public.portworx.platform.iam.v1.CreateIAMRequest
	1,  // 14: public.portworx.platform.iam.v1.IAMService.GrantIAM:input_type -> public.portworx.platform.iam.v1.GrantIAMRequest
	3,  // 15: public.portworx.platform.iam.v1.IAMService.RevokeIAM:input_type -> public.portworx.platform.iam.v1.RevokeIAMRequest
	5,  // 16: public.portworx.platform.iam.v1.IAMService.GetIAM:input_type -> public.portworx.platform.iam.v1.GetIAMRequest
	6,  // 17: public.portworx.platform.iam.v1.IAMService.UpdateIAM:input_type -> public.portworx.platform.iam.v1.UpdateIAMRequest
	7,  // 18: public.portworx.platform.iam.v1.IAMService.DeleteIAM:input_type -> public.portworx.platform.iam.v1.DeleteIAMRequest
	8,  // 19: public.portworx.platform.iam.v1.IAMService.ListIAM:input_type -> public.portworx.platform.iam.v1.ListIAMRequest
	10, // 20: public.portworx.platform.iam.v1.IAMService.CreateIAM:output_type -> public.portworx.platform.iam.v1.IAM
	2,  // 21: public.portworx.platform.iam.v1.IAMService.GrantIAM:output_type -> public.portworx.platform.iam.v1.GrantIAMResponse
	4,  // 22: public.portworx.platform.iam.v1.IAMService.RevokeIAM:output_type -> public.portworx.platform.iam.v1.RevokeIAMResponse
	10, // 23: public.portworx.platform.iam.v1.IAMService.GetIAM:output_type -> public.portworx.platform.iam.v1.IAM
	10, // 24: public.portworx.platform.iam.v1.IAMService.UpdateIAM:output_type -> public.portworx.platform.iam.v1.IAM
	17, // 25: public.portworx.platform.iam.v1.IAMService.DeleteIAM:output_type -> google.protobuf.Empty
	9,  // 26: public.portworx.platform.iam.v1.IAMService.ListIAM:output_type -> public.portworx.platform.iam.v1.ListIAMResponse
	20, // [20:27] is the sub-list for method output_type
	13, // [13:20] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_public_portworx_platform_iam_apiv1_iam_proto_init() }
func file_public_portworx_platform_iam_apiv1_iam_proto_init() {
	if File_public_portworx_platform_iam_apiv1_iam_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIAMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantIAMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantIAMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeIAMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeIAMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIAMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIAMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIAMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIAMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIAMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IAM); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleBinding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*GrantIAMRequest_AccountId)(nil),
		(*GrantIAMRequest_TenantId)(nil),
		(*GrantIAMRequest_ProjectId)(nil),
	}
	file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*RevokeIAMRequest_AccountId)(nil),
		(*RevokeIAMRequest_TenantId)(nil),
		(*RevokeIAMRequest_ProjectId)(nil),
	}
	file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*ListIAMRequest_AccountId)(nil),
		(*ListIAMRequest_TenantId)(nil),
		(*ListIAMRequest_ProjectId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_public_portworx_platform_iam_apiv1_iam_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_public_portworx_platform_iam_apiv1_iam_proto_goTypes,
		DependencyIndexes: file_public_portworx_platform_iam_apiv1_iam_proto_depIdxs,
		MessageInfos:      file_public_portworx_platform_iam_apiv1_iam_proto_msgTypes,
	}.Build()
	File_public_portworx_platform_iam_apiv1_iam_proto = out.File
	file_public_portworx_platform_iam_apiv1_iam_proto_rawDesc = nil
	file_public_portworx_platform_iam_apiv1_iam_proto_goTypes = nil
	file_public_portworx_platform_iam_apiv1_iam_proto_depIdxs = nil
}
