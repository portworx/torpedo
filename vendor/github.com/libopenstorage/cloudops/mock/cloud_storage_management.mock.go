// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/libopenstorage/cloudops (interfaces: StorageManager)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	cloudops "github.com/libopenstorage/cloudops"
	reflect "reflect"
)

// MockStorageManager is a mock of StorageManager interface
type MockStorageManager struct {
	ctrl     *gomock.Controller
	recorder *MockStorageManagerMockRecorder
}

// MockStorageManagerMockRecorder is the mock recorder for MockStorageManager
type MockStorageManagerMockRecorder struct {
	mock *MockStorageManager
}

// NewMockStorageManager creates a new mock instance
func NewMockStorageManager(ctrl *gomock.Controller) *MockStorageManager {
	mock := &MockStorageManager{ctrl: ctrl}
	mock.recorder = &MockStorageManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStorageManager) EXPECT() *MockStorageManagerMockRecorder {
	return m.recorder
}

// GetStorageDistribution mocks base method
func (m *MockStorageManager) GetStorageDistribution(arg0 *cloudops.StorageDistributionRequest) (*cloudops.StorageDistributionResponse, error) {
	ret := m.ctrl.Call(m, "GetStorageDistribution", arg0)
	ret0, _ := ret[0].(*cloudops.StorageDistributionResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStorageDistribution indicates an expected call of GetStorageDistribution
func (mr *MockStorageManagerMockRecorder) GetStorageDistribution(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStorageDistribution", reflect.TypeOf((*MockStorageManager)(nil).GetStorageDistribution), arg0)
}

// RecommendStoragePoolUpdate mocks base method
func (m *MockStorageManager) RecommendStoragePoolUpdate(arg0 *cloudops.StoragePoolUpdateRequest) (*cloudops.StoragePoolUpdateResponse, error) {
	ret := m.ctrl.Call(m, "RecommendStoragePoolUpdate", arg0)
	ret0, _ := ret[0].(*cloudops.StoragePoolUpdateResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RecommendStoragePoolUpdate indicates an expected call of RecommendStoragePoolUpdate
func (mr *MockStorageManagerMockRecorder) RecommendStoragePoolUpdate(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecommendStoragePoolUpdate", reflect.TypeOf((*MockStorageManager)(nil).RecommendStoragePoolUpdate), arg0)
}
