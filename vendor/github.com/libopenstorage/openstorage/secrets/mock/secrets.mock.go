// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/libopenstorage/openstorage/secrets (interfaces: Secrets)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockSecrets is a mock of Secrets interface
type MockSecrets struct {
	ctrl     *gomock.Controller
	recorder *MockSecretsMockRecorder
}

// MockSecretsMockRecorder is the mock recorder for MockSecrets
type MockSecretsMockRecorder struct {
	mock *MockSecrets
}

// NewMockSecrets creates a new mock instance
func NewMockSecrets(ctrl *gomock.Controller) *MockSecrets {
	mock := &MockSecrets{ctrl: ctrl}
	mock.recorder = &MockSecretsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSecrets) EXPECT() *MockSecretsMockRecorder {
	return m.recorder
}

// SecretCheckLogin mocks base method
func (m *MockSecrets) SecretCheckLogin() error {
	ret := m.ctrl.Call(m, "SecretCheckLogin")
	ret0, _ := ret[0].(error)
	return ret0
}

// SecretCheckLogin indicates an expected call of SecretCheckLogin
func (mr *MockSecretsMockRecorder) SecretCheckLogin() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SecretCheckLogin", reflect.TypeOf((*MockSecrets)(nil).SecretCheckLogin))
}

// SecretGet mocks base method
func (m *MockSecrets) SecretGet(arg0 string) (interface{}, error) {
	ret := m.ctrl.Call(m, "SecretGet", arg0)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SecretGet indicates an expected call of SecretGet
func (mr *MockSecretsMockRecorder) SecretGet(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SecretGet", reflect.TypeOf((*MockSecrets)(nil).SecretGet), arg0)
}

// SecretGetDefaultSecretKey mocks base method
func (m *MockSecrets) SecretGetDefaultSecretKey() (interface{}, error) {
	ret := m.ctrl.Call(m, "SecretGetDefaultSecretKey")
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SecretGetDefaultSecretKey indicates an expected call of SecretGetDefaultSecretKey
func (mr *MockSecretsMockRecorder) SecretGetDefaultSecretKey() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SecretGetDefaultSecretKey", reflect.TypeOf((*MockSecrets)(nil).SecretGetDefaultSecretKey))
}

// SecretLogin mocks base method
func (m *MockSecrets) SecretLogin(arg0 string, arg1 map[string]string) error {
	ret := m.ctrl.Call(m, "SecretLogin", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SecretLogin indicates an expected call of SecretLogin
func (mr *MockSecretsMockRecorder) SecretLogin(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SecretLogin", reflect.TypeOf((*MockSecrets)(nil).SecretLogin), arg0, arg1)
}

// SecretSet mocks base method
func (m *MockSecrets) SecretSet(arg0 string, arg1 interface{}) error {
	ret := m.ctrl.Call(m, "SecretSet", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SecretSet indicates an expected call of SecretSet
func (mr *MockSecretsMockRecorder) SecretSet(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SecretSet", reflect.TypeOf((*MockSecrets)(nil).SecretSet), arg0, arg1)
}

// SecretSetDefaultSecretKey mocks base method
func (m *MockSecrets) SecretSetDefaultSecretKey(arg0 string, arg1 bool) error {
	ret := m.ctrl.Call(m, "SecretSetDefaultSecretKey", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SecretSetDefaultSecretKey indicates an expected call of SecretSetDefaultSecretKey
func (mr *MockSecretsMockRecorder) SecretSetDefaultSecretKey(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SecretSetDefaultSecretKey", reflect.TypeOf((*MockSecrets)(nil).SecretSetDefaultSecretKey), arg0, arg1)
}
