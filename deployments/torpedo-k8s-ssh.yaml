apiVersion: v1
kind: ServiceAccount
metadata:
  name: torpedo-account
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1alpha1
metadata:
   name: torpedo-role
rules:
  - apiGroups:
      # have access to everything except Secrets
      - "*"
    resources: ["*"]
    verbs: ["*"]
  - nonResourceURLs: ["*"]
    verbs: ["*"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1alpha1
metadata:
  name: torpedo-role-binding
subjects:
- apiVersion: v1
  kind: ServiceAccount
  name: torpedo-account
  namespace: default
roleRef:
  kind: ClusterRole
  name: torpedo-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Pod
metadata:
  name: torpedo
spec:
  tolerations:
  - key: node-role.kubernetes.io/master
    operator: Equal
    effect: NoSchedule
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node-role.kubernetes.io/master
            operator: Exists
  containers:
  - name: torpedo
    #image: portworx/torpedo:latest
    image: 192.168.56.1:5000/harshpx/torpedo:latest
    command: [ "ginkgo",
               "--slowSpecThreshold", "360",
               "-failFast",
               "-v",
               "bin/basic.test",
               "--",
               "--spec-dir", "../drivers/scheduler/k8s/specs"]
               # "../drivers/scheduler/k8s/specs" is the default k8s specs checked-in with torpedo. If you have custom
               # specs, mount them into the pod using a hostPath volume and specify the target mount path here
    tty: true
    volumeMounts:
    - mountPath: /mnt/torpedo_support_bundle
      name: support-bundle-path
  restartPolicy: Never
  serviceAccountName: torpedo-account
  volumes:
    - name: support-bundle-path
      hostPath:
        path: /mnt/torpedo_support_bundle
