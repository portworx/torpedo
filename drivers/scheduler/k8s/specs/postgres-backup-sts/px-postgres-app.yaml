apiVersion: v1
kind: Service
metadata:
  name: postgres
  annotations:
    startDataSupported: "true"
    username: "pgbench"
    password: "superpostgres"
    databaseName: "postgres"
    port: "5432"
    appType: "postgres"
spec:
  type: NodePort
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: "postgres"
  {{ if .Replicas }}
  replicas: {{ .Replicas }}
  {{ else }}
  replicas: 1{{ end }}
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:9.5
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: pgbench
            - name: POSTGRES_PASSWORD
              value: superpostgres
            - name: PGBENCH_PASSWORD
              value: superpostgres
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
          readinessProbe:
            exec:
              command: ["psql", "-U", "pgbench", "-c", "SELECT 1"]
            initialDelaySeconds: 15
            timeoutSeconds: 2
          livenessProbe:
            exec:
              command: ["psql", "-U", "pgbench", "-c", "SELECT 1"]
            initialDelaySeconds: 45
            timeoutSeconds: 2
  volumeClaimTemplates:
    - metadata:
        name: postgredb
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: postgres-sc
        resources:
          requests:
            storage: 1Gi